[general]
problem = "ThermalPN"
testCase = "MarshakEfficient"
outputDir = "../results/thermal"
writeFrequency = 10000

[mesh]
dimension = 1
numberOfCells = 100
a = 0.0
b = 0.2
# b = 1.0/92.6/1e-6 / 100 * 0.1 choice Ryan for lambda = 92.6*1e-6 but smaller domain
#b = 64.79481641468684
# b = 1.0/9.26/1e-6 / 100 * 0.06 choice Ryan for lambda = 9.26*1e-6
#b = 26.99784017278618
# b = 1.0/92.6/1e-6 / 100 * 0.25 choice Ryan for lambda = 92.6*1e-6
#b = 26.997840172786184
# b = 1.0/9.26/1e-6 / 100 * 0.025
#b = 2.6997840172786187
# b = 1.0/92.6/1e-6 / 100 * 0.025 original choice
#b = 10.799136069114475
# b = 1.0/92.6/1e-6 / 100 * 0.1 corrected choice due to error in paper
outputFile = "Marshak1DUncertainty_PN3"

[problem]
# available timesteppings: explicitEuler
timestepping = "explicitEuler"
# available distributions: Legendre, Hermite
distribution = [["Legendre"],[0.0]]
CFL = 0.5
#tEnd = 1.5604747813822897e6 # epsilon = 0
tEnd = 5e-12
# tEnd = 48.2 * 1e-9 * 299792458.0 * 100.0 
#tEnd = 4.796679328
#tEnd = 100
#tEnd = 156155.50755939528
nPNMoments = 3

[moment_system]
# available closures: StochasticGalerkin, Euler, Euler2D, L2Filter, LassoFilter, RegularizedEuler, RadiationHydrodynamics, M1, ThermalRadiation
closure = "StochasticGalerkin"
moments = [["totalDegree"],[5]]
quadPoints = [["tensorizedGrid"],[10]]
nMultiElements = 1
#refinementThresholds = [0.1,0.001]
maxIterations = 1
epsilon = 1e-7
