# callgrind format
version: 1
creator: callgrind-3.14.0
pid: 3170
cmd:  ./UQCreator -c ../input/example_euler2D.toml
part: 1


desc: I1 cache: 
desc: D1 cache: 
desc: LL cache: 

desc: Timerange: Basic block 0 - 29847592509
desc: Trigger: dump

positions: instr line
events: Ir
summary: 221360966953


ob=(5) ???
fl=(4) ???
fn=(676) 0x0000000000120920
0x120920 0 18
cob=(1) /usr/lib/libc-2.28.so
cfi=(6) ???
cfn=(678) __strlen_avx2
calls=18 0x15f700 0 
* 0 432

fn=(906) 0x00000000078dd370
0x78dd370 0 36
+4 0 36
cob=(1)
cfi=(6)
cfn=(464) __memset_avx2_unaligned_erms
calls=36 0x1600e0 0 
* 0 540

fn=(928) 0x00000000078dd2d0
0x78dd2d0 0 108
+4 0 108
cob=(1)
cfi=(6)
cfn=(678)
calls=108 0x15f700 0 
* 0 1872

fn=(1636) 0x0000000000120938
0x120938 0 17
cob=(10) /usr/lib/libstdc++.so.6.0.25
cfi=(36) /build/gcc/src/gcc/libstdc++-v3/libsupc++/del_op.cc
cfn=(240) operator delete(void*)
calls=17 0x8e610 48 
* 0 5649

fn=(980) 0x00000000001208f8
0x1208f8 0 144
cob=(1)
cfi=(6)
cfn=(932) __memcpy_avx_unaligned_erms
calls=144 0x15fc60 0 
* 0 1473192

fn=(1116) 0x00000000078dd380
0x78dd380 0 36
+4 0 36
cob=(1)
cfi=(6)
cfn=(1118) __strcmp_avx2
calls=36 0x15ac00 0 
* 0 756

fn=(1228) 0x00000000001208f0
0x1208f0 0 36
cob=(10)
cfi=(42) /build/gcc/src/gcc/libstdc++-v3/libsupc++/new_op.cc
cfn=(272) operator new(unsigned long)
calls=36 0x905e0 43 
* 0 5562

fn=(1650) 0x00000000001208e8
0x1208e8 0 17
cob=(10)
cfi=(85) /build/gcc/src/gcc/libstdc++-v3/libsupc++/del_ops.cc
cfn=(1652) operator delete(void*, unsigned long)
calls=17 0x8e620 32 
* 0 1462

ob=(4) /usr/lib/libquadmath.so.0.0.0
fl=(61) /build/gcc/src/gcc/libquadmath/printf/quadmath-printf.c
fn=(908) flt128_printf_fp
0x217e0 364 36
+4 * 36
+4 * 36
+9 * 36
+5 * 36
+2 +1 36
+4 +3 36
+4 -3 36
+9 * 36
+9 * 36
+9 * 36
+8 +3 36
+6 * 36
jcnd=36/36 +39 +1 
* * 
+10 +4 36
+5 * 36
+9 * 36
+2 * 36
+4 * 36
+9 -3 36
+5 * 36
jump=36 -34 +3 
* * 

fn=(902) flt128_ais
0x216d0 288 36
+4 +1 36
+4 +69 36
+5 -69 36
+6 * 36
+2 +70 36

ob=(3) /usr/lib/libgomp.so.1.0.0
fl=(48) /build/gcc/src/gcc/libgomp/parallel.c
fn=(1398) gomp_resolve_num_threads
0xdd40 40 35
+4 * 35
+2 * 35
+2 * 35
+1 * 35
+1 * 35
fi=(74) /build/gcc/src/gcc/libgomp/libgomp.h
+4 677 35
+7 * 35
+5 +2 35
+7 * 35
+3 * 35
+7 * 35
fe=(48)
+4 49 35
+3 * 35
+6 +2 35
+4 * 35
+2 * 35
jcnd=35/35 +14 +2 
* * 
+14 +2 35
+7 * 35
+6 +4 35
+2 * 35
+2 * 35
+2 +1 35
+4 +8 35
+6 * 35
+6 +12 35
+5 * 35
+3 * 35
jcnd=35/35 0xde35 +42 
* * 
0xde35 +42 35
+4 * 35
+2 * 35
+1 * 35
+1 * 35
+2 * 35
+2 * 35

fn=(606) GOMP_parallel
cob=(2) /home/jannick/Projects/UQCreator/code/bin/UQCreator
cfi=(38) /home/jannick/Projects/UQCreator/code/src/momentsolver.cpp
cfn=(248) MomentSolver::Solve() [clone ._omp_fn.0]
calls=1 0xa9da7 66 
0xdfa2 168 1157587198
0xdfa3 170 1
+4 * 1
+1 * 1
+1 * 1
+2 * 1
+2 -1 1
cfn=(608) GOMP_parallel_end
calls=1 0xded0 -38 
* * 141
fi=(38)
0xa81eb 64 17
+7 * 17
+5 * 17
+8 * 17
+4 * 17
+6 +1 17
+4 * 17
+8 +1 17
+8 * 17
+5 * 17
+7 * 17
+4 * 17
+7 * 17
+4 * 17
+7 * 17
+4 * 17
+7 * 17
+4 * 17
+4 * 17
+5 * 17
+5 * 17
+3 * 17
+7 * 17
cfi=(48)
cfn=(607) GOMP_parallel'2
calls=17 0xdf60 +99 
* * 52821433969
* * 17
+5 * 18
+5 * 18
+8 +8 18
+7 * 18
+3 * 18
cob=(2)
cfi=(21) /usr/include/c++/8.2.1/bits/shared_ptr_base.h
cfn=(124) std::__shared_ptr_access<spdlog::logger, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
calls=18 0x1f524 988 
* * 450
+5 * 18
+3 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
+7 * 18
cob=(2)
cfi=(22) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/logger_impl.h
cfn=(618) void spdlog::logger::info<double, double>(char const*, double const&, double const&)
calls=18 0xaa0d4 +62 
* * 349539
+5 +2 18
+7 * 18
+4 * 18
+7 * 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+4 * 18
+3 * 18
+3 * 18
cob=(2)
cfi=(10) /usr/include/c++/8.2.1/bits/std_function.h
cfn=(1216) std::function<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::function<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>, void, void>(std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>)
calls=18 0xaa11e 666 
* * 12492
+5 * 18
+7 * 18
+7 * 18
+7 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
cob=(2)
cfi=(77) /home/jannick/Projects/UQCreator/code/src/expliciteuler.cpp
cfn=(1322) ExplicitEuler::Advance(std::function<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> const&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&)
calls=18 0x80900 -68 
* * 33231128242
+2 * 17
+4 * 17
+3 * 17
cob=(2)
cfi=(10)
cfn=(1642) std::function<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::~function()
calls=17 0xa9dc6 370 
* * 2975
+5 -12 17
+7 * 17
+5 * 17
+8 * 17
+4 * 17
+8 * 17
jump=17 0xa81eb * 
* * 
fe=(48)

fn=(607)
0xdf60 165 35
+4 * 35
+2 * 35
+3 * 35
+2 * 35
+1 * 35
+3 +1 35
+2 -1 35
+1 * 35
+3 +1 35
+2 -1 35
+4 +1 35
cfn=(1398)
calls=35 0xdd40 40 
* * 1225
+5 +1 35
+2 -1 35
+3 +1 35
cfi=(49) /build/gcc/src/gcc/libgomp/team.c
cfn=(1400) gomp_new_team
calls=35 0x16af0 -6 
* * 2835
+5 * 35
+3 * 35
+3 * 35
+3 * 35
+3 * 35
+3 * 35
cfi=(49)
cfn=(1406) gomp_team_start
calls=35 0x16cf0 301 
* * 170415
+5 +1 35
+3 * 35
cob=(2)
cfi=(38)
cfn=(248)
calls=17 0xa9a74 66 
* * 52821354658
cob=(2)
cfi=(77)
cfn=(1410) ExplicitEuler::Advance(std::function<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> const&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&, std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >&) [clone ._omp_fn.0]
calls=18 0x80ac4 13 
* * 33228537584
+2 +2 34
+4 * 34
+1 * 34
+1 * 34
+2 * 34
+2 -1 34
cfn=(608)
calls=34 0xded0 -38 
* * 963517

fn=(1416) omp_get_num_threads
0xe0c0 238 140
+4 +1 140
+7 * 140
+5 +1 140
+5 * 140
+3 * 140
+2 * 140
+2 +1 140

fn=(500) omp_in_parallel
0xe0f0 255 763160
+4 +1 763160
+7 * 763160
+4 * 763160
+2 * 763160
+3 * 763160
+3 +1 763160

fn=(608)
0xded0 131 35
+4 * 35
+1 * 35
+1 * 35
fi=(74)
+4 677 35
+7 * 35
+5 +2 35
+3 * 35
+7 * 35
+7 * 35
fe=(48)
+4 133 35
+4 * 35
+2 +27 35
+4 * 35
+1 * 35
+1 -22 35
cfi=(49)
cfn=(610) gomp_team_end
calls=35 0x17ee0 869 
* * 963098

fn=(1420) omp_get_thread_num
0xe0e0 245 140
+4 +1 140
+7 * 140
+4 +1 140

fl=(50) /build/gcc/src/gcc/libgomp/config/linux/bar.c
fn=(1194) gomp_barrier_wait
0x191d0 55 140
fi=(86) /build/gcc/src/gcc/libgomp/config/linux/bar.h
+4 +36 140
+3 +7 140
+5 -6 140
+3 +6 140
+5 +1 140
+2 * 140
+3 * 140
+3 * 140
fe=(50)
+3 -43 140
cfn=(1196) gomp_barrier_wait_end
calls=140 0x190d0 -20 
* * 517251

fn=(598) gomp_team_barrier_wait_final
0x19430 132 140
fi=(86)
+4 -17 140
+3 +1 140
+3 +2 140
+5 * 140
jfi=(50)
jcnd=105/140 +10 +18 
* * 
fe=(50)
+2 +17 35
fi=(86)
+2 -16 35
fe=(50)
+3 +16 35
+3 +1 35
cfn=(600) gomp_team_barrier_wait_end
calls=35 0x19280 -54 
* * 1225
* * 105
cfn=(600)
calls=105 0x19280 -54 
* * 29096299

fn=(1196)
0x190d0 36 140
+4 * 140
+3 * 140
+2 * 140
fi=(52) /build/gcc/src/gcc/libgomp/config/linux/x86/futex.h
+4 +3 140
fe=(50)
+6 -2 140
+4 * 140
jcnd=35/140 0x19180 +3 
* * 
+6 * 105
fi=(51) /build/gcc/src/gcc/libgomp/config/linux/wait.h
+3 +13 105
+7 +2 105
+7 * 105
+7 * 105
+2 +4 105
+3 * 105
+2 * 105
+2 * 105
jump=105 +13 +1 
* * 
fi=(52)
+2 +74 73453
fi=(51)
+2 -74 73453
+4 * 73453
+3 * 73453
+2 +1 73558
+2 * 73558
+2 * 73558
jfi=(52)
jcnd=73453/73558 -15 +73 
* * 
fe=(50)
+2 -8 105
+2 * 105
+2 * 105
+2 * 105
+89 -9 35
+2 * 35
+3 +1 35
+3 * 35
+3 * 35
fi=(52)
+3 +20 35
+5 * 35
+3 * 35
+6 * 35
+2 +5 35
+4 * 35
fe=(50)
+2 -15 35

fn=(600)
0x19280 82 140
+4 * 140
+2 * 140
+2 * 140
+2 * 140
+1 * 140
+4 * 140
+1 * 140
+2 +3 140
+3 * 140
jcnd=35/140 0x19378 +4 
* * 
+6 +24 105
fi=(52)
+3 -70 105
fe=(50)
+6 +70 105
+4 * 105
+4 * 105
fi=(51)
+4 -59 105
+7 +2 105
+7 * 105
+7 * 105
+6 +4 105
+3 * 105
+2 * 105
+2 * 105
jump=105 +17 +1 
* * 
fi=(52)
+6 +74 4156012
fi=(51)
+2 -74 4156012
+4 * 4156012
+3 * 4156012
jfi=(52)
jcnd=3/4156012 +47 -18 
* * 
+2 +1 4156114
+3 * 4156114
+2 * 4156114
jfi=(52)
jcnd=4156012/4156114 -16 +73 
* * 
fe=(50)
+2 +56 105
+3 +1 105
+2 * 105
+2 +5 105
+2 * 105
+3 * 105
+2 +2 105
+3 * 105
+2 +1 140
+1 * 140
+1 * 140
+2 * 140
+2 * 140
+2 * 140
fi=(52)
+11 -84 3
+3 +1 3
+6 * 3
+3 * 3
+3 * 3
+2 * 3
+2 +5 3
+4 * 3
jfi=(50)
jcnd=3/3 -61 +69 
* * 
fe=(50)
+81 +45 35
+7 +2 35
+2 -2 35
+5 +2 35
+3 +1 35
+10 +1 35
+6 * 35
+2 * 35
+2 +7 35
fi=(52)
+3 -39 35
+6 * 35
fe=(50)
+5 +40 35
+3 +1 35
fi=(52)
+3 -41 35
+3 * 35
+3 * 35
+6 * 35
+2 +5 35
+4 * 35
jfi=(50)
jcnd=35/35 0x192fd +56 
* * 
fe=(50)

fl=(54) /build/gcc/src/gcc/libgomp/task.c
fn=(1408) gomp_init_task
0xf9a0 67 140
+4 +10 140
+4 -1 140
+3 +1 140
+7 * 140
+5 * 140
+7 * 140
+4 +2 140
+8 -2 140
+7 +1 140
fi=(87) /build/gcc/src/gcc/libgomp/priority_queue.h
+11 +71 140
+8 +7 140
+8 +1 140
fe=(54)
+8 -72 140
+8 +1 140
+8 +1 140
+8 +1 140
+8 +1 140

fn=(614) gomp_end_task
0xfa20 95 35
+4 * 35
+1 * 35
+1 * 35
+4 +2 35
+7 * 35
fi=(74)
+5 777 35
+4 * 35
+3 * 35
fe=(54)
+2 100 35
+4 * 35
+5 +1 35
+4 * 35
+1 * 35
+1 * 35

fl=(49)
fn=(610)
0x17ee0 869 35
+4 * 35
+2 * 35
+2 * 35
+2 * 35
+2 * 35
+1 * 35
+1 * 35
+4 +2 35
+7 * 35
+5 +6 35
+7 * 35
+3 * 35
cfi=(50)
cfn=(598)
calls=35 0x19430 132 
* * 960263
+5 +1 35
+6 * 35
+2 * 35
+6 +14 35
+5 * 35
cfi=(53) /build/gcc/src/gcc/libgomp/work.c
cfn=(612) gomp_fini_work_share
calls=35 0x18230 126 
* * 665
+5 +2 35
cfi=(54)
cfn=(614)
calls=35 0xfa20 95 
* * 525
+5 +1 35
+5 * 35
+5 * 35
+5 +2 35
+6 -2 35
+5 * 35
+5 * 35
+5 * 35
+5 * 35
+5 +2 35
+2 +14 35
+7 * 35
+3 * 35
+2 +14 35
+3 * 35
+2 +4 35
+5 +1 35
+4 * 35
+3 * 35
jcnd=35/35 +8 +2 
* * 
+8 +2 35
+4 +3 35
+4 * 35
+1 * 35
+1 * 35
+2 * 35
+2 * 35
+2 * 35
+2 * 35

fn=(1400)
0x16af0 161 35
+4 * 35
+2 * 35
+2 * 35
+3 * 35
+1 * 35
+3 * 35
+1 * 35
+4 -17 35
+7 * 35
+6 * 35
jfi=(82) /build/gcc/src/gcc/libgomp/config/posix/pool.h
jcnd=35/35 0x16c70 39 
* * 
+70 +41 35
+7 -4 35
+7 +5 35
+2 * 35
+2 -3 35
+8 +2 35
+4 +1 35
cfi=(53)
cfn=(1404) gomp_init_work_share
calls=35 0x181a0 -91 
* * 525
+5 +3 35
+7 +7 35
+4 -9 35
+11 +2 35
+4 +2 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 * 35
+7 +4 35
+4 * 35
+4 -7 35
+8 +7 35
fi=(88) /build/gcc/src/gcc/libgomp/config/linux/sem.h
+4 48 35
fe=(49)
+7 195 35
+8 -3 35
+11 +3 35
+4 +1 35
+3 +10 35
fi=(87)
+3 -57 35
+11 +7 35
+11 +1 35
fe=(49)
+11 +42 35
+11 +2 35
+11 +2 35
+10 +3 35
+4 * 35
+1 * 35
+1 * 35
+2 * 35
+2 * 35
fi=(82)
+5 39 35
+5 +1 35
+3 * 35
fe=(49)
+2 147 35
+4 +1 35
+3 * 35
+6 * 35
+2 * 35
+6 +2 35
+8 +16 35
jump=35 0x16b57 +19 
* * 

fn=(1406)
0x16cf0 301 35
+4 * 35
+1 * 35
+3 * 35
+2 * 35
+2 * 35
+3 * 35
+2 * 35
+2 * 35
+1 * 35
+7 * 35
+6 +16 35
+7 -16 35
+7 * 35
+7 * 35
+9 * 35
+4 * 35
+2 +16 35
+5 * 35
+6 +1 35
+5 * 35
+7 +1 35
+5 +1 35
+7 * 35
+3 * 35
+7 -1 35
+7 +1 35
+4 +1 35
+8 -1 35
+7 -3 35
+2 +4 35
+6 +6 35
+7 +4 35
+3 -4 35
+5 * 35
+7 * 35
+5 * 35
+7 * 35
+5 * 35
+7 * 35
+5 +2 35
+5 +1 35
+9 +1 35
+5 +1 35
+7 * 35
+2 +1 35
+6 +1 35
+7 * 35
+7 * 35
+5 +6 35
+7 -5 35
+9 +2 35
+9 +2 35
+9 +1 35
+5 +1 35
+7 +1 35
+7 -1 35
+3 * 35
+7 +1 35
+3 * 35
+6 +3 35
+7 * 35
+4 * 35
+7 +1 35
+3 * 35
jcnd=35/35 +15 +3 
* * 
+15 +3 35
+7 * 35
+7 * 35
+7 * 35
+3 * 35
+6 +3 35
+7 * 35
+7 * 35
cfi=(54)
cfn=(1408)
calls=35 0xf9a0 67 
* * 630
+5 +1 35
+7 +3 35
+7 -3 35
+7 +1 35
+7 * 35
+7 +2 35
+6 +5 35
+7 * 35
+3 * 35
+6 -49 35
+10 * 35
+10 * 35
+10 * 35
+10 427 35
+7 +7 35
+6 * 35
+2 * 35
jcnd=35/35 0x171f8 +2 
* * 
0x17192 839 35
+6 * 35
+6 * 35
+6 +1 35
+6 * 35
+2 * 35
+6 +17 35
+8 * 35
jcnd=35/35 +22 +3 
* * 
+22 +3 35
+4 * 35
+9 * 35
+6 * 35
+4 * 35
+1 * 35
+2 * 35
+2 * 35
+2 * 35
+2 * 35
+1 * 35
+7 436 35
+7 * 35
+6 * 35
+3 * 35
+6 * 35
+6 +2 35
+2 * 35
+6 +19 35
+7 * 35
+6 * 35
+3 +5 35
+3 * 35
+6 +10 35
+7 * 35
+6 575 35
+6 * 35
+6 -1 35
+10 * 35
+6 * 35
+11 +1 35
+2 -1 35
+4 * 35
+7 * 35
+2 * 35
+4 * 35
+7 * 35
+3 * 35
+6 * 35
jump=35 0x17385 -97 
* * 
+12 +34 105
+7 * 105
+3 476 105
+2 608 105
+8 * 105
+3 * 105
+4 +2 105
+7 -1 105
+4 +19 105
+4 -17 105
+8 -1 105
+4 +3 105
+4 -1 105
+4 +1 105
+3 * 105
+3 +1 105
+5 +8 105
+3 +1 105
+7 -9 105
+3 +7 105
+4 * 105
+4 -6 105
+4 +8 105
+7 -2 105
+4 -5 105
+4 +5 105
+8 -3 105
+8 +2 105
+8 +1 105
+4 * 105
+7 +2 105
cfi=(54)
cfn=(1408)
calls=105 0xf9a0 67 
* * 1890
+5 +1 105
+7 * 105
+7 * 105
+3 * 105
+7 +1 105
+7 * 105
+6 +1 105
+7 +2 105
+4 -2 105
+4 +1 105
+7 * 105
+4 +1 105
+4 472 105
+4 * 105
+7 * 105
jcnd=35/105 0x174e0 631 
* * 
+6 +5 105
+8 -3 105
+5 +1 105
+5 +2 105
jcnd=105/105 0x17298 608 
* * 
0x174b7 750 35
fi=(75) /build/gcc/src/gcc/libgomp/config/posix/simple-bar.h
+11 60 35
+7 * 35
+4 * 35
cfi=(50)
cfn=(1194)
calls=35 0x191d0 -5 
* * 157535
+5 * 35
jfi=(49)
jump=35 0x17192 839 
* * 
fe=(49)
+14 631 35
+8 * 35
+6 +58 35
+7 * 35
jcnd=35/35 -62 +61 
* * 

fn=(596) gomp_thread_start
fi=(75)
0x16a90 60 105
+3 * 105
cfi=(50)
cfn=(1194)
calls=105 0x191d0 -5 
* * 361116
fe=(49)
+5 +66 105
+4 +1 105
+5 +1 105
+8 +2 105
+3 * 105
+2 -13 105
+5 +1 105
+5 +2 105
+3 * 105
cob=(2)
cfi=(38)
cfn=(248)
calls=51 0xa9a74 -54 
* * 33240879218
cob=(2)
cfi=(77)
cfn=(1410)
calls=54 0x80ac4 13 
* * 100553380691
cob=(2)
cfi=(38)
cfn=(248)
calls=3 0xa9da7 -54 
+2 * 326763255
+3 +1 105
+7 * 105
cfi=(50)
cfn=(598)
calls=105 0x19430 +11 
* * 28138206
fi=(74)
+5 777 105
+4 * 105
+3 * 105
jfi=(75)
jcnd=105/105 -65 60 
* * 
fe=(49)

fl=(53)
fn=(612)
0x18230 126 35
+4 +2 35
+4 * 35
+4 * 35
+3 * 35
+2 +1 35
+3 * 35
cob=(1)
cfi=(6)
cfn=(242) free
calls=35 0x85f20 0 
* * 420

fn=(1404)
0x181a0 95 35
+4 * 35
+1 * 35
+1 * 35
+3 * 35
fi=(89) /build/gcc/src/gcc/libgomp/config/linux/mutex.h
+4 -52 35
fe=(53)
+7 +54 35
+3 * 35
+2 +19 35
fi=(90) /build/gcc/src/gcc/libgomp/config/linux/ptrlock.h
+8 -72 35
fe=(53)
+8 +74 35
+7 +1 35
+4 * 35
+1 * 35
+1 * 35

ob=(2)
fl=(66) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/fmt_helper.h
fn=(1150) void spdlog::details::fmt_helper::append_string_view<500ul>(std::basic_string_view<char, std::char_traits<char> >, fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >&)
0x61541 28 72
+1 * 72
+3 * 72
+1 * 72
+4 * 72
+3 * 72
+3 * 72
+3 * 72
+4 * 72
+4 * 72
+4 +2 72
+4 * 72
+3 * 72
cfi=(67) /usr/include/c++/8.2.1/string_view
cfn=(1152) std::basic_string_view<char, std::char_traits<char> >::data() const
calls=72 0x5d08e 204 
* * 504
+5 * 72
+4 +1 72
+5 * 72
+2 +2 72
+4 * 72
+4 * 72
+3 * 72
cfi=(67)
cfn=(1154) std::basic_string_view<char, std::char_traits<char> >::size() const
calls=72 0x613a0 149 
* * 504
+5 * 72
+3 * 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+3 * 72
cfi=(57) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/fmt/bundled/format.h
cfn=(1156) void fmt::v5::internal::basic_buffer<char>::append<char>(char const*, char const*)
calls=72 0x21316 425 
* * 16884
+5 +2 72
+1 * 72
+4 * 72
+1 * 72
+1 * 72

fn=(1054) std::basic_string_view<char, std::char_traits<char> > spdlog::details::fmt_helper::to_string_view<500ul>(fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> > const&)
0x50727 16 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+3 * 18
cfi=(58) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/fmt/bundled/core.h
cfn=(938) fmt::v5::internal::basic_buffer<char>::size() const
calls=18 0x1ea5c 406 
* * 126
+5 * 18
+3 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(1056) fmt::v5::internal::basic_buffer<char>::data() const
calls=18 0x4e01a 415 
* * 126
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
cfi=(67)
cfn=(1058) std::basic_string_view<char, std::char_traits<char> >::basic_string_view(char const*, unsigned long)
calls=18 0x46c5e +87 
* * 252
+5 * 18
+4 * 18
+4 +1 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+4 * 18
+1 * 18
+1 * 18

fl=(30) /home/jannick/Projects/UQCreator/code/src/closure.cpp
fn=(374) Closure::SubstractVectorMatrixOnVector(VectorSpace::Vector<double>&, VectorSpace::Matrix<double> const&) const
0x5cdf8 210 229972
+1 * 229972
+3 * 229972
+4 * 229972
+4 * 229972
+4 * 229972
+4 +1 229972
+7 * 229972
+4 * 229972
+6 * 229972
+3 * 229972
-13 * 919888
+4 * 919888
+6 * 919888
+3 * 919888
jcnd=229972/919888 0x5ced0 +5 
* * 
+6 +1 919888
+7 * 919888
+4 * 919888
+6 * 919888
+3 * 919888
-13 * 4599440
+4 * 4599440
+6 * 4599440
+3 * 4599440
jcnd=919888/4599440 0x5cec7 -1 
* * 
+6 +1 4599440
+4 * 4599440
+6 * 4599440
+4 * 4599440
+2 * 4599440
+3 * 4599440
+2 * 4599440
+4 * 4599440
+2 * 4599440
+3 * 4599440
cfi=(31) /home/jannick/Projects/UQCreator/code/src/vector.cpp
cfn=(196) VectorSpace::Vector<double>::operator[](unsigned int)
calls=4599440 0x20542 -91 
* * 50593840
+5 * 4599440
+4 * 4599440
+5 * 4599440
+3 * 4599440
+3 * 4599440
+4 * 4599440
+2 * 4599440
+3 * 4599440
cfi=(37) /home/jannick/Projects/UQCreator/code/src/matrix.cpp
cfn=(278) VectorSpace::Matrix<double>::operator()(unsigned int, unsigned int) const
calls=4599440 0x20572 100 
* * 82789920
+5 * 4599440
+4 * 4599440
+5 * 4599440
+4 * 4599440
+5 * 4599440
+4 * 4599440
+6 * 4599440
+4 * 4599440
+2 * 4599440
+3 * 4599440
+2 * 4599440
+4 * 4599440
+2 * 4599440
+3 * 4599440
cfi=(31)
cfn=(196)
calls=4599440 0x20542 -91 
* * 50593840
+5 * 4599440
+5 * 4599440
+4 -1 4599440
+4 * 4599440
jump=4599440 0x5ce2d * 
* * 
+5 -1 919888
+4 * 919888
jump=919888 0x5ce13 * 
* * 
+5 +5 229972
+1 * 229972
+1 * 229972

fn=(194) Closure::CalcNorm(VectorSpace::Vector<double>&)
0x5c36c 126 291604
+1 * 291604
+3 * 291604
+4 * 291604
+4 * 291604
+4 +1 291604
+4 * 291604
+5 +2 291604
+7 * 291604
+4 * 291604
+6 * 291604
+3 * 291604
-13 * 1166421
+4 * 1166421
+6 * 1166421
+3 * 1166421
jcnd=291606/1166421 0x5c42c +7 
* * 
+6 +1 1166419
+4 * 1166419
+5 +1 1166419
+7 * 1166419
+4 * 1166419
+6 * 1166419
+3 * 1166419
-13 * 5832104
+4 * 5832104
+6 * 5832104
+3 * 5832104
jcnd=1166421/5832104 +75 +3 
* * 
+2 +1 5832102
+4 * 5832102
+6 * 5832102
+4 * 5832102
+2 * 5832102
+3 * 5832102
+2 * 5832102
+4 * 5832102
+2 * 5832102
+3 * 5832102
cfi=(31)
cfn=(196)
calls=5832102 0x20542 -10 
* * 64153122
+5 * 5832103
+4 * 5832103
+5 * 5832103
cfi=(32) /usr/include/c++/8.2.1/cmath
cfn=(198) __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int)
calls=5832103 0x6603e 415 
* * 419948496
+5 * 5832104
+4 * 5832104
+5 * 5832104
+4 * 5832104
+5 -1 5832104
+4 * 5832104
jump=5832104 -86 * 
* * 
+2 +3 1166421
+5 * 1166421
cob=(9) /usr/lib/libm-2.28.so
cfi=(33) ???
cfn=(226) sqrt
calls=1166421 0x10370 0 
* * 9331368
* * 1166421
+5 * 1166421
+4 * 1166421
+5 * 1166421
+4 * 1166421
+5 -5 1166421
+4 * 1166421
jump=1166421 0x5c38c * 
* * 
+5 +7 291606
+5 +1 291606
+1 * 291606

fn=(230) Closure::SolveClosure(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&)
0x5bc7c 70 177129
+1 * 177129
+3 * 177129
+1 * 177129
+7 * 177129
+7 * 177129
+7 * 177129
+7 * 177129
+9 * 177129
+4 * 177129
+2 +1 177129
+10 +2 177129
+7 * 177129
+6 * 177129
+7 * 177129
+6 * 177129
+3 * 177129
+7 * 177129
+6 * 177129
+7 * 177129
+6 * 177129
+3 * 177129
+4 * 177129
+4 * 177129
+2 * 177129
+3 * 177129
cfi=(37)
cfn=(282) VectorSpace::Matrix<double>::Matrix(unsigned int, unsigned int, double)
calls=177129 0x205d6 -9 
* * 1435683013
+5 +1 177129
+7 * 177129
+6 * 177129
+7 * 177129
+6 * 177129
+3 * 177129
+4 * 177129
+4 * 177129
+2 * 177129
+3 * 177129
cfi=(31)
cfn=(354) VectorSpace::Vector<double>::Vector(unsigned int, double)
calls=177129 0x65766 +6 
* * 62703666
+5 +1 177129
+7 * 177129
+6 * 177129
+7 * 177129
+6 * 177129
+3 * 177129
+4 * 177129
+4 * 177129
+2 * 177129
+3 * 177129
cfi=(31)
cfn=(354)
calls=177129 0x65766 +5 
* * 62703666
+5 +3 177129
+7 * 177129
+7 * 177129
+4 * 177129
+7 * 177129
+3 * 177129
cfn=(356) Closure::Gradient(VectorSpace::Vector<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&)
calls=177129 0x5c8da +90 
* * 15702816603
cfn=(356)
calls=1 0x5cace 182 
+4 * 65849
+5 +1 177130
+4 * 177130
+7 * 177130
+3 * 177130
+3 * 177130
cfn=(194)
calls=177130 0x5c36c +47 
* * 398021838
cfn=(194)
calls=2 0x5c42c +57 
+4 * 2559
+5 * 177132
+8 * 177132
+7 * 177132
+4 * 177132
+3 * 177132
cfi=(34) /home/jannick/Projects/UQCreator/code/src/settings.cpp
cfn=(232) Settings::GetEpsilon() const
calls=177132 0xb332c 188 
* * 1239924
+5 * 177132
+8 * 177132
+3 * 177132
+2 * 177132
jcnd=153659/177132 0x5c27e +1 
* * 
+6 +4 23473
+4 * 23473
+4 * 23473
+3 * 23473
+3 * 23473
cfi=(45) /home/jannick/Projects/UQCreator/code/src/vectorspace.cpp
cfn=(532) VectorSpace::Vector<double> operator-<double>(VectorSpace::Vector<double> const&)
calls=23473 0x65d3c +39 
* * 28613587
+5 +1 23473
+7 * 23473
+4 * 23473
+7 * 23473
+3 * 23473
+3 * 23473
cfn=(376) Closure::Hessian(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&)
calls=23473 0x5cad6 184 
* * 25661790192
+5 +1 23473
+4 * 23473
+4 * 23473
+3 * 23473
+3 * 23473
cfi=(45)
cfn=(442) void posv<double>(VectorSpace::Matrix<double>&, VectorSpace::Vector<double>&)
calls=23473 0x65dfa +67 
* * 1345862218
+5 +2 23473
+7 * 23473
+6 * 23473
+7 * 23473
+6 * 23473
+4 * 23473
+5 * 23473
+3 * 23473
cfi=(37)
cfn=(266) VectorSpace::Matrix<double>::Matrix(unsigned int, unsigned int, bool)
calls=23473 0x4b47a -34 
* * 12651947
+5 +1 23473
+7 * 23473
+8 * 23473
+8 * 23473
+4 * 23473
+8 * 23473
+4 * 23473
+4 * 23473
+7 * 23473
+3 * 23473
+3 * 23473
cfi=(45)
cfn=(522) VectorSpace::Vector<double> operator*<double>(double const&, VectorSpace::Vector<double> const&)
calls=23473 0x65f76 +26 
* * 29575980
+5 * 23473
+4 * 23473
+4 * 23473
+7 * 23473
+7 * 23473
+3 * 23473
cfn=(524) Closure::AddMatrixVectorToMatrix(VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Matrix<double>&) const
calls=23473 0x5cd32 202 
* * 39880627
+5 * 23473
+4 * 23473
+3 * 23473
cfi=(31)
cfn=(234) VectorSpace::Vector<double>::~Vector()
calls=23473 0x4b340 +1 
* * 2517743
+5 +1 23473
+7 * 23473
+4 * 23473
+4 * 23473
+7 * 23473
+3 * 23473
cfn=(356)
calls=23473 0x5c8da +79 
* * 2079954823
+5 +2 23473
+10 * 23473
+7 * 23473
+4 * 23473
+3 * 23473
cfi=(34)
cfn=(536) Settings::GetMaxIterations() const
calls=23473 0xb3318 +96 
* * 164311
-14 * 14684
+7 * 14684
+4 * 14684
+3 * 14684
cfi=(34)
cfn=(536)
calls=14684 0xb3318 +96 
* * 102788
+5 * 38157
+6 * 38157
+3 * 38157
+2 * 38157
+6 +1 38157
+8 * 38157
+8 +1 38157
+7 * 38157
jcnd=23473/38157 0x5c017 +9 
* * 
+6 +1 14684
+7 * 14684
+7 * 14684
+4 * 14684
+7 * 14684
+3 * 14684
cfn=(356)
calls=14684 0x5c8da +74 
* * 1301191305
+5 +1 14684
+4 * 14684
+4 * 14684
+3 * 14684
+3 * 14684
cfi=(45)
cfn=(532)
calls=14684 0x65d3c +27 
* * 17899796
+5 * 14684
+4 * 14684
+4 * 14684
+3 * 14684
+3 * 14684
cfi=(31)
cfn=(538) VectorSpace::Vector<double>::operator=(VectorSpace::Vector<double> const&)
calls=14684 0x4b60a +16 
* * 5535868
+5 * 14684
+4 * 14684
+3 * 14684
cfi=(31)
cfn=(234)
calls=14684 0x4b340 -6 
* * 1576603
+5 +1 14684
+7 * 14684
+4 * 14684
+7 * 14684
+3 * 14684
+3 * 14684
cfn=(376)
calls=14684 0x5cad6 +88 
* * 16056062023
cfn=(376)
calls=1 0x5cd2b 200 
+4 * 361289
+5 +1 14685
+4 * 14685
+4 * 14685
+3 * 14685
+3 * 14685
cfi=(45)
cfn=(442)
calls=14685 0x65dfa +55 
* * 841230270
+5 +2 14685
+8 * 14685
+8 * 14685
+4 * 14685
+7 * 14685
+8 * 14685
+4 * 14685
+8 * 14685
+4 * 14685
+4 * 14685
+7 * 14685
+3 * 14685
+3 * 14685
cfi=(45)
cfn=(522)
calls=14685 0x65f76 +15 
* * 18503100
+5 * 14685
+4 * 14685
+4 * 14685
+7 * 14685
+7 * 14685
+3 * 14685
cfn=(524)
calls=14685 0x5cd32 202 
* * 24949815
+5 * 14685
+4 * 14685
+3 * 14685
cfi=(31)
cfn=(234)
calls=14685 0x4b340 -10 
* * 1576710
+5 +1 14685
+7 * 14685
+4 * 14685
+4 * 14685
+7 * 14685
+3 * 14685
cfn=(356)
calls=14685 0x5c8da +68 
* * 1301279910
+5 +2 38158
+10 +1 38158
+4 * 38158
+7 * 38158
+3 * 38158
+3 * 38158
cfn=(194)
calls=38158 0x5c36c +23 
* * 85741026
+5 * 38158
+8 * 38158
+4 * 38158
+7 * 38158
+3 * 38158
+3 * 38158
cfn=(194)
calls=38158 0x5c36c +23 
* * 85754202
+5 * 38158
+8 * 38158
+3 * 38158
+2 * 38158
jcnd=38158/38158 0x5c1bc +13 
* * 
0x5c1bc +13 38158
+4 * 38158
+7 * 38158
+3 * 38158
+3 * 38158
cfi=(37)
cfn=(346) VectorSpace::Matrix<double>::operator=(VectorSpace::Matrix<double> const&)
calls=38158 0x4e47a -32 
* * 47010656
+5 +1 38158
+4 * 38158
+7 * 38158
+3 * 38158
+3 * 38158
cfn=(194)
calls=38158 0x5c36c +9 
* * 85754202
+5 * 38158
+8 * 38158
+7 * 38158
+4 * 38158
+3 * 38158
cfi=(34)
cfn=(232)
calls=38158 0xb332c +71 
* * 267106
+5 * 38158
+8 * 38158
+3 * 38158
+2 * 38158
jcnd=14684/38158 +26 -26 
* * 
+2 +1 23474
+4 * 23474
+7 * 23474
+3 * 23474
+3 * 23474
cfi=(37)
cfn=(346)
calls=23474 0x4e47a -34 
* * 28919968
+5 +1 23474
jump=23474 +60 -32 
* * 
+2 -28 14684
+7 * 14684
jump=14684 0x5bec2 * 
* * 
+51 -4 23474
+4 * 23474
+3 * 23474
cfi=(37)
cfn=(246) VectorSpace::Matrix<double>::~Matrix()
calls=23474 0x4b54e -5 
* * 2400480
+5 -4 23474
+4 * 23474
+3 * 23474
cfi=(31)
cfn=(234)
calls=23474 0x4b340 +6 
* * 2517850
+5 * 23474
jump=23474 +3 -8 
* * 
+2 -3 153659
+1 -5 153659
+4 * 153659
+3 * 153659
cfi=(31)
cfn=(234)
calls=153659 0x4b340 +14 
* * 16830664
-7 * 23474
+4 * 23474
+3 * 23474
cfi=(31)
cfn=(234)
calls=23474 0x4b340 +14 
* * 2517850
+5 -1 177133
+4 * 177133
+3 * 177133
cfi=(31)
cfn=(234)
calls=177133 0x4b340 +15 
* * 19348514
+5 -1 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(246)
calls=177133 0x4b54e +9 
* * 32335838
+5 +51 177133
+4 * 177133
+9 * 177133
jcnd=177133/177133 0x5c362 * 
* * 
0x5c362 * 177133
+7 * 177133
+1 * 177133
+1 * 177133

fn=(356)
0x5c8da 168 229971
+1 * 229971
+3 * 229971
+1 * 229971
+4 * 229971
+4 * 229971
+4 * 229971
+4 * 229971
+4 * 229971
+9 * 229971
+4 * 229971
+2 +1 229971
+4 * 229971
+6 * 229971
+4 * 229971
+4 * 229971
+2 * 229971
+3 * 229971
cfi=(31)
cfn=(354)
calls=229971 0x65766 -89 
* * 33575766
+5 +1 229971
+4 * 229971
+3 * 229971
cfi=(31)
cfn=(358) VectorSpace::Vector<double>::reset()
calls=229971 0x66168 +70 
* * 62322141
+5 +2 229971
+7 * 229971
+4 * 229971
+6 * 229971
+3 * 229971
-13 * 4599435
+4 * 4599435
+6 * 4599435
+3 * 4599435
jcnd=229972/4599435 0x5ca69 +9 
* * 
+6 +1 4599434
+4 * 4599434
+3 * 4599434
+4 * 4599434
+3 * 4599434
+4 * 4599434
+4 * 4599434
+3 * 4599434
+3 * 4599434
+3 * 4599434
cfi=(23) /usr/include/c++/8.2.1/bits/stl_vector.h
cfn=(360) std::vector<VectorSpace::Vector<double>, std::allocator<VectorSpace::Vector<double> > >::operator[](unsigned long)
calls=4599434 0x6565a 930 
* * 50593774
+5 * 4599434
+3 * 4599434
+4 * 4599434
+4 * 4599434
+3 * 4599434
+3 * 4599434
cfi=(37)
cfn=(362) VectorSpace::Matrix<double>::operator*(VectorSpace::Vector<double> const&) const
calls=4599434 0x6606e +2 
* * 7515475156
cfi=(37)
cfn=(362)
calls=1 0x66153 +10 
+4 * 895
+5 * 4599435
+4 * 4599435
+4 * 4599435
+4 * 4599435
+3 * 4599435
+3 * 4599435
cfi=(43) /home/jannick/Projects/UQCreator/code/src/eulerclosure2d.cpp
cfn=(368) EulerClosure2D::U(VectorSpace::Vector<double>&, VectorSpace::Vector<double> const&)
calls=4599435 0x7ef0a 7 
* * 4213087690
+2 * 4599435
+4 * 4599435
+3 * 4599435
cfi=(31)
cfn=(234)
calls=4599435 0x4b340 -84 
* * 500384310
+5 +1 4599435
+7 * 4599435
+4 * 4599435
+6 * 4599435
+3 * 4599435
-13 * 22997175
+4 * 22997175
+6 * 22997175
+3 * 22997175
jcnd=4599435/22997175 0x5ca60 -2 
* * 
+6 +1 22997175
+7 * 22997175
+4 * 22997175
+6 * 22997175
+3 * 22997175
-13 * 91988700
+4 * 91988700
+6 * 91988700
+3 * 91988700
jcnd=22997175/91988700 0x5ca57 -1 
* * 
+6 +1 91988700
+3 * 91988700
+4 * 91988700
+2 * 91988700
+3 * 91988700
cfi=(31)
cfn=(196)
calls=91988700 0x20542 -54 
* * 1011875700
+5 * 91988700
+4 * 91988700
+8 * 91988700
+4 * 91988700
+5 * 91988700
+4 * 91988700
+4 * 91988700
+3 * 91988700
+3 * 91988700
+2 * 91988700
+3 * 91988700
cfi=(37)
cfn=(252) VectorSpace::Matrix<double>::operator()(unsigned int, unsigned int)
calls=91988700 0x205a4 -78 
* * 1655796600
+5 * 91988700
+4 * 91988700
+5 * 91988700
+5 * 91988700
+4 * 91988700
+6 * 91988700
+4 * 91988700
+2 * 91988700
+3 * 91988700
+2 * 91988700
+4 * 91988700
+2 * 91988700
+3 * 91988700
cfi=(31)
cfn=(196)
calls=91988700 0x20542 -54 
* * 1011875700
+5 * 91988700
+4 * 91988700
+5 * 91988700
+4 -1 91988700
+4 * 91988700
jump=91988700 0x5c9bf * 
* * 
+5 -1 22997175
+4 * 22997175
jump=22997175 0x5c9a5 * 
* * 
+5 -2 4599435
+4 * 4599435
jump=4599435 0x5c931 * 
* * 
+5 +9 229972
+4 * 229972
+4 * 229972
+4 * 229972
+3 * 229972
+3 * 229972
cfn=(374)
calls=229972 0x5cdf8 +29 
* * 381293576
+5 -12 229972
+4 * 229972
+3 * 229972
cfi=(31)
cfn=(234)
calls=229972 0x4b340 -80 
* * 25019243
+5 +13 229972
+1 * 229972
+4 * 229972
+9 * 229972
jcnd=229972/229972 +52 * 
* * 
+52 * 229972
+4 * 229972
+1 * 229972
+1 * 229972

fn=(376)
0x5cad6 184 38157
+1 * 38157
+3 * 38157
+1 * 38157
+4 * 38157
+4 * 38157
+4 * 38157
+4 * 38157
+9 * 38157
+4 * 38157
+2 +1 38157
+4 * 38157
+6 * 38157
+4 * 38157
+6 * 38157
+4 * 38157
+4 * 38157
+2 * 38157
+3 * 38157
cfi=(37)
cfn=(282)
calls=38157 0x205d6 64 
* * 17056179
+5 +1 38157
+4 * 38157
+3 * 38157
cfi=(37)
cfn=(534) VectorSpace::Matrix<double>::reset()
calls=38157 0x661a6 +19 
* * 497262024
+5 +2 38157
+7 * 38157
+4 * 38157
+6 * 38157
+3 * 38157
-13 * 763147
+4 * 763147
+6 * 763147
+3 * 763147
jcnd=38158/763147 0x5ccdd -3 
* * 
+6 +1 763146
+4 * 763146
+3 * 763146
+4 * 763146
+3 * 763146
+4 * 763146
+4 * 763146
+3 * 763146
+3 * 763146
+3 * 763146
cfi=(23)
cfn=(360)
calls=763146 0x6565a 930 
* * 8394606
+5 * 763146
+3 * 763146
+4 * 763146
+4 * 763146
+3 * 763146
+3 * 763146
cfi=(37)
cfn=(362)
calls=763146 0x6606e -14 
* * 1246980564
+5 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+3 * 763146
+3 * 763146
cfi=(43)
cfn=(378) EulerClosure2D::DU(VectorSpace::Matrix<double>&, VectorSpace::Vector<double> const&)
calls=763146 0x7f790 53 
* * 3889591759
+2 * 763146
+4 * 763146
+3 * 763146
cfi=(31)
cfn=(234)
calls=763146 0x4b340 89 
* * 81887562
+5 +1 763146
+7 * 763146
+4 * 763146
+6 * 763146
+3 * 763146
-13 * 3052588
+4 * 3052588
+6 * 3052588
+3 * 3052588
jcnd=763147/3052588 0x5ccd4 -2 
* * 
+6 +1 3052587
+7 * 3052587
+4 * 3052587
+6 * 3052587
+3 * 3052587
-13 * 12210349
+4 * 12210349
+6 * 12210349
+3 * 12210349
jcnd=3052588/12210349 0x5cccb -1 
* * 
+6 +1 12210348
+7 * 12210348
+4 * 12210348
+6 * 12210348
+3 * 12210348
-13 * 61051744
+4 * 61051744
+6 * 61051744
+3 * 61051744
jcnd=12210349/61051744 0x5ccc2 -1 
* * 
+6 +1 61051743
+7 * 61051743
+4 * 61051743
+6 * 61051743
+3 * 61051743
-13 * 305258717
+4 * 305258717
+6 * 305258717
+3 * 305258717
jcnd=61051744/305258717 0x5ccb9 -1 
* * 
+6 +1 305258716
+4 * 305258716
+7 * 305258716
+3 * 305258716
+3 * 305258716
+3 * 305258716
cfi=(23)
cfn=(250) std::vector<VectorSpace::Matrix<double>, std::allocator<VectorSpace::Matrix<double> > >::operator[](unsigned long)
calls=305258716 0x65afe 930 
* * 3357845876
+5 * 305258716
+3 * 305258716
+3 * 305258716
+3 * 305258716
+2 * 305258716
+3 * 305258716
cfi=(37)
cfn=(252)
calls=305258716 0x205a4 -96 
* * 5494656888
cfi=(37)
cfn=(252)
calls=1 0x205a4 -96 
+4 * 18
+5 * 305258717
+4 * 305258717
+8 * 305258717
+4 * 305258717
+5 * 305258717
+3 * 305258717
+3 * 305258717
+4 * 305258717
+2 * 305258717
+3 * 305258717
cfi=(37)
cfn=(252)
calls=305258717 0x205a4 -96 
* * 5494656906
+5 * 305258717
+4 * 305258717
+5 * 305258717
+5 * 305258717
+4 * 305258717
+6 * 305258717
+4 * 305258717
+2 * 305258717
+3 * 305258717
+2 * 305258717
+4 * 305258717
+6 * 305258717
+4 * 305258717
+2 * 305258717
+3 * 305258717
+2 * 305258717
+4 * 305258717
+2 * 305258717
+3 * 305258717
cfi=(37)
cfn=(252)
calls=305258717 0x205a4 -96 
* * 5494656906
+5 * 305258717
+4 * 305258717
+5 * 305258717
+4 -1 305258717
+4 * 305258717
jump=305258717 0x5cbf5 * 
* * 
+5 -1 61051744
+4 * 61051744
jump=61051744 0x5cbdb * 
* * 
+5 -1 12210349
+4 * 12210349
jump=12210349 0x5cbc1 * 
* * 
+5 -1 3052588
+4 * 3052588
jump=3052588 0x5cba7 * 
* * 
+5 -2 763147
+4 * 763147
jump=763147 0x5cb33 * 
* * 
+5 -3 38158
+4 * 38158
+3 * 38158
cfi=(37)
cfn=(246)
calls=38158 0x4b54e 82 
* * 3903663
+5 +15 38158
+1 * 38158
+4 * 38158
+9 * 38158
jcnd=38158/38158 +52 * 
* * 
+52 * 38158
+4 * 38158
+1 * 38158
+1 * 38158

fn=(260) Closure::EvaluateLambda(VectorSpace::Matrix<double> const&) const
0x5c4a0 141 177133
+1 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+9 * 177133
+4 * 177133
+2 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(37)
cfn=(262) VectorSpace::Matrix<double>::operator*(VectorSpace::Matrix<double> const&) const
calls=177133 0x4e352 -18 
* * 7471824206
+5 * 177133
+4 * 177133
+4 * 177133
+9 * 177133
jcnd=177133/177133 +7 * 
* * 
+7 * 177133
+1 * 177133

fn=(524)
0x5cd32 202 38158
+1 * 38158
+3 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+4 +1 38158
+7 * 38158
+4 * 38158
+6 * 38158
+3 * 38158
-13 * 152632
+4 * 152632
+6 * 152632
+3 * 152632
jcnd=38158/152632 0x5cdf4 +5 
* * 
+6 +1 152632
+7 * 152632
+4 * 152632
+6 * 152632
+3 * 152632
-13 * 763160
+4 * 763160
+6 * 763160
+3 * 763160
jcnd=152632/763160 0x5cdeb -1 
* * 
+2 +1 763160
+3 * 763160
+3 * 763160
+4 * 763160
+2 * 763160
+3 * 763160
cfi=(37)
cfn=(278)
calls=763160 0x20572 100 
* * 13736880
+5 * 763160
+4 * 763160
+5 * 763160
+4 * 763160
+6 * 763160
+4 * 763160
+2 * 763160
+3 * 763160
+2 * 763160
+4 * 763160
+2 * 763160
+3 * 763160
cfi=(31)
cfn=(366) VectorSpace::Vector<double>::operator[](unsigned int) const
calls=763160 0x20524 -81 
* * 8394760
+5 * 763160
+4 * 763160
+5 * 763160
+5 * 763160
+3 * 763160
+3 * 763160
+4 * 763160
+2 * 763160
+3 * 763160
cfi=(37)
cfn=(252)
calls=763160 0x205a4 98 
* * 13736880
+5 * 763160
+5 * 763160
+4 -1 763160
+4 * 763160
jump=763160 0x5cd6b * 
* * 
+2 -1 152632
+4 * 152632
jump=152632 0x5cd51 * 
* * 
+5 +5 38158
+1 * 38158
+1 * 38158

fl=(73) /usr/include/c++/8.2.1/bits/basic_string.h
fn=(1168) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::data() const
0x1e604 2293 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1170) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
calls=36 0x206a0 175 
* * 252
+5 * 36
+1 * 36

fn=(1164) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator std::basic_string_view<char, std::char_traits<char> >() const
0x614d2 807 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+3 * 36
cfn=(1166) std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const
calls=36 0x1ef3c 921 
* * 252
+5 * 36
+3 * 36
+4 * 36
+3 * 36
cfn=(1168)
calls=36 0x1e604 2293 
* * 576
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
cfi=(67)
cfn=(1058)
calls=36 0x46c5e 105 
* * 504
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(1166)
0x1ef3c 921 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+4 * 36
+1 * 36

fn=(1170)
0x206a0 175 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+3 * 36
+1 * 36

fl=(23)
fn=(1126) std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > >::end()
0x6242e 716 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(24) /usr/include/c++/8.2.1/bits/stl_iterator.h
cfn=(1124) __gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > >::__normal_iterator(std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >* const&)
calls=36 0x6698c +66 
* * 396
+5 * 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(1434) std::vector<BoundaryType, std::allocator<BoundaryType> >::operator[](unsigned long) const
0x921a4 948 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +3 541749
+4 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 +1 541749
+1 * 541749

fn=(1440) std::vector<Edge*, std::allocator<Edge*> >::operator[](unsigned long)
0x589a0 930 1083498
+1 * 1083498
+3 * 1083498
+4 * 1083498
+4 +3 1083498
+4 * 1083498
+3 * 1083498
+4 * 1083498
+4 * 1083498
+3 +1 1083498
+1 * 1083498

fn=(138) std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > >::end()
0x1f0f8 716 514
+1 * 514
+3 * 514
+4 * 514
+4 * 514
+9 * 514
+4 * 514
+2 +1 514
+4 * 514
+4 * 514
+4 * 514
+3 * 514
+3 * 514
cfi=(24)
cfn=(136) __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > >::__normal_iterator(std::shared_ptr<spdlog::sinks::sink>* const&)
calls=514 0x21488 +66 
* * 5654
+5 * 514
+4 * 514
+4 * 514
+9 * 514
jcnd=514/514 +7 * 
* * 
+7 * 514
+1 * 514

fn=(250)
0x65afe 930 308555376
+1 * 308555376
+3 * 308555376
+4 * 308555376
+4 +3 308555376
+4 * 308555376
+3 * 308555376
+4 * 308555376
+4 * 308555376
+3 +1 308555376
+1 * 308555376

fn=(360)
0x6565a 930 5362580
+1 * 5362580
+3 * 5362580
+4 * 5362580
+4 +3 5362580
+4 * 5362580
+3 * 5362580
+4 * 5362580
+4 * 5362580
+3 +1 5362580
+1 * 5362580

fn=(1328) std::vector<Cell*, std::allocator<Cell*> >::vector(std::vector<Cell*, std::allocator<Cell*> > const&)
0x58622 458 18
+1 * 18
+3 * 18
+2 * 18
+2 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+4 * 18
+3 * 18
cfn=(1330) std::_Vector_base<Cell*, std::allocator<Cell*> >::_M_get_Tp_allocator() const
calls=18 0x59166 241 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(78) /usr/include/c++/8.2.1/ext/alloc_traits.h
cfn=(1332) __gnu_cxx::__alloc_traits<std::allocator<Cell*>, Cell*>::_S_select_on_copy(std::allocator<Cell*> const&)
calls=18 0x59119 94 
* * 936
+5 * 18
+4 * 18
+3 * 18
cfn=(1340) std::vector<Cell*, std::allocator<Cell*> >::size() const
calls=18 0x590f6 805 
* * 216
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
cfn=(1342) std::_Vector_base<Cell*, std::allocator<Cell*> >::_Vector_base(unsigned long, std::allocator<Cell*> const&)
calls=18 0x59190 258 
* * 7074
+5 * 18
+4 * 18
+3 * 18
cfi=(80) /usr/include/c++/8.2.1/bits/allocator.h
cfn=(1356) std::allocator<Cell*>::~allocator()
calls=18 0x59174 139 
* * 288
+5 +5 18
+4 * 18
+3 * 18
cfn=(1360) std::_Vector_base<Cell*, std::allocator<Cell*> >::_M_get_Tp_allocator()
calls=18 0x58d78 237 
* * 108
+5 * 18
+3 -2 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
cfn=(1362) std::vector<Cell*, std::allocator<Cell*> >::end() const
calls=18 0x59242 725 
* * 576
+5 * 18
+3 * 18
+4 * 18
+3 * 18
cfn=(1366) std::vector<Cell*, std::allocator<Cell*> >::begin() const
calls=18 0x591ee 707 
* * 576
+5 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
cfi=(72) /usr/include/c++/8.2.1/bits/stl_uninitialized.h
cfn=(1368) Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**, Cell*>(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**, std::allocator<Cell*>&)
calls=18 0x59296 287 
* * 1474812
+5 * 18
+3 -1 18
+4 * 18
+4 +4 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +61 * 
* * 
+61 * 18
+4 * 18
+1 * 18
+2 * 18
+2 * 18
+1 * 18

fn=(1620) std::vector<Cell*, std::allocator<Cell*> >::~vector()
0x5838e 565 17
+1 * 17
+3 * 17
+4 * 17
+4 +3 17
+4 * 17
+3 * 17
cfn=(1360)
calls=17 0x58d78 237 
* * 102
+5 * 17
+3 -1 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
+3 * 17
cfi=(84) /usr/include/c++/8.2.1/bits/stl_construct.h
cfn=(1622) void std::_Destroy<Cell**, Cell*>(Cell**, Cell**, std::allocator<Cell*>&)
calls=17 0x58d86 203 
* * 578
+5 +3 17
+4 * 17
+3 * 17
cfn=(1628) std::_Vector_base<Cell*, std::allocator<Cell*> >::~_Vector_base()
calls=17 0x58d2a 283 
* * 7247
+5 * 17
+1 * 17
+1 * 17

fn=(1630) std::_Vector_base<Cell*, std::allocator<Cell*> >::_M_deallocate(Cell**, unsigned long)
0x596d0 300 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+4 +3 17
+5 * 17
+2 +1 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
cfi=(79) /usr/include/c++/8.2.1/bits/alloc_traits.h
cfn=(1632) std::allocator_traits<std::allocator<Cell*> >::deallocate(std::allocator<Cell*>&, Cell**, unsigned long)
calls=17 0x59cb9 461 
* * 6108
+5 +1 17
+1 * 17
+1 * 17

fn=(1348) std::_Vector_base<Cell*, std::allocator<Cell*> >::_M_allocate(unsigned long)
0x59dd6 293 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +3 18
+5 * 18
+2 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(79)
cfn=(1350) std::allocator_traits<std::allocator<Cell*> >::allocate(std::allocator<Cell*>&, unsigned long)
calls=18 0x5a07b 435 
* * 5220
+5 * 18
jump=18 +7 +1 
* * 
+7 +1 18
+1 * 18

fn=(1122) std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > >::begin()
0x623e6 698 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(24)
cfn=(1124)
calls=36 0x6698c +84 
* * 396
+5 * 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(1342)
0x59190 258 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1344) std::_Vector_base<Cell*, std::allocator<Cell*> >::_Vector_impl::_Vector_impl(std::allocator<Cell*> const&)
calls=18 0x59968 99 
* * 702
+5 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1346) std::_Vector_base<Cell*, std::allocator<Cell*> >::_M_create_storage(unsigned long)
calls=18 0x599b2 +49 
* * 5976
+5 * 18
jump=18 +28 * 
* * 
+28 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(1344)
0x59968 99 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(80)
cfn=(1336) std::allocator<Cell*>::allocator(std::allocator<Cell*> const&)
calls=18 0x59db0 +33 
* * 360
+5 * 18
+4 * 18
+7 * 18
+4 * 18
+8 * 18
+4 * 18
+8 +1 18
+1 * 18
+1 * 18

fn=(1628)
0x58d2a 283 17
+1 * 17
+3 * 17
+4 * 17
+4 +3 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
+3 * 17
+4 -1 17
+3 * 17
+4 * 17
+3 * 17
+4 * 17
+3 * 17
+3 * 17
cfn=(1630)
calls=17 0x596d0 +15 
* * 6397
+5 +2 17
+4 * 17
+3 * 17
cfn=(1640) std::_Vector_base<Cell*, std::allocator<Cell*> >::_Vector_impl::~_Vector_impl()
calls=17 0x58cf2 88 
* * 442
+5 * 17
+1 * 17
+1 * 17

fn=(1640)
0x58cf2 88 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
cfi=(80)
cfn=(1356)
calls=17 0x59174 +51 
* * 272
+5 * 17
+1 * 17
+1 * 17

fn=(256) std::vector<Cell*, std::allocator<Cell*> >::operator[](unsigned long) const
0x92164 948 177133
+1 * 177133
+3 * 177133
+4 * 177133
+4 +3 177133
+4 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 +1 177133
+1 * 177133

fn=(1330)
0x59166 241 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1346)
0x599b2 309 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1348)
calls=18 0x59dd6 -18 
* * 5490
+5 * 18
+3 * 18
+4 * 18
+3 +1 18
+4 * 18
+3 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+4 * 18
+4 +1 18
+1 * 18
+1 * 18

fn=(1366)
0x591ee 707 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(24)
cfn=(1364) __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >::__normal_iterator(Cell* const* const&)
calls=18 0x59a0c +75 
* * 198
+5 * 18
+4 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(1422) std::vector<Cell*, std::allocator<Cell*> >::operator[](unsigned long)
0x585e4 930 181473
+1 * 181473
+3 * 181473
+4 * 181473
+4 +3 181473
+4 * 181473
+3 * 181473
+4 * 181473
+4 * 181473
+3 +1 181473
+1 * 181473

fn=(134) std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > >::begin()
0x1f0b0 698 514
+1 * 514
+3 * 514
+4 * 514
+4 * 514
+9 * 514
+4 * 514
+2 +1 514
+4 * 514
+4 * 514
+3 * 514
+3 * 514
cfi=(24)
cfn=(136)
calls=514 0x21488 +84 
* * 5654
+5 * 514
+4 * 514
+4 * 514
+9 * 514
jcnd=514/514 +7 * 
* * 
+7 * 514
+1 * 514

fn=(1340)
0x590f6 805 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+1 * 18

fn=(1360)
0x58d78 237 35
+1 * 35
+3 * 35
+4 +1 35
+4 * 35
+1 * 35

fn=(1362)
0x59242 725 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(24)
cfn=(1364)
calls=18 0x59a0c +57 
* * 198
+5 * 18
+4 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fl=(69) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/os.h
fn=(1098) spdlog::details::os::localtime(long const&)
0x1cd0a 74 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +7 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cob=(1)
cfi=(6)
cfn=(1102) localtime_r
calls=36 0xb70d0 -81 
* * 24264
* * 36
+5 +2 36
+1 +1 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(1064) spdlog::details::os::thread_id()
0x469a0 340 18
+1 * 18
+3 +5 18
+9 * 18
+6 * 18
+3 * 18
+2 * 18
jcnd=18/18 +34 +1 
* * 
+34 +1 18
+9 +2 18
+1 * 18

fn=(1062) spdlog::details::os::now()
0x46980 61 18
+1 * 18
+3 +9 18
cob=(10)
cfi=(5) /build/gcc/src/gcc/libstdc++-v3/src/c++11/chrono.cc
cfn=(22) std::chrono::_V2::system_clock::now()
calls=18 0xb3650 -15 
* * 702
* * 18
+5 +2 18
+1 * 18

fl=(78)
fn=(1332)
0x59119 94 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(79)
cfn=(1334) std::allocator_traits<std::allocator<Cell*> >::select_on_container_copy_construction(std::allocator<Cell*> const&)
calls=18 0x59933 504 
* * 594
+5 * 18
+4 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fl=(67)
fn=(1154)
0x613a0 149 72
+1 * 72
+3 * 72
+4 +1 72
+4 * 72
+3 * 72
+1 * 72

fn=(1152)
0x5d08e 204 72
+1 * 72
+3 * 72
+4 +1 72
+4 * 72
+4 * 72
+1 * 72

fn=(1058)
0x46c5e 105 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+4 +1 54
+4 * 54
+4 * 54
+3 * 54
+4 * 54
+4 * 54
+4 +1 54
+1 * 54
+1 * 54

fl=(2) /usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h
fn=(164) __gthread_mutex_unlock(pthread_mutex_t*)
0x5d04c 776 1276
+1 * 1276
+3 * 1276
+4 * 1276
+4 +1 1276
cfn=(92) __gthread_active_p()
calls=1276 0x5a7b0 248 
* * 10208
+5 * 1276
+2 * 1276
+3 * 1276
+2 * 1276
+2 +1 1276
+4 * 1276
+3 * 1276
cob=(6) /usr/lib/libpthread-2.28.so
cfi=(1) ???
cfn=(168) pthread_mutex_unlock
calls=1276 0xba70 0 
* * 34096
* * 1276
+5 * 1276
jump=1276 +7 +3 
* * 
+7 +3 1276
+1 * 1276

fn=(16) __gthread_cond_timedwait(pthread_cond_t*, pthread_mutex_t*, timespec const*)
0x87fcb 870 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 +1 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cob=(6)
cfi=(1)
cfn=(0) pthread_cond_timedwait@@GLIBC_2.3.2
calls=248 0xdc00 0 
* * 70756
* * 248
cob=(6)
cfi=(1)
cfn=(0)
calls=1 0xdd29 0 
+4 * 162
+5 +1 248
+1 * 248

fn=(92)
0x5a7b0 248 2552
+1 * 2552
+3 +3 2552
+7 * 2552
+3 * 2552
+3 * 2552
+3 +1 2552
+1 * 2552

fn=(90) __gthread_mutex_lock(pthread_mutex_t*)
0x5d01d 746 1276
+1 * 1276
+3 * 1276
+4 * 1276
+4 +1 1276
cfn=(92)
calls=1276 0x5a7b0 248 
* * 10208
+5 * 1276
+2 * 1276
+3 * 1276
+2 * 1276
+2 +1 1276
+4 * 1276
+3 * 1276
cob=(6)
cfi=(1)
cfn=(96) pthread_mutex_lock
calls=1276 0xa240 0 
* * 37004
* * 1276
+5 * 1276
jump=1276 +7 +3 
* * 
+7 +3 1276
+1 * 1276

fl=(11) /usr/include/c++/8.2.1/functional
fn=(1542) std::enable_if<(1ul)<std::tuple_size<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::value, std::tuple_element<1ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> > >::type::type&& std::_Mu<std::_Placeholder<2>, false, true>::operator()<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(std::_Placeholder<2> const volatile&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
0xac37e 345 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13) /usr/include/c++/8.2.1/bits/move.h
cfn=(1494) std::remove_reference<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&>::type&& std::move<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 0xac32c 99 
* * 3250488
+5 * 541748
+3 * 541748
cfi=(12) /usr/include/c++/8.2.1/tuple
cfn=(1544) std::tuple_element<1ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type&& std::get<1ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&)
calls=541748 0xac8f1 1326 
* * 28170896
+5 +1 541748
+1 * 541748

fn=(1558) std::enable_if<(0ul)<std::tuple_size<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::value, std::tuple_element<0ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> > >::type::type&& std::_Mu<std::_Placeholder<1>, false, true>::operator()<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(std::_Placeholder<1> const volatile&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
0xac33a 345 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1494)
calls=541748 -41 99 
* * 3250488
+5 * 541748
+3 * 541748
cfi=(12)
cfn=(1560) std::tuple_element<0ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type&& std::get<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&)
calls=541748 0xac852 1326 
* * 28170896
+5 +1 541748
+1 * 541748

fn=(1574) MomentSolver*& std::_Mu<MomentSolver*, false, false>::operator()<MomentSolver*&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(MomentSolver*&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
0xac2f0 363 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1576) MomentSolver*& std::forward<MomentSolver*&>(std::remove_reference<MomentSolver*&>::type&)
calls=541748 0xac482 74 
* * 3250488
+5 * 541748
+1 * 541748

fn=(60) void std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()>::operator()<, void>()
0x8c2a4 480 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +3 248
cfi=(12)
cfn=(62) std::tuple<> std::forward_as_tuple<>()
calls=248 -33 1475 
* * 992
+5 +1 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(64) void std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>)
calls=248 0x8d10e -86 
* * 519572
+5 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(74) spdlog::details::registry*& std::_Mu<spdlog::details::registry*, false, false>::operator()<spdlog::details::registry*&, std::tuple<> >(spdlog::details::registry*&, std::tuple<>&) const volatile
0x8da18 363 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(76) spdlog::details::registry*& std::forward<spdlog::details::registry*&>(std::remove_reference<spdlog::details::registry*&>::type&)
calls=248 +21 74 
* * 1488
+5 * 248
+1 * 248

fn=(1460) void std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::operator()<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&, void>(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
0xab522 480 541749
+1 * 541749
+3 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+1 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+9 * 541749
+4 * 541749
+2 +4 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448) VectorSpace::Vector<double> const& std::forward<VectorSpace::Vector<double> const&>(std::remove_reference<VectorSpace::Vector<double> const&>::type&)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450) VectorSpace::Matrix<double> const& std::forward<VectorSpace::Matrix<double> const&>(std::remove_reference<VectorSpace::Matrix<double> const&>::type&)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1452) VectorSpace::Matrix<double>& std::forward<VectorSpace::Matrix<double>&>(std::remove_reference<VectorSpace::Matrix<double>&>::type&)
calls=541749 0x81664 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfi=(12)
cfn=(1462) std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> std::forward_as_tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 0xab260 1475 
* * 137604238
+5 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1486) void std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::__call<void, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul, 5ul>)
calls=541748 0xabd78 -86 
* * 131828426880
+5 +1 541745
+4 * 541745
+9 * 541745
jcnd=541745/541745 +7 * 
* * 
+7 * 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(1492) std::enable_if<(4ul)<std::tuple_size<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::value, std::tuple_element<4ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> > >::type::type&& std::_Mu<std::_Placeholder<5>, false, true>::operator()<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(std::_Placeholder<5> const volatile&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
0xac44a 345 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1494)
calls=541748 0xac32c 99 
* * 3250488
+5 * 541748
+3 * 541748
cfi=(12)
cfn=(1496) std::tuple_element<4ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type&& std::get<4ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&)
calls=541748 0xacaca 1326 
* * 27629148
+5 +1 541748
+1 * 541748

fn=(1510) std::enable_if<(3ul)<std::tuple_size<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::value, std::tuple_element<3ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> > >::type::type&& std::_Mu<std::_Placeholder<4>, false, true>::operator()<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(std::_Placeholder<4> const volatile&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
0xac406 345 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1494)
calls=541748 0xac32c 99 
* * 3250488
+5 * 541748
+3 * 541748
cfi=(12)
cfn=(1512) std::tuple_element<3ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type&& std::get<3ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&)
calls=541748 0xaca2f 1326 
* * 28170896
+5 +1 541748
+1 * 541748

fn=(1230) std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::_Bind(std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&&)
0xabd04 472 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1232) std::remove_reference<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::type&& std::move<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>(void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&))
calls=18 0xaafb8 99 
* * 108
+5 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1234) std::remove_reference<std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>::type&& std::move<std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xab998 99 
* * 108
+5 * 18
+3 * 18
+3 * 18
cfi=(12)
cfn=(1236) std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::tuple(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&&)
calls=18 0xabcde 662 
* * 8352
+5 +1 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(1486)
0xabd78 398 541748
+1 * 541748
+3 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+1 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+9 * 541748
+4 * 541748
+2 +3 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1488) std::tuple_element<5ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<5ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac430 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1492)
calls=541748 0xac44a -55 
* * 37922360
+5 * 541748
+3 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1506) std::tuple_element<4ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<4ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac3ec 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1510)
calls=541748 0xac406 -55 
* * 38464108
+5 * 541748
+3 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1522) std::tuple_element<3ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<3ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac3a8 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1526) std::enable_if<(2ul)<std::tuple_size<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::value, std::tuple_element<2ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> > >::type::type&& std::_Mu<std::_Placeholder<3>, false, true>::operator()<std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >(std::_Placeholder<3> const volatile&, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&) const volatile
calls=541748 0xac3c2 -55 
* * 38464108
+5 * 541748
+3 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1538) std::tuple_element<2ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<2ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac364 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1542)
calls=541748 0xac37e -55 
* * 38464108
+5 * 541748
+3 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1554) std::tuple_element<1ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<1ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac312 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1558)
calls=541748 0xac33a -55 
* * 38464108
+5 * 541748
+3 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(12)
cfn=(1570) std::tuple_element<0ul, std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> > >::type& std::get<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::tuple<MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac2d6 1314 
* * 17877684
+5 * 541748
+3 -1 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
cfn=(1574)
calls=541748 0xac2f0 -37 
* * 9209716
+5 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+1 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
cfi=(14) /usr/include/c++/8.2.1/bits/invoke.h
cfn=(1578) std::__invoke_result<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), MomentSolver*&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::type std::__invoke<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), MomentSolver*&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), MomentSolver*&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541748 0xac490 89 
* * 131465455759
+5 * 541745
+4 +2 541745
+1 +1 541745
+4 * 541745
+9 * 541745
jcnd=541745/541745 +7 * 
* * 
+7 * 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(64)
0x8d10e 398 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +3 248
+4 * 248
+4 * 248
+3 * 248
cfi=(12)
cfn=(66) std::tuple_element<0ul, std::tuple<spdlog::details::registry*> >::type& std::get<0ul, spdlog::details::registry*>(std::tuple<spdlog::details::registry*>&)
calls=248 0x8d9fe 1314 
* * 8184
+5 * 248
+3 -1 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(74)
calls=248 0x8da18 -37 
* * 4216
+5 * 248
+3 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(14)
cfn=(78) std::__invoke_result<void (spdlog::details::registry::*&)(), spdlog::details::registry*&>::type std::__invoke<void (spdlog::details::registry::*&)(), spdlog::details::registry*&>(void (spdlog::details::registry::*&)(), spdlog::details::registry*&)
calls=248 0x8da56 89 
* * 499980
+5 +2 248
+1 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(1526)
0xac3c2 345 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1494)
calls=541748 0xac32c 99 
* * 3250488
+5 * 541748
+3 * 541748
cfi=(12)
cfn=(1528) std::tuple_element<2ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type&& std::get<2ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&&)
calls=541748 0xac990 1326 
* * 28170896
+5 +1 541748
+1 * 541748

fl=(80)
fn=(1356)
0x59174 139 35
+1 * 35
+3 * 35
+4 * 35
+4 * 35
+4 * 35
+3 * 35
cfi=(81) /usr/include/c++/8.2.1/ext/new_allocator.h
cfn=(1358) __gnu_cxx::new_allocator<Cell*>::~new_allocator()
calls=35 0x5995c -53 
* * 210
+5 * 35
+1 * 35
+1 * 35

fn=(1336)
0x59db0 133 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(81)
cfn=(1338) __gnu_cxx::new_allocator<Cell*>::new_allocator(__gnu_cxx::new_allocator<Cell*> const&)
calls=36 0x5a06c -53 
* * 252
+5 * 36
+1 * 36
+1 * 36

fl=(43)
fn=(378)
0x7f790 53 763146
+1 * 763146
+3 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+9 * 763146
+4 * 763146
+2 +1 763146
+4 * 763146
+5 * 763146
+3 * 763146
cfi=(31)
cfn=(366)
calls=763146 0x20524 +70 
* * 8394606
+5 * 763146
+4 * 763146
+5 +1 763146
+4 * 763146
+5 * 763146
+3 * 763146
cfi=(31)
cfn=(366)
calls=763146 0x20524 +69 
* * 8394606
+5 * 763146
+4 * 763146
+5 +1 763146
+4 * 763146
+5 * 763146
+3 * 763146
cfi=(31)
cfn=(366)
calls=763146 0x20524 +68 
* * 8394606
+5 * 763146
+4 * 763146
+5 +1 763146
+4 * 763146
+5 * 763146
+3 * 763146
cfi=(31)
cfn=(366)
calls=763146 0x20524 +67 
* * 8394606
+5 * 763146
+4 * 763146
+5 +1 763146
+4 * 763146
+8 * 763146
+8 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
cob=(9)
cfi=(33)
cfn=(286) exp
calls=763146 0x106e0 -58 
* * 70972578
* * 763146
+5 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
cob=(9)
cfi=(33)
cfn=(202) pow
calls=763146 0xff80 -58 
* * 184681242
* * 763146
+5 * 763146
+4 +1 763146
+4 * 763146
+8 * 763146
+8 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+5 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+4 * 763146
+5 +1 763146
+5 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +37 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +36 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +35 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +34 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +33 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +32 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +31 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 305260974
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +30 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +29 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +28 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +27 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 305260974
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +26 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +25 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 305260974
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +24 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 305260974
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +23 
* * 13736628
+5 * 763146
+5 * 763146
+4 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 198457092
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 205834105
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+5 +1 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 54946512
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+4 * 763146
+5 -1 763146
+5 * 763146
+4 * 763146
+5 * 763146
+4 * 763146
+8 * 763146
+4 * 763146
+5 +2 763146
+5 * 763146
+5 * 763146
cfi=(32)
cfn=(198)
calls=763146 0x6603e 415 
* * 290761200
+5 * 763146
+4 * 763146
+8 * 763146
+4 -1 763146
+5 * 763146
+4 * 763146
+5 -1 763146
+4 * 763146
+5 * 763146
+5 * 763146
+3 * 763146
cfi=(37)
cfn=(252)
calls=763146 0x205a4 +22 
* * 13736628
+5 * 763146
+5 * 763146
+4 +3 763146
+1 * 763146
+4 * 763146
+9 * 763146
jcnd=763146/763146 +7 * 
* * 
+7 * 763146
+1 * 763146

fn=(368)
0x7ef0a 7 4599435
+1 * 4599435
+3 * 4599435
+4 * 4599435
+4 * 4599435
+4 * 4599435
+4 +1 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(366)
calls=4599435 0x20524 124 
* * 50593785
+5 * 4599435
+4 * 4599435
+5 +1 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(366)
calls=4599435 0x20524 124 
* * 50593785
+5 * 4599435
+4 * 4599435
+5 +1 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(366)
calls=4599435 0x20524 124 
* * 50593785
+5 * 4599435
+4 * 4599435
+5 +1 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(366)
calls=4599435 0x20524 124 
* * 50593785
+5 * 4599435
+4 * 4599435
+5 +1 4599435
+4 * 4599435
+8 * 4599435
+8 * 4599435
+4 * 4599435
+8 * 4599435
+4 * 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
cfi=(32)
cfn=(198)
calls=4599435 0x6603e 415 
* * 331159320
+5 * 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
cfi=(32)
cfn=(198)
calls=4599435 0x6603e 415 
* * 331159320
+5 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+4 * 4599435
+4 * 4599435
+8 * 4599435
+4 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+4 * 4599435
+4 * 4599435
+5 * 4599435
cob=(9)
cfi=(33)
cfn=(286)
calls=4599435 0x106e0 -12 
* * 427747455
* * 4599435
+5 * 4599435
+5 +1 4599435
+4 * 4599435
+8 * 4599435
+8 * 4599435
+4 * 4599435
+8 * 4599435
+4 * 4599435
+4 * 4599435
+5 * 4599435
+8 * 4599435
+4 * 4599435
+4 * 4599435
cob=(9)
cfi=(33)
cfn=(202)
calls=4599435 0xff80 -13 
* * 1044076975
* * 4599435
+5 * 4599435
+5 * 4599435
+5 +1 4599435
+5 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(196)
calls=4599435 0x20542 122 
* * 50593785
+5 * 4599435
+5 * 4599435
+4 +1 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
+8 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(196)
calls=4599435 0x20542 122 
* * 50593785
+5 * 4599435
+5 * 4599435
+4 +1 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
+8 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(196)
calls=4599435 0x20542 122 
* * 50593785
+5 * 4599435
+5 * 4599435
+4 +1 4599435
+5 * 4599435
+5 * 4599435
cfi=(32)
cfn=(198)
calls=4599435 0x6603e 415 
* * 331159320
+5 * 4599435
+4 * 4599435
+8 * 4599435
+4 * 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
cfi=(32)
cfn=(198)
calls=4599435 0x6603e 415 
* * 331159320
+5 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+4 * 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
+5 * 4599435
cfi=(32)
cfn=(198)
calls=4599435 0x6603e 415 
* * 331159320
+5 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+4 * 4599435
+8 * 4599435
+4 * 4599435
+5 * 4599435
+4 * 4599435
+5 * 4599435
+3 * 4599435
cfi=(31)
cfn=(196)
calls=4599435 0x20542 122 
* * 50593785
+5 * 4599435
+5 * 4599435
+4 +1 4599435
+1 * 4599435
+1 * 4599435

fn=(280) EulerClosure2D::U(VectorSpace::Matrix<double> const&)
0x7f47a 35 177133
+1 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+9 * 177133
+4 * 177133
+2 +2 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(264) VectorSpace::Matrix<double>::columns() const
calls=177133 0x20560 203 
* * 1239931
+5 * 177133
+2 * 177133
+4 * 177133
+6 * 177133
+4 * 177133
+4 * 177133
+2 * 177133
+3 * 177133
cfi=(37)
cfn=(282)
calls=177133 0x205d6 +27 
* * 325747587
+5 +1 177133
+7 * 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(264)
calls=177133 0x20560 203 
* * 1239931
-7 * 3542660
+4 * 3542660
+3 * 3542660
cfi=(37)
cfn=(264)
calls=3542660 0x20560 203 
* * 24798620
+5 * 3719793
+3 * 3719793
+3 * 3719793
+2 * 3719793
jcnd=177133/3719793 0x7f775 +12 
* * 
+6 +1 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(278)
calls=3542660 0x20572 +61 
* * 63767880
+5 * 3542660
+4 * 3542660
+5 +1 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(278)
calls=3542660 0x20572 +60 
* * 63767880
+5 * 3542660
+4 * 3542660
+5 +1 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(278)
calls=3542660 0x20572 +59 
* * 63767880
+5 * 3542660
+4 * 3542660
+5 +1 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(278)
calls=3542660 0x20572 +58 
* * 63767880
+5 * 3542660
+4 * 3542660
+5 +1 3542660
+4 * 3542660
+8 * 3542660
+8 * 3542660
+4 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
cfi=(32)
cfn=(198)
calls=3542660 0x6603e 415 
* * 255071520
+5 * 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
cfi=(32)
cfn=(198)
calls=3542660 0x6603e 415 
* * 255071520
+5 * 3542660
+5 * 3542660
+4 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+4 * 3542660
+4 * 3542660
+8 * 3542660
+4 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+4 * 3542660
+4 * 3542660
+4 * 3542660
cob=(9)
cfi=(33)
cfn=(286)
calls=3542660 0x106e0 -43 
* * 329467380
* * 3542660
+5 * 3542660
+4 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+5 * 3542660
cob=(9)
cfi=(33)
cfn=(202)
calls=3542660 0xff80 -43 
* * 857323720
* * 3542660
+5 * 3542660
+5 * 3542660
+4 +1 3542660
+5 * 3542660
+5 * 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(252)
calls=3542660 0x205a4 +54 
* * 63767880
+5 * 3542660
+5 * 3542660
+4 +1 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(252)
calls=3542660 0x205a4 +53 
* * 63767880
+5 * 3542660
+5 * 3542660
+4 +1 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(252)
calls=3542660 0x205a4 +52 
* * 63767880
+5 * 3542660
+5 * 3542660
+4 +1 3542660
+5 * 3542660
+5 * 3542660
cfi=(32)
cfn=(198)
calls=3542660 0x6603e 415 
* * 255071520
+5 * 3542660
+4 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
cfi=(32)
cfn=(198)
calls=3542660 0x6603e 415 
* * 255071520
+5 * 3542660
+5 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+4 * 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
+5 * 3542660
cfi=(32)
cfn=(198)
calls=3542660 0x6603e 415 
* * 255071520
+5 * 3542660
+4 * 3542660
+5 * 3542660
+4 * 3542660
+4 * 3542660
+8 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
+4 * 3542660
+5 * 3542660
+3 * 3542660
cfi=(37)
cfn=(252)
calls=3542660 0x205a4 +51 
* * 63767880
+5 * 3542660
+5 * 3542660
+4 -9 3542660
+4 * 3542660
jump=3542660 0x7f4ce * 
* * 
+5 +12 177133
+1 +1 177133
+4 * 177133
+4 * 177133
+9 * 177133
jcnd=177133/177133 +7 * 
* * 
+7 * 177133
+1 * 177133

fl=(68) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/log_msg.h
fn=(1060) spdlog::details::log_msg::log_msg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, spdlog::level::level_enum, std::basic_string_view<char, std::char_traits<char> >)
0x469e6 19 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 +9 18
+4 * 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+3 -5 18
+4 * 18
cfi=(69)
cfn=(1062)
calls=18 0x46980 +38 
* * 810
+5 * 18
+4 +4 18
cfi=(69)
cfn=(1064)
calls=18 0x469a0 340 
* * 180
+5 * 18
+3 +1 18
+4 * 18
+4 * 18
+4 * 18
+8 * 18
+4 * 18
+8 * 18
+4 * 18
+8 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+4 +3 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fl=(81)
fn=(1354) __gnu_cxx::new_allocator<Cell*>::max_size() const
0x5a490 129 18
+1 * 18
+3 * 18
+4 +1 18
+10 * 18
+1 * 18

fn=(1338)
0x5a06c 81 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(1634) __gnu_cxx::new_allocator<Cell*>::deallocate(Cell**, unsigned long)
0x59f6c 116 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+4 +9 17
+4 * 17
+3 * 17
cob=(5)
cfi=(4)
cfn=(1636)
calls=17 0x120938 0 
* * 5666
+5 +1 17
+1 * 17

fn=(1358)
0x5995c 86 35
+1 * 35
+3 * 35
+4 * 35
+1 * 35
+1 * 35

fn=(1352) __gnu_cxx::new_allocator<Cell*>::allocate(unsigned long, void const*)
0x5a25c 99 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+3 * 18
cfn=(1354)
calls=18 0x5a490 +28 
* * 108
+5 * 18
+4 * 18
+3 * 18
+2 * 18
jcnd=18/18 +7 +10 
* * 
+7 +10 18
+4 * 18
+4 * 18
+3 * 18
cob=(5)
cfi=(4)
cfn=(1228)
calls=18 0x1208f0 0 
* * 4518
+5 * 18
+1 +1 18
+1 * 18

fl=(26) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/sinks/base_sink.h
fn=(1206) spdlog::sinks::base_sink<std::mutex>::log(spdlog::details::log_msg const&)
0x8f76a 29 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(16) /usr/include/c++/8.2.1/bits/std_mutex.h
cfn=(86) std::lock_guard<std::mutex>::lock_guard(std::mutex&)
calls=18 0x613c0 161 
* * 1458
+5 +1 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(27) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/sinks/basic_file_sink.h
cfn=(1208) spdlog::sinks::basic_file_sink<std::mutex>::sink_it_(spdlog::details::log_msg const&)
calls=18 0x8f962 +2 
* * 42012
+2 -1 18
+4 * 18
+3 * 18
cfi=(16)
cfn=(160) std::lock_guard<std::mutex>::~lock_guard()
calls=18 0x613ee 167 
* * 1242
+5 +2 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +35 * 
* * 
+35 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(174) spdlog::sinks::base_sink<std::mutex>::flush()
0x8f804 35 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(16)
cfn=(86)
calls=248 0x613c0 161 
* * 20088
+5 +1 248
+4 * 248
+3 * 248
+4 * 248
+3 * 248
+4 * 248
+3 * 248
cfi=(27)
cfn=(176) spdlog::sinks::basic_file_sink<std::mutex>::flush_()
calls=248 0x8fa5c +3 
* * 26300
+2 -1 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(160)
calls=248 0x613ee 167 
* * 17112
+5 +2 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +35 * 
* * 
+35 * 248
+4 * 248
+1 * 248
+1 * 248

fl=(70) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/sinks/sink.h
fn=(1068) spdlog::sinks::sink::should_log(spdlog::level::level_enum) const
0x1cd58 35 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+3 +2 36
+4 * 36
+4 * 36
+4 * 36
fi=(55) /usr/include/c++/8.2.1/bits/atomic_base.h
+7 392 36
+3 * 36
+5 * 36
+2 * 36
cfn=(624) std::operator&(std::memory_order, std::__memory_order_modifier)
calls=36 0x1ad83 81 
* * 324
+5 * 36
+3 +4 36
+4 * 36
+2 * 36
fe=(70)
+2 37 36
+3 * 36
+2 * 36
+3 +1 36
+1 * 36

fl=(39) /home/jannick/Projects/UQCreator/code/src/mesh.cpp
fn=(254) Mesh::GetArea(unsigned int) const
0x91aea 42 177133
+1 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(256)
calls=177133 0x92164 948 
* * 1948463
+5 * 177133
+3 * 177133
+3 * 177133
cfi=(40) /home/jannick/Projects/UQCreator/code/src/cell.cpp
cfn=(258) Cell::GetArea()
calls=177133 0x57ece -1 
* * 1239931
+5 * 177133
+5 * 177133
+4 * 177133
+5 * 177133
+1 * 177133

fn=(1324) Mesh::GetNumCells() const
0x91a86 34 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+1 * 18

fn=(1432) Mesh::GetBoundaryType(unsigned int) const
0x91db0 56 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+4 * 541749
+7 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfi=(23)
cfn=(1434)
calls=541749 0x921a4 948 
* * 5959239
+5 * 541749
+2 * 541749
+1 * 541749

fn=(1326) Mesh::GetGrid() const
0x91abc 40 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(23)
cfn=(1328)
calls=18 0x58622 458 
* * 1485828
+5 * 18
+4 * 18
+1 * 18

fl=(79)
fn=(1350)
0x5a07b 435 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+5 * 18
+3 * 18
+3 * 18
cfi=(81)
cfn=(1352)
calls=18 0x5a25c 99 
* * 4986
+5 * 18
+1 * 18

fn=(1632)
0x59cb9 461 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+4 +1 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
cfi=(81)
cfn=(1634)
calls=17 0x59f6c 116 
* * 5853
+5 * 17
+1 * 17
+1 * 17

fn=(1334)
0x59933 504 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(80)
cfn=(1336)
calls=18 0x59db0 133 
* * 360
+5 * 18
+4 * 18
+1 * 18

fl=(83) /home/jannick/Projects/UQCreator/code/src/euler2d.cpp
fn=(1600) Euler2D::F(VectorSpace::Vector<double> const&)
0x7c64e 89 21669915
+1 * 21669915
+3 * 21669915
+4 * 21669915
+4 * 21669915
+4 * 21669915
+4 * 21669915
+9 * 21669915
+4 * 21669915
+2 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +34 
* * 238369065
+5 * 21669915
+4 * 21669915
+8 * 21669915
+4 * 21669915
+5 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +33 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +32 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 +1 21669915
+4 * 21669915
+5 * 21669915
+8 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +31 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +31 
* * 238369065
+5 * 21669915
+4 * 21669915
+8 * 21669915
+4 * 21669915
+5 * 21669915
+8 * 21669915
+5 * 21669915
cob=(9)
cfi=(33)
cfn=(202)
calls=21669915 0xff80 -93 
* * 1256855070
* * 21669915
+5 * 21669915
+5 * 21669915
+8 * 21669915
+5 * 21669915
cob=(9)
cfi=(33)
cfn=(202)
calls=21669915 0xff80 -93 
* * 1256855070
* * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+4 * 21669915
+5 * 21669915
+5 +1 21669915
+4 * 21669915
+3 * 21669915
cfi=(31)
cfn=(444) VectorSpace::Vector<double>::size() const
calls=21669915 0x66156 238 
* * 151689405
+5 * 21669915
+2 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(266)
calls=21669915 0x4b47a -41 
* * 6024236370
+5 +2 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +28 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 +2 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +27 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 +1 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +26 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 * 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +25 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 -1 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +24 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 -2 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +23 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 -3 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +22 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 -4 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +1 21669915
+4 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(31)
cfn=(366)
calls=21669915 0x20524 +21 
* * 238369065
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+5 * 21669915
+4 * 21669915
+5 * 21669915
+5 * 21669915
+3 * 21669915
cfi=(37)
cfn=(252)
calls=21669915 0x205a4 -5 
* * 390058470
+5 * 21669915
+5 * 21669915
+4 +2 21669915
+1 +1 21669915
+4 * 21669915
+4 * 21669915
+9 * 21669915
jcnd=21669915/21669915 +7 * 
* * 
+7 * 21669915
+1 * 21669915

fn=(1586) Euler2D::G(VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
0x7ba76 52 541748
+1 * 541748
+3 * 541748
+1 * 541748
+7 * 541748
+7 * 541748
+7 * 541748
+7 * 541748
+7 * 541748
+7 * 541748
+7 * 541748
+9 * 541748
+4 * 541748
+2 +1 541748
+7 * 541748
+3 * 541748
cfi=(37)
cfn=(276) VectorSpace::Matrix<double>::rows() const
calls=541748 0x4b468 201 
* * 3792236
+5 * 541748
+6 +1 541748
+7 * 541748
+3 * 541748
cfi=(37)
cfn=(264)
calls=541748 0x20560 203 
* * 3792236
+5 * 541748
+6 +1 541748
+6 * 541748
+6 * 541748
+7 * 541748
+5 * 541748
+3 * 541748
cfi=(37)
cfn=(266)
calls=541748 0x4b47a -2 
* * 998983312
+5 +1 541748
+10 * 541748
+6 * 541748
+6 * 541748
-12 * 10834956
+6 * 10834956
+6 * 10834956
jcnd=541746/10834956 0x7c628 +30 
* * 
+6 +3 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +41 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +40 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +39 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+7 * 10834958
+5 * 10834958
+8 * 10834958
+4 * 10834958
+8 * 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +38 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +38 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(202)
calls=10834958 0xff80 -62 
* * 628427564
* * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(202)
calls=10834958 0xff80 -62 
* * 628427564
* * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
+4 * 10834958
+4 * 10834958
+8 * 10834958
+8 +1 10834958
+7 * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(226)
calls=10834958 0x10370 -63 
* * 86679664
* * 10834958
+5 * 10834958
+5 * 10834958
+7 +2 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +35 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +34 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +33 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 +1 10834958
+7 * 10834958
+5 * 10834958
+8 * 10834958
+4 * 10834958
+8 * 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +32 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+6 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(37)
cfn=(278)
calls=10834958 0x20572 +32 
* * 195029244
+5 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(202)
calls=10834958 0xff80 -68 
* * 628427564
* * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(202)
calls=10834958 0xff80 -68 
* * 628427564
* * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
+8 * 10834958
+4 * 10834958
+4 * 10834958
+8 * 10834958
+8 +1 10834958
+7 * 10834958
+5 * 10834958
+8 * 10834958
+8 * 10834958
cob=(9)
cfi=(33)
cfn=(226)
calls=10834958 0x10370 -69 
* * 86679664
* * 10834958
+5 * 10834958
+5 * 10834958
+7 +2 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(31)
cfn=(366)
calls=10834958 0x20524 +53 
* * 119184538
+5 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(31)
cfn=(366)
calls=10834958 0x20524 +53 
* * 119184538
+5 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+8 +1 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(31)
cfn=(366)
calls=10834958 0x20524 +52 
* * 119184538
+5 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+7 * 10834958
+5 * 10834958
+3 * 10834958
cfi=(31)
cfn=(366)
calls=10834958 0x20524 +52 
* * 119184538
+5 * 10834958
+4 * 10834958
+8 * 10834958
+8 * 10834958
+8 +2 10834958
+8 * 10834958
+8 * 10834958
+8 +1 10834958
+8 * 10834958
+8 * 10834958
+8 +2 10834958
+8 * 10834958
+4 * 10834958
+4 * 10834958
jcnd=10834958/10834958 0x7c005 +2 
* * 
0x7c005 +2 10834958
+8 * 10834958
+4 * 10834958
+4 * 10834958
jcnd=10834958/10834958 0x7c0cf +4 
* * 
0x7c0cf +4 10834958
+7 * 10834958
+3 * 10834958
cfi=(45)
cfn=(1588) double norm<double>(VectorSpace::Vector<double> const&)
calls=10834958 0x7ae20 +29 
* * 1484389246
+5 * 10834958
+5 * 10834958
+7 * 10834958
+4 * 10834958
+6 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(45)
cfn=(1592) VectorSpace::Vector<double> column<double>(VectorSpace::Matrix<double> const&, unsigned int)
calls=10834958 0x4b5c1 -66 
* * 422563362
+5 * 10834958
+7 * 10834958
+6 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(45)
cfn=(1592)
calls=10834958 0x4b5c1 -66 
* * 422563362
+5 * 10834958
+4 * 10834958
+4 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(31)
cfn=(1596) VectorSpace::Vector<double>::operator-(VectorSpace::Vector<double> const&) const
calls=10834958 0x7ad62 +51 
* * 3586371098
+5 * 10834958
+8 * 10834958
+8 * 10834958
+4 * 10834958
+8 * 10834958
+4 * 10834958
+4 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(45)
cfn=(522)
calls=10834958 0x65f76 +31 
* * 3943924712
+5 * 10834958
+4 * 10834958
+7 * 10834958
+4 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(31)
cfn=(1598) VectorSpace::Vector<double>::operator*(double const&) const
calls=10834958 0x4b3b6 +91 
* * 3413011770
+5 -1 10834958
+7 * 10834958
+6 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(45)
cfn=(1592)
calls=10834958 0x4b5c1 -65 
* * 422563362
+5 * 10834958
+7 * 10834958
+7 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfn=(1600)
calls=10834958 0x7c64e +7 
* * 9599772788
+5 * 10834958
+7 * 10834958
+7 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(45)
cfn=(350) VectorSpace::Matrix<double> operator*<double, double>(double const&, VectorSpace::Matrix<double> const&)
calls=10834958 0x4b96e -50 
* * 8548781862
+5 * 10834958
+7 * 10834958
+7 * 10834958
+7 * 10834958
+3 * 10834958
+3 * 10834958
cfi=(37)
cfn=(362)
calls=10834958 0x6606e +93 
* * 8245402946
+5 * 10834957
+7 * 10834957
+6 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(45)
cfn=(1592)
calls=10834957 0x4b5c1 -65 
* * 422563323
+5 * 10834957
+7 * 10834957
+7 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfn=(1600)
calls=10834957 0x7c64e +7 
* * 9599771902
+5 * 10834957
+7 * 10834957
+7 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(45)
cfn=(350)
calls=10834957 0x4b96e -50 
* * 8548781073
+5 * 10834957
+7 * 10834957
+7 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(37)
cfn=(362)
calls=10834957 0x6606e +93 
* * 8245402277
+5 * 10834957
+7 * 10834957
+7 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(31)
cfn=(1596)
calls=10834957 0x7ad62 +52 
* * 3586370767
+5 * 10834957
+4 * 10834957
+4 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(31)
cfn=(1602) VectorSpace::Vector<double>::operator+(VectorSpace::Vector<double> const&) const
calls=10834957 0x7ae48 +44 
* * 3586370767
+5 * 10834957
+8 * 10834957
+8 * 10834957
+4 * 10834957
+4 * 10834957
+8 * 10834957
+4 * 10834957
+8 * 10834957
+4 * 10834957
+4 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(45)
cfn=(522)
calls=10834957 0x65f76 +32 
* * 5106044491
+5 * 10834957
+7 * 10834957
+6 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(45)
cfn=(1604) VectorSpace::Vector<double> column<double>(VectorSpace::Matrix<double>&, unsigned int)
calls=10834957 0x4b578 -69 
* * 422563323
+5 * 10834957
+4 * 10834957
+7 * 10834957
+3 * 10834957
+3 * 10834957
cfi=(31)
cfn=(538)
calls=10834957 0x4b60a +29 
* * 964311173
+5 * 10834957
+7 * 10834957
+3 * 10834957
cfi=(31)
cfn=(234)
calls=10834957 0x4b340 +7 
* * 130019484
+5 * 10834957
+4 * 10834957
+3 * 10834957
cfi=(31)
cfn=(234)
calls=10834957 0x4b340 +7 
* * 1183781633
+5 * 10834957
+4 * 10834957
+3 * 10834957
cfi=(31)
cfn=(234)
calls=10834957 0x4b340 +7 
* * 1183781633
+5 * 10834957
+7 * 10834957
+3 * 10834957
cfi=(31)
cfn=(234)
calls=10834957 0x4b340 +7 
* * 1183781633
+5 * 10834957
+7 * 10834957
+3 * 10834957
cfi=(31)
cfn=(234)
calls=10834957 0x4b340 +7 
* * 1183781633
+5 * 10834957
+7 * 10834957
+3 * 10834957
cfi=(37)
cfn=(246)
calls=10834957 0x4b54e * 
* * 1129606761
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(37)
cfn=(246)
calls=10834956 0x4b54e * 
* * 1129606746
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +7 
* * 130019472
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +7 
* * 1183781526
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(37)
cfn=(246)
calls=10834956 0x4b54e * 
* * 1129606746
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(37)
cfn=(246)
calls=10834956 0x4b54e * 
* * 1129606746
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +7 
* * 130019472
+5 +1 10834956
+4 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +6 
* * 1183781526
+5 * 10834956
+4 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +6 
* * 1183781526
+5 * 10834956
+4 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +6 
* * 1454655426
+5 * 10834956
+7 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +6 
* * 130019472
+5 * 10834956
+4 * 10834956
+3 * 10834956
cfi=(31)
cfn=(234)
calls=10834956 0x4b340 +6 
* * 130019472
+5 -27 10834956
+7 * 10834956
jump=10834956 0x7bb0f * 
* * 
0x7c628 +30 541746
+1 +1 541746
+7 * 541746
+4 * 541746
+9 * 541746
jcnd=541746/541746 +7 * 
* * 
+7 * 541746
+7 * 541746
+1 * 541746
+1 * 541746

fl=(13)
fn=(1282) std::_Placeholder<4>&& std::forward<std::_Placeholder<4> >(std::remove_reference<std::_Placeholder<4> >::type&)
0xaba59 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1274) std::_Placeholder<5>&& std::forward<std::_Placeholder<5> >(std::remove_reference<std::_Placeholder<5> >::type&)
0xab9ce 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(542) std::mutex* std::__addressof<std::mutex>(std::mutex&)
0x8ac20 47 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+1 * 248

fn=(1242) std::remove_reference<std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>::type&& std::move<std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>(std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xac265 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(666) fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double>&& std::forward<fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double> >(std::remove_reference<fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double> >::type&)
0xab956 74 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1306) std::_Placeholder<1>&& std::forward<std::_Placeholder<1> >(std::remove_reference<std::_Placeholder<1> >::type&)
0xabc6f 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1448)
0x74c01 74 7584480
+1 * 7584480
+3 * 7584480
+4 +1 7584480
+4 * 7584480
+1 * 7584480

fn=(558) std::remove_reference<spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}&>::type&& std::move<spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}&>(spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}&)
0x8991d 99 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+1 * 248

fn=(76)
0x8da48 74 744
+1 * 744
+3 * 744
+4 +1 744
+4 * 744
+1 * 744

fn=(80) void (spdlog::details::registry::*&std::forward<void (spdlog::details::registry::*&)()>(std::remove_reference<void (spdlog::details::registry::*&)()>::type&))()
0x8da3a 74 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+1 * 248

fn=(688) fmt::v5::internal::basic_buffer<char>* std::__addressof<fmt::v5::internal::basic_buffer<char> >(fmt::v5::internal::basic_buffer<char>&)
0x25ab7 47 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1234)
0xab998 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1314) MomentSolver*&& std::forward<MomentSolver*>(std::remove_reference<MomentSolver*>::type&)
0xa9f80 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1450)
0x74cbb 74 7584480
+1 * 7584480
+3 * 7584480
+4 +1 7584480
+4 * 7584480
+1 * 7584480

fn=(1494)
0xac32c 99 2708740
+1 * 2708740
+3 * 2708740
+4 +1 2708740
+4 * 2708740
+1 * 2708740

fn=(1232)
0xaafb8 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1248) std::remove_reference<std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>::type&& std::move<std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>(std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xabc61 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1254) std::remove_reference<std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>::type&& std::move<std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&>(std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xabbaf 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1260) std::remove_reference<std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&>::type&& std::move<std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&>(std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xabafd 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1266) std::remove_reference<std::_Tuple_impl<5ul, std::_Placeholder<5> >&>::type&& std::move<std::_Tuple_impl<5ul, std::_Placeholder<5> >&>(std::_Tuple_impl<5ul, std::_Placeholder<5> >&)
0xaba4b 99 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(1580) void (MomentSolver::*&std::forward<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>(std::remove_reference<void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::type&))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
0xac474 74 541748
+1 * 541748
+3 * 541748
+4 +1 541748
+4 * 541748
+1 * 541748

fn=(1222) std::remove_reference<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&>::type&& std::move<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&>(std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&)
0xaa10f 99 54
+1 * 54
+3 * 54
+4 +1 54
+4 * 54
+1 * 54

fn=(1290) std::_Placeholder<3>&& std::forward<std::_Placeholder<3> >(std::remove_reference<std::_Placeholder<3> >::type&)
0xabb0b 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1452)
0x81664 74 3792240
+1 * 3792240
+3 * 3792240
+4 +1 3792240
+4 * 3792240
+1 * 3792240

fn=(1298) std::_Placeholder<2>&& std::forward<std::_Placeholder<2> >(std::remove_reference<std::_Placeholder<2> >::type&)
0xabbbd 74 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1576)
0xac482 74 1625244
+1 * 1625244
+3 * 1625244
+4 +1 1625244
+4 * 1625244
+1 * 1625244

fl=(15) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/registry.h
fn=(84) spdlog::details::registry::flush_all()
0x88bb0 179 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(16)
cfn=(86)
calls=248 0x613c0 -20 
* * 20088
+5 +1 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
cfi=(17) /usr/include/c++/8.2.1/bits/unordered_map.h
cfn=(98) std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<spdlog::logger>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > > >::begin()
calls=248 0x89ff0 324 
* * 14880
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfi=(17)
cfn=(108) std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<spdlog::logger>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > > >::end()
calls=248 0x650b2 346 
* * 12152
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(19) /usr/include/c++/8.2.1/bits/hashtable_policy.h
cfn=(112) bool std::__detail::operator!=<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>(std::__detail::_Node_iterator_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true> const&, std::__detail::_Node_iterator_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true> const&)
calls=248 0x8a00a 312 
* * 2976
-14 * 496
+4 * 496
+4 * 496
+3 * 496
+3 * 496
cfi=(19)
cfn=(112)
calls=496 0x8a00a 312 
* * 5952
+5 * 744
+2 * 744
jcnd=248/744 +56 -1 
* * 
+2 * 496
+4 * 496
+3 * 496
cfi=(19)
cfn=(114) std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, false, true>::operator*() const
calls=496 0x8a04a 345 
* * 21824
+5 * 496
+4 +2 496
+4 * 496
+4 * 496
+3 * 496
cfi=(21)
cfn=(124)
calls=496 0x1f524 988 
* * 12400
+5 * 496
+3 * 496
cfi=(22)
cfn=(130) spdlog::logger::flush()
calls=496 0x1cf3e 302 
* * 340764
+5 -2 496
+4 * 496
+3 * 496
cfi=(19)
cfn=(180) std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, false, true>::operator++()
calls=496 0x8a02c 353 
* * 15376
+5 * 496
jump=496 -75 * 
* * 
+2 -1 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(160)
calls=248 0x613ee -14 
* * 17112
+5 +5 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +35 * 
* * 
+35 * 248
+4 * 248
+1 * 248
+1 * 248

fl=(76) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/console_globals.h
fn=(1204) spdlog::details::console_stdout::stream()
0x60a6a 28 18
+1 * 18
+3 +2 18
+7 +1 18
+1 * 18

fl=(40)
fn=(1438) Cell::GetNormal(unsigned int)
0x580a4 68 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfi=(23)
cfn=(1440)
calls=541749 0x589a0 930 
* * 5959239
+5 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfi=(31)
cfn=(1442) VectorSpace::Vector<double>::Vector(VectorSpace::Vector<double> const&)
calls=541749 0x588ec +27 
* * 70427370
+5 * 541749
+4 * 541749
+1 * 541749

fn=(258)
0x57ece 41 357713
+1 * 357713
+3 * 357713
+4 * 357713
+4 * 357713
+5 * 357713
+1 * 357713

fn=(1614) Cell::GetBoundaryType() const
0x57f3a 49 8089
+1 * 8089
+3 * 8089
+4 * 8089
+4 * 8089
+3 * 8089
+1 * 8089

fn=(1616) Cell::GetBoundaryUnitNormal()
0x57f4c 51 72000
+1 * 72000
+3 * 72000
+4 * 72000
+4 * 72000
+4 * 72000
+4 * 72000
+7 * 72000
+4 * 72000
+3 * 72000
+3 * 72000
cfi=(31)
cfn=(1442)
calls=72000 0x588ec +44 
* * 9360000
+5 * 72000
+4 * 72000
+1 * 72000

fn=(1424) Cell::GetNeighborIDs()
0x57ef4 45 181473
+1 * 181473
+3 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+3 * 181473
+3 * 181473
cfi=(31)
cfn=(1426) VectorSpace::Vector<unsigned int>::Vector(VectorSpace::Vector<unsigned int> const&)
calls=181473 0x5884e +50 
* * 26858004
+5 * 181473
+4 * 181473
+1 * 181473

fn=(1428) Cell::IsBoundaryCell()
0x57e7c 35 181473
+1 * 181473
+3 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+1 * 181473

fn=(1444) Cell::GetUnitNormal(unsigned int)
0x5805e 66 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfi=(23)
cfn=(1440)
calls=541749 0x589a0 930 
* * 5959239
+5 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfi=(31)
cfn=(1442)
calls=541749 0x588ec +29 
* * 70427370
+5 * 541749
+4 * 541749
+1 * 541749

fl=(84)
fn=(1622)
0x58d86 203 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+4 +3 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
cfn=(1624) void std::_Destroy<Cell**>(Cell**, Cell**)
calls=17 0x59705 -79 
* * 340
+5 +1 17
+1 * 17
+1 * 17

fn=(1624)
0x59705 127 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 +10 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17
cfn=(1626) void std::_Destroy_aux<true>::__destroy<Cell**>(Cell**, Cell**)
calls=17 0x59ce7 -20 
* * 119
+5 +1 17
+1 * 17
+1 * 17

fn=(1626)
0x59ce7 117 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+1 * 17
+1 * 17

fl=(18) /usr/include/c++/8.2.1/bits/hashtable.h
fn=(110) std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::end()
0x69e42 511 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +1 248
+4 * 248
+5 * 248
+3 * 248
cfi=(19)
cfn=(104) std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, false, true>::_Node_iterator(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>*)
calls=248 0x6cfc2 341 
* * 5704
+5 * 248
+4 * 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(100) std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::begin()
0x8b1ec 503 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +1 248
+4 * 248
+3 * 248
cfn=(102) std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_begin() const
calls=248 0x6d086 388 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(19)
cfn=(104)
calls=248 0x6cfc2 341 
* * 5704
+5 * 248
+4 * 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(102)
0x6d086 388 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+4 * 248
+1 * 248

fl=(63) /usr/include/c++/8.2.1/bits/stl_iterator_base_types.h
fn=(962) std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
0x26959 205 36
+1 * 36
+3 * 36
+4 +1 36
+1 * 36

fn=(1026) std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
0x25978 205 18
+1 * 18
+3 * 18
+4 +1 18
+1 * 18

fl=(8) /usr/include/c++/8.2.1/chrono
fn=(548) std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x5e3df 164 744
+1 * 744
+3 * 744
+4 * 744
+4 * 744
+9 * 744
+4 * 744
+2 +4 744
+4 * 744
+3 * 744
cfn=(550) std::chrono::duration<long, std::ratio<1l, 1l> >::count() const
calls=744 0x5e072 348 
* * 5208
+5 * 744
+7 * 744
fi=(71) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/pattern_formatter.h
+4 357 744
+4 * 744
+4 * 744
+3 * 744
+3 * 744
cfi=(8)
cfn=(552) std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
calls=744 0x5cf46 -24 
* * 8184
fe=(8)
+5 168 744
+4 +1 744
+4 * 744
+9 * 744
jcnd=744/744 +7 * 
* * 
+7 * 744
+1 * 744

fn=(560) std::chrono::time_point<std::chrono::_V2::system_clock, std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type> std::chrono::operator+<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
0x8ad76 715 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +6 248
+4 * 248
+3 * 248
cfn=(32) std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
calls=248 0x5cf76 -82 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(562) std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator+<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=248 0x8acec 452 
* * 15376
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(564) std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_point(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=248 0x61ee8 -95 
* * 2728
+5 * 248
+4 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(574) std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1l> > >::time_point(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x87fae 626 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+4 * 248
+3 * 248
+3 +1 248
+1 * 248
+1 * 248

fn=(582) std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
0x61cbc 193 248
+1 * 248
+3 * 248
+4 * 248
+4 +9 248
+4 * 248
+3 * 248
cfn=(584) std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1l, 1l>, long, true, true>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=248 +7 -63 
* * 9920
+5 +1 248
+1 * 248

fn=(32)
0x5cf76 639 1312
+1 * 1312
+3 * 1312
+4 +1 1312
+4 * 1312
+3 * 1312
+1 * 1312

fn=(550)
0x5e072 348 1100
+1 * 1100
+3 * 1100
+4 +1 1100
+4 * 1100
+3 * 1100
+1 * 1100

fn=(584)
0x61cd6 139 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +3 248
+4 * 248
+3 * 248
cfn=(36) std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(552)
calls=248 0x5cf46 333 
* * 2728
+5 * 248
+4 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(1092) bool std::chrono::operator==<long, std::ratio<1l, 1l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x665c4 547 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +6 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(550)
calls=36 0x5e072 348 
* * 252
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(550)
calls=36 0x5e072 348 
* * 252
+5 * 36
+3 * 36
+3 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(36)
0x5cf64 348 3296
+1 * 3296
+3 * 3296
+4 +1 3296
+4 * 3296
+3 * 3296
+1 * 3296

fn=(546) std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x5e3c5 193 744
+1 * 744
+3 * 744
+4 * 744
+4 +9 744
+4 * 744
+3 * 744
cfn=(548)
calls=744 +7 -38 
* * 30504
+5 +1 744
+1 * 744

fn=(564)
0x61ee8 626 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+4 * 248
+3 * 248
+3 +1 248
+1 * 248
+1 * 248

fn=(580) std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x8cd6a 465 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +6 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(556) std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
calls=248 0x5e43e 340 
* * 20088
+5 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(552)
calls=248 0x5cf46 333 
* * 2728
+5 * 248
+4 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+4 * 248
+1 * 248
+1 * 248

fn=(30) bool std::chrono::operator< <std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
0x8d7f3 770 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+3 * 248
cfn=(32)
calls=248 0x5cf76 639 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(32)
calls=248 0x5cf76 639 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(34) bool std::chrono::operator< <long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=248 0x87f3c 559 
* * 11160
+5 * 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(552)
0x5cf46 333 1488
+1 * 1488
+3 * 1488
+4 * 1488
+4 +1 1488
+4 * 1488
+3 * 1488
+4 * 1488
+3 * 1488
+1 * 1488
+1 * 1488

fn=(570) std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
0x5dff5 151 320
+1 * 320
+3 * 320
+4 * 320
+4 * 320
+9 * 320
+4 * 320
+2 +4 320
+4 * 320
+3 * 320
cfn=(36)
calls=320 0x5cf64 348 
* * 2240
+5 * 320
+3 * 320
+10 * 320
+3 * 320
+3 * 320
+4 * 320
+3 * 320
+4 * 320
+3 * 320
+3 * 320
+4 * 320
+4 * 320
+4 * 320
+3 * 320
+3 * 320
cfn=(572) std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)
calls=320 0x5d000 333 
* * 3520
+5 * 320
+4 +1 320
+4 * 320
+9 * 320
jcnd=320/320 +7 * 
* * 
+7 * 320
+1 * 320

fn=(572)
0x5d000 333 320
+1 * 320
+3 * 320
+4 * 320
+4 +1 320
+4 * 320
+3 * 320
+4 * 320
+3 * 320
+1 * 320
+1 * 320

fn=(578) std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1l> > >::time_since_epoch() const
0x894ce 639 496
+1 * 496
+3 * 496
+4 +1 496
+4 * 496
+3 * 496
+1 * 496

fn=(1090) bool std::chrono::operator!=<long, std::ratio<1l, 1l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x61f05 571 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 +2 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(1092)
calls=36 0x665c4 -26 
* * 1620
+5 * 36
+3 * 36
+1 * 36

fn=(562)
0x8acec 452 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +6 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(552)
calls=248 0x5cf46 333 
* * 2728
+5 * 248
+4 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+4 * 248
+1 * 248
+1 * 248

fn=(554) bool std::chrono::operator< <long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1l> > const&)
0x898a3 559 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +6 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(556)
calls=248 0x5e43e 340 
* * 20088
+5 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+3 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+4 * 248
+1 * 248
+1 * 248

fn=(556)
0x5e43e 340 496
+1 * 496
+3 * 496
+4 * 496
+4 * 496
+4 * 496
+9 * 496
+4 * 496
+2 +1 496
+4 * 496
+3 * 496
cfn=(546)
calls=496 0x5e3c5 193 
* * 24800
+5 * 496
+4 * 496
+4 * 496
+3 * 496
cfn=(36)
calls=496 0x5cf64 +7 
* * 3472
+5 * 496
+3 * 496
+4 * 496
+3 * 496
+1 * 496
+4 * 496
+9 * 496
jcnd=496/496 +7 * 
* * 
+7 * 496
+1 * 496

fn=(576) std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1l> > > const&)
0x8cd01 752 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+3 * 248
cfn=(578)
calls=248 0x894ce 639 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(32)
calls=248 0x5cf76 639 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(580)
calls=248 +28 465 
* * 36208
+5 * 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(566) std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1l> > > >::type std::chrono::time_point_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
0x8cc99 674 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +3 248
+4 * 248
+3 * 248
cfn=(32)
calls=248 0x5cf76 -38 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(568) std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=248 0x5cf87 193 
* * 14384
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(574)
calls=248 0x87fae -51 
* * 2728
+5 * 248
+4 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fn=(568)
0x5cf87 193 320
+1 * 320
+3 * 320
+4 * 320
+4 +9 320
+4 * 320
+3 * 320
cfn=(570)
calls=320 0x5dff5 -51 
* * 15680
+5 +1 320
+1 * 320

fn=(1096) std::chrono::_V2::system_clock::to_time_t(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
0x5cfa1 836 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +3 36
+4 * 36
+3 * 36
cfn=(32)
calls=36 -77 639 
* * 252
+5 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(568)
calls=36 -76 193 
* * 2088
+5 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(550)
calls=36 0x5e072 348 
* * 252
+5 * 36
+1 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(34)
0x87f3c 559 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +6 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+4 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 * 248
+3 * 248
+3 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+4 * 248
+1 * 248
+1 * 248

fl=(64) /usr/include/c++/8.2.1/bits/stl_algobase.h
fn=(972) char* std::__niter_base<char*>(char*)
0x2674e 277 198
+1 * 198
+3 * 198
+4 +1 198
+4 * 198
+1 * 198

fn=(1374) Cell** std::copy<__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**>(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**)
0x5a0a5 446 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +9 18
+4 * 18
+3 * 18
cfi=(65) /usr/include/c++/8.2.1/bits/cpp_type_traits.h
cfn=(1376) __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > > >(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >)
calls=18 0x5a29f -36 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
cfi=(65)
cfn=(1376)
calls=18 0x5a29f -36 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
cfi=(65)
cfn=(1378) Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**>(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**)
calls=18 0x5a2ad -35 
* * 1473372
+5 +2 18
+4 * 18
+1 * 18
+1 * 18

fn=(1380) Cell** std::__niter_base<Cell**>(Cell**)
0x5a4c1 277 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+1 * 18

fn=(966) char* std::copy<char*, char*>(char*, char*, char*)
0x3aeb0 446 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +9 36
+4 * 36
+3 * 36
cfi=(65)
cfn=(968) char* std::__miter_base<char*>(char*)
calls=36 0x3c184 -36 
* * 216
+5 * 36
+3 * 36
+4 * 36
+3 * 36
cfi=(65)
cfn=(968)
calls=36 0x3c184 -36 
* * 216
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
cfi=(65)
cfn=(970) char* std::__copy_move_a2<false, char*, char*>(char*, char*, char*)
calls=36 0x3c192 -35 
* * 3492
+5 +2 36
+4 * 36
+1 * 36
+1 * 36

fn=(1390) Cell** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Cell*>(Cell* const*, Cell* const*, Cell**)
0x5a644 357 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +9 18
+4 * 18
+4 * 18
+4 * 18
+4 +1 18
+5 * 18
+2 +1 18
+4 * 18
+8 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cob=(5)
cfi=(4)
cfn=(980)
calls=18 0x1208f8 0 
* * 1471464
+5 +1 18
+4 * 18
+8 * 18
+4 * 18
+3 +1 18
+1 * 18

fn=(1388) Cell** std::__copy_move_a<false, Cell* const*, Cell**>(Cell* const*, Cell* const*, Cell**)
0x5a4cf 375 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +5 18
+4 +6 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1390)
calls=18 0x5a644 -29 
* * 1471914
+5 +1 18
+1 * 18

fn=(976) char* std::__copy_move_a<false, char*, char*>(char*, char*, char*)
0x3d0df 375 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +5 36
+4 +6 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(978) char* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<char>(char const*, char const*, char*)
calls=36 0x28c7d -29 
* * 1296
+5 +1 36
+1 * 36

fn=(978)
0x28c7d 357 126
+1 * 126
+3 * 126
+4 * 126
+4 * 126
+4 * 126
+4 +9 126
+4 * 126
+4 * 126
+4 +1 126
+5 * 126
+2 +1 126
+4 * 126
+4 * 126
+4 * 126
+3 * 126
+3 * 126
cob=(5)
cfi=(4)
cfn=(980)
calls=126 0x1208f8 0 
* * 1872
+5 +1 126
+4 * 126
+4 * 126
+3 +1 126
+1 * 126

fn=(1038) char const* std::__niter_base<char const*>(char const*)
0x26740 277 180
+1 * 180
+3 * 180
+4 +1 180
+4 * 180
+1 * 180

fn=(1040) char* std::__copy_move_a<false, char const*, char*>(char const*, char const*, char*)
0x2675c 375 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 * 90
+4 +5 90
+4 +6 90
+4 * 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90
cfn=(978)
calls=90 0x28c7d -29 
* * 3348
+5 +1 90
+1 * 90

fn=(1030) char* std::copy<char const*, char*>(char const*, char const*, char*)
0x20ddd 446 90
+1 * 90
+3 * 90
+1 * 90
+4 * 90
+4 * 90
+4 * 90
+4 +9 90
+4 * 90
+3 * 90
cfi=(65)
cfn=(1032) char const* std::__miter_base<char const*>(char const*)
calls=90 0x23f1d -36 
* * 540
+5 * 90
+3 * 90
+4 * 90
+3 * 90
cfi=(65)
cfn=(1032)
calls=90 0x23f1d -36 
* * 540
+5 * 90
+3 * 90
+4 * 90
+3 * 90
+3 * 90
+3 * 90
cfi=(65)
cfn=(1034) char* std::__copy_move_a2<false, char const*, char*>(char const*, char const*, char*)
calls=90 0x23f2b -35 
* * 8838
+5 +2 90
+4 * 90
+1 * 90
+1 * 90

fl=(27)
fn=(1208)
0x8f962 34 18
+1 * 18
+3 * 18
+1 * 18
+7 * 18
+7 * 18
+7 * 18
+9 * 18
+4 * 18
+2 +2 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56) /build/gcc/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/bits/allocator.h
cfn=(630) std::allocator<char>::allocator()
calls=18 0xb2d90 +95 
* * 36
* * 18
+5 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(57)
cfn=(632) fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >::basic_memory_buffer(std::allocator<char> const&)
calls=18 0x1ea6e 525 
* * 1206
+5 * 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56)
cfn=(644) std::allocator<char>::~allocator()
calls=18 0xb2db0 139 
* * 36
* * 18
+5 +1 18
+7 * 18
+4 * 18
+3 * 18
cfi=(59) /usr/include/c++/8.2.1/bits/unique_ptr.h
cfn=(1074) std::unique_ptr<spdlog::formatter, std::default_delete<spdlog::formatter> >::operator->() const
calls=18 0x6503a 334 
* * 1098
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+7 * 18
+7 * 18
+3 * 18
cfi=(71)
cfn=(1088) spdlog::pattern_formatter::format(spdlog::details::log_msg const&, fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >&)
calls=18 0x5ede4 562 
* * 34362
+2 +1 18
+7 * 18
+4 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(28) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/file_helper.h
cfn=(1210) spdlog::details::file_helper::write(fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> > const&)
calls=18 0x892ba +45 
* * 3420
+5 -2 18
+7 * 18
+3 * 18
cfi=(57)
cfn=(982) fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >::~basic_memory_buffer()
calls=18 0x1eada 529 
* * 954
+5 +3 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +38 * 
* * 
+38 * 18
+7 * 18
+1 * 18
+1 * 18

fn=(176)
0x8fa5c 41 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+4 * 248
+3 * 248
cfi=(28)
cfn=(178) spdlog::details::file_helper::flush()
calls=248 0x89262 +26 
* * 23572
+5 +1 248
+1 * 248
+1 * 248

fl=(59)
fn=(1134) std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >::operator->() const
0x624e8 334 36
+1 * 36
+3 * 36
+4 * 36
+4 +3 36
+4 * 36
+3 * 36
cfn=(1136) std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >::get() const
calls=36 0x669b8 +5 
* * 1872
+5 +1 36
+1 * 36

fn=(820) std::unique_ptr<fmt::v5::locale_provider, std::default_delete<fmt::v5::locale_provider> >::unique_ptr<std::default_delete<fmt::v5::locale_provider>, void>()
0x20d2c 191 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+7 * 36
+4 * 36
+3 * 36
cfn=(822) std::__uniq_ptr_impl<fmt::v5::locale_provider, std::default_delete<fmt::v5::locale_provider> >::__uniq_ptr_impl()
calls=36 -58 -50 
* * 2052
+5 +1 36
+1 * 36
+1 * 36

fn=(1004) std::unique_ptr<fmt::v5::locale_provider, std::default_delete<fmt::v5::locale_provider> >::~unique_ptr()
0x1e900 270 36
+1 * 36
+3 * 36
+4 * 36
+4 +2 36
+4 * 36
+3 * 36
cfn=(1006) std::__uniq_ptr_impl<fmt::v5::locale_provider, std::default_delete<fmt::v5::locale_provider> >::_M_ptr()
calls=36 0x20d52 149 
* * 1512
+5 * 36
+4 +1 36
+4 * 36
+3 * 36
+3 * 36
jcnd=36/36 +35 +2 
* * 
+35 +2 36
+4 * 36
+7 +1 36
+1 * 36
+1 * 36

fn=(1078) std::__uniq_ptr_impl<spdlog::formatter, std::default_delete<spdlog::formatter> >::_M_ptr() const
0x6cd22 150 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(12)
cfn=(1080) std::tuple_element<0ul, std::tuple<spdlog::formatter*, std::default_delete<spdlog::formatter> > >::type const& std::get<0ul, spdlog::formatter*, std::default_delete<spdlog::formatter> >(std::tuple<spdlog::formatter*, std::default_delete<spdlog::formatter> > const&)
calls=36 0x6fb89 1320 
* * 1188
+5 * 36
+3 * 36
+1 * 36

fn=(822)
0x20d10 142 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(12)
cfn=(824) std::tuple<fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >::tuple<fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider>, true>()
calls=36 -47 919 
* * 1692
+5 * 36
+1 * 36
+1 * 36

fn=(1136)
0x669b8 342 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1138) std::__uniq_ptr_impl<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >::_M_ptr() const
calls=36 0x6abb0 150 
* * 1548
+5 * 36
+1 * 36

fn=(1074)
0x6503a 334 36
+1 * 36
+3 * 36
+4 * 36
+4 +3 36
+4 * 36
+3 * 36
cfn=(1076) std::unique_ptr<spdlog::formatter, std::default_delete<spdlog::formatter> >::get() const
calls=36 0x69c98 +5 
* * 1872
+5 +1 36
+1 * 36

fn=(1138)
0x6abb0 150 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(12)
cfn=(1140) std::tuple_element<0ul, std::tuple<spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> > >::type const& std::get<0ul, spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> >(std::tuple<spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> > const&)
calls=36 0x6dc2a 1320 
* * 1188
+5 * 36
+3 * 36
+1 * 36

fn=(1076)
0x69c98 342 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1078)
calls=36 0x6cd22 150 
* * 1548
+5 * 36
+1 * 36

fn=(1006)
0x20d52 149 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(12)
cfn=(1008) std::tuple_element<0ul, std::tuple<fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> > >::type& std::get<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >(std::tuple<fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >&)
calls=36 0x23e77 1314 
* * 1188
+5 * 36
+1 * 36

fl=(72)
fn=(1368)
0x59296 287 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1370) Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**>(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**)
calls=18 0x59a29 115 
* * 1474542
+5 * 18
+1 * 18

fn=(1160) char* std::__uninitialized_copy<true>::__uninit_copy<char const*, char*>(char const*, char const*, char*)
0x26a97 99 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+4 * 72
+4 +2 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
cfi=(64)
cfn=(1030)
calls=72 0x20ddd 446 
* * 9612
+5 * 72
+1 * 72

fn=(1158) char* std::uninitialized_copy<char const*, char*>(char const*, char const*, char*)
0x2411b 115 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+4 * 72
+4 +13 72
+4 +6 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
cfn=(1160)
calls=72 0x26a97 -35 
* * 10620
+5 +1 72
+1 * 72

fn=(1370)
0x59a29 115 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +13 18
+4 +6 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1372) Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**>(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >, Cell**)
calls=18 0x59e09 -35 
* * 1474272
+5 +1 18
+1 * 18

fn=(1372)
0x59e09 99 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(64)
cfn=(1374)
calls=18 0x5a0a5 446 
* * 1474020
+5 * 18
+1 * 18

fl=(12)
fn=(1084) std::_Tuple_impl<0ul, spdlog::formatter*, std::default_delete<spdlog::formatter> >::_M_head(std::_Tuple_impl<0ul, spdlog::formatter*, std::default_delete<spdlog::formatter> > const&)
0x74602 198 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(1086) std::_Head_base<0ul, spdlog::formatter*, false>::_M_head(std::_Head_base<0ul, spdlog::formatter*, false> const&)
calls=36 0x75805 -35 
* * 216
+5 * 36
+1 * 36

fn=(1250) std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&&)
0xabbcc 223 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +3 18
+4 * 18
+3 * 18
cfn=(1252) std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_tail(std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabb79 -25 
* * 108
+5 * 18
+3 * 18
cfi=(13)
cfn=(1254)
calls=18 -60 99 
* * 108
+5 * 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1256) std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&&)
calls=18 0xabb1a -4 
* * 3816
+5 * 18
+4 * 18
+3 * 18
cfn=(1294) std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabb87 -32 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1298)
calls=18 -84 74 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1300) std::_Head_base<2ul, std::_Placeholder<2>, true>::_Head_base<std::_Placeholder<2> >(std::_Placeholder<2>&&)
calls=18 0xac1f0 86 
* * 306
+5 * 18
+1 * 18
+1 * 18

fn=(1278) std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xaba23 195 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1280) std::_Head_base<4ul, std::_Placeholder<4>, true>::_M_head(std::_Head_base<4ul, std::_Placeholder<4>, true>&)
calls=541766 +7 -82 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1304) std::_Head_base<1ul, std::_Placeholder<1>, true>::_M_head(std::_Head_base<1ul, std::_Placeholder<1>, true>&)
0xabc53 113 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1498) std::tuple_element<4ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type& std::get<4ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xaca6b 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1500) VectorSpace::Vector<double> const& std::__get_helper<4ul, VectorSpace::Vector<double> const&>(std::_Tuple_impl<4ul, VectorSpace::Vector<double> const&>&)
calls=541748 +7 -12 
* * 13543700
+5 * 541748
+1 * 541748

fn=(1530) std::tuple_element<2ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type& std::get<2ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac92d 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1532) VectorSpace::Matrix<double> const& std::__get_helper<2ul, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::_Tuple_impl<2ul, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 +7 -12 
* * 14085448
+5 * 541748
+1 * 541748

fn=(1550) std::_Tuple_impl<1ul, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_M_head(std::_Tuple_impl<1ul, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac8c2 195 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfn=(1552) std::_Head_base<1ul, VectorSpace::Matrix<double> const&, false>::_M_head(std::_Head_base<1ul, VectorSpace::Matrix<double> const&, false>&)
calls=541748 +7 -35 
* * 3792236
+5 * 541748
+1 * 541748

fn=(1570)
0xac2d6 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1572) MomentSolver*& std::__get_helper<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac7bb -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(830) std::_Head_base<1ul, std::default_delete<fmt::v5::locale_provider>, true>::_Head_base()
0x28c3e 76 36
+1 * 36
+3 * 36
+4 +1 36
+1 * 36
+1 * 36

fn=(1008)
0x23e77 1314 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1010) fmt::v5::locale_provider*& std::__get_helper<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >(std::_Tuple_impl<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >&)
calls=36 0x266aa -12 
* * 864
+5 * 36
+1 * 36

fn=(1012) std::_Tuple_impl<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >::_M_head(std::_Tuple_impl<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >&)
0x28c49 195 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(1014) std::_Head_base<0ul, fmt::v5::locale_provider*, false>::_M_head(std::_Head_base<0ul, fmt::v5::locale_provider*, false>&)
calls=36 0x2b788 -35 
* * 216
+5 * 36
+1 * 36

fn=(1014)
0x2b788 160 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+1 * 36

fn=(1140)
0x6dc2a 1320 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1142) spdlog::details::flag_formatter* const& std::__get_helper<0ul, spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> >(std::_Tuple_impl<0ul, spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> > const&)
calls=36 0x70a2d -13 
* * 864
+5 * 36
+1 * 36

fn=(1236)
0xabcde 662 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1238) std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&&)
calls=18 0xac274 223 
* * 8118
+5 * 18
+1 * 18
+1 * 18

fn=(1238)
0xac274 223 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 +3 18
+4 * 18
+3 * 18
cfn=(1240) std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_tail(std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 -93 -25 
* * 108
+5 * 18
+3 * 18
cfi=(13)
cfn=(1242)
calls=18 -47 99 
* * 108
+5 * 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1244) std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&&)
calls=18 0xabc7e -4 
* * 6624
+5 * 18
+4 * 18
+4 * 18
+3 * 18
cfn=(1310) std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<0ul, MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xac23d -32 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1314)
calls=18 0xa9f80 74 
* * 108
+5 * 18
+3 * 18
+3 * 18
cfn=(1316) std::_Head_base<0ul, MomentSolver*, false>::_Head_base<MomentSolver*>(MomentSolver*&&)
calls=18 0xac052 -95 
* * 360
+5 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(1264) std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >::_M_tail(std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xaba15 201 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(1308) std::_Head_base<1ul, std::_Placeholder<1>, true>::_Head_base<std::_Placeholder<1> >(std::_Placeholder<1>&&)
0xac210 86 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1306)
calls=18 0xabc6f -13 
* * 108
+5 * 18
+1 * 18
+1 * 18

fn=(1310)
0xac23d 195 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1312) std::_Head_base<0ul, MomentSolver*, false>::_M_head(std::_Head_base<0ul, MomentSolver*, false>&)
calls=541766 +7 -35 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1468) std::_Tuple_impl<1ul, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_Tuple_impl(VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
0xab3a0 210 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
cfn=(1470) std::_Tuple_impl<2ul, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_Tuple_impl(VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 +31 -1 
* * 46048665
+5 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1482) std::_Head_base<1ul, VectorSpace::Matrix<double> const&, false>::_Head_base(VectorSpace::Matrix<double> const&)
calls=541749 0xab4ee -86 
* * 5417490
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1470)
0xab3ee 210 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1472) std::_Tuple_impl<3ul, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_Tuple_impl(VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 +32 -1 
* * 28712697
+5 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1480) std::_Head_base<2ul, VectorSpace::Matrix<double> const&, false>::_Head_base(VectorSpace::Matrix<double> const&)
calls=541749 0xab4d4 -86 
* * 5417490
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1478) std::_Head_base<3ul, VectorSpace::Vector<double> const&, false>::_Head_base(VectorSpace::Vector<double> const&)
0xab4ba 125 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+1 * 541749
+1 * 541749

fn=(1484) std::_Head_base<0ul, VectorSpace::Matrix<double>&, false>::_Head_base(VectorSpace::Matrix<double>&)
0xab508 125 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+1 * 541749
+1 * 541749

fn=(1490) std::_Placeholder<5>& std::__get_helper<5ul, std::_Placeholder<5>>(std::_Tuple_impl<5ul, std::_Placeholder<5>>&)
0xaca51 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1270) std::_Tuple_impl<5ul, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<5ul, std::_Placeholder<5> >&)
calls=541748 0xab9a6 351 
* * 8126220
+5 * 541748
+1 * 541748

fn=(1512)
0xaca2f 1326 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfn=(1514) std::tuple_element<3ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type& std::get<3ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 0xac9cc -15 
* * 18961180
+5 * 541748
+3 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 74 
* * 3250488
+5 +1 541748
+1 * 541748

fn=(70) std::_Tuple_impl<0ul, spdlog::details::registry*>::_M_head(std::_Tuple_impl<0ul, spdlog::details::registry*>&)
0x8d999 351 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(72) std::_Head_base<0ul, spdlog::details::registry*, false>::_M_head(std::_Head_base<0ul, spdlog::details::registry*, false>&)
calls=248 +7 160 
* * 1488
+5 * 248
+1 * 248

fn=(828) std::_Tuple_impl<1ul, std::default_delete<fmt::v5::locale_provider> >::_Tuple_impl()
0x26678 356 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(830)
calls=36 0x28c3e 76 
* * 216
+5 * 36
+1 * 36
+1 * 36

fn=(1010)
0x266aa 1303 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1012)
calls=36 0x28c49 195 
* * 540
+5 * 36
+1 * 36

fn=(1240)
0xac22f 201 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(1256)
0xabb1a 223 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +3 18
+4 * 18
+3 * 18
cfn=(1258) std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_tail(std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabac7 -25 
* * 108
+5 * 18
+3 * 18
cfi=(13)
cfn=(1260)
calls=18 -60 99 
* * 108
+5 * 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1262) std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&&)
calls=18 0xaba68 -4 
* * 2412
+5 * 18
+4 * 18
+3 * 18
cfn=(1286) std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabad5 -32 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1290)
calls=18 -84 74 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1292) std::_Head_base<3ul, std::_Placeholder<3>, true>::_Head_base<std::_Placeholder<3> >(std::_Placeholder<3>&&)
calls=18 0xac1d0 86 
* * 306
+5 * 18
+1 * 18
+1 * 18

fn=(1258)
0xabac7 201 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(1312)
0xac257 160 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1516) VectorSpace::Vector<double> const& std::__get_helper<3ul, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::_Tuple_impl<3ul, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac9e6 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1518) std::_Tuple_impl<3ul, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_M_head(std::_Tuple_impl<3ul, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 +7 195 
* * 9209716
+5 * 541748
+1 * 541748

fn=(1540) std::_Placeholder<2>& std::__get_helper<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::_Tuple_impl<2ul, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xac874 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1294)
calls=541748 0xabb87 195 
* * 8126220
+5 * 541748
+1 * 541748

fn=(1546) std::tuple_element<1ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type& std::get<1ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac88e 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1548) VectorSpace::Matrix<double> const& std::__get_helper<1ul, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::_Tuple_impl<1ul, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 +7 -12 
* * 14085448
+5 * 541748
+1 * 541748

fn=(1562) std::tuple_element<0ul, std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&> >::type& std::get<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac7ef 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1564) VectorSpace::Matrix<double>& std::__get_helper<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::_Tuple_impl<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 +7 -12 
* * 14085448
+5 * 541748
+1 * 541748

fn=(62)
0x8c29e 1475 248
+1 * 248
+3 +1 248
+1 * 248

fn=(1080)
0x6fb89 1320 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1082) spdlog::formatter* const& std::__get_helper<0ul, spdlog::formatter*, std::default_delete<spdlog::formatter> >(std::_Tuple_impl<0ul, spdlog::formatter*, std::default_delete<spdlog::formatter> > const&)
calls=36 0x7236d -13 
* * 864
+5 * 36
+1 * 36

fn=(1244)
0xabc7e 223 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +3 18
+4 * 18
+3 * 18
cfn=(1246) std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_tail(std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabc2b -25 
* * 108
+5 * 18
+3 * 18
cfi=(13)
cfn=(1248)
calls=18 -60 99 
* * 108
+5 * 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1250)
calls=18 0xabbcc -4 
* * 5220
+5 * 18
+4 * 18
+3 * 18
cfn=(1302) std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >::_M_head(std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=18 0xabc39 -32 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1306)
calls=18 -84 74 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1308)
calls=18 0xac210 86 
* * 306
+5 * 18
+1 * 18
+1 * 18

fn=(1508) std::_Placeholder<4>& std::__get_helper<4ul, std::_Placeholder<4>, std::_Placeholder<5> >(std::_Tuple_impl<4ul, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xac9b2 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1278)
calls=541748 0xaba23 195 
* * 8126220
+5 * 541748
+1 * 541748

fn=(1524) std::_Placeholder<3>& std::__get_helper<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::_Tuple_impl<3ul, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
0xac913 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1286)
calls=541748 0xabad5 195 
* * 8126220
+5 * 541748
+1 * 541748

fn=(1554)
0xac312 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1556) std::_Placeholder<1>& std::__get_helper<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >(std::_Tuple_impl<1ul, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5> >&)
calls=541748 0xac7d5 -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(1566) std::_Tuple_impl<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_M_head(std::_Tuple_impl<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
0xac823 195 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfn=(1568) std::_Head_base<0ul, VectorSpace::Matrix<double>&, false>::_M_head(std::_Head_base<0ul, VectorSpace::Matrix<double>&, false>&)
calls=541748 +7 -35 
* * 3792236
+5 * 541748
+1 * 541748

fn=(66)
0x8d9fe 1314 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfn=(68) spdlog::details::registry*& std::__get_helper<0ul, spdlog::details::registry*>(std::_Tuple_impl<0ul, spdlog::details::registry*>&)
calls=248 0x8e180 -12 
* * 5952
+5 * 248
+1 * 248

fn=(826) std::_Tuple_impl<0ul, fmt::v5::locale_provider*, std::default_delete<fmt::v5::locale_provider> >::_Tuple_impl()
0x23e50 206 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(828)
calls=36 0x26678 356 
* * 576
+5 * 36
+4 * 36
+3 * 36
cfn=(832) std::_Head_base<0ul, fmt::v5::locale_provider*, false>::_Head_base()
calls=36 0x26694 -85 
* * 288
+5 * 36
+1 * 36
+1 * 36

fn=(832)
0x26694 122 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+7 * 36
+1 * 36
+1 * 36

fn=(1262)
0xaba68 223 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +3 18
+4 * 18
+3 * 18
cfn=(1264)
calls=18 0xaba15 -25 
* * 108
+5 * 18
+3 * 18
cfi=(13)
cfn=(1266)
calls=18 -60 99 
* * 108
+5 * 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1268) std::_Tuple_impl<5ul, std::_Placeholder<5> >::_Tuple_impl(std::_Tuple_impl<5ul, std::_Placeholder<5> >&&)
calls=18 0xab9dc 371 
* * 1008
+5 * 18
+4 * 18
+3 * 18
cfn=(1278)
calls=18 0xaba23 -32 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1282)
calls=18 -84 74 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1284) std::_Head_base<4ul, std::_Placeholder<4>, true>::_Head_base<std::_Placeholder<4> >(std::_Placeholder<4>&&)
calls=18 0xac1b0 86 
* * 306
+5 * 18
+1 * 18
+1 * 18

fn=(1270)
0xab9a6 351 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1272) std::_Head_base<5ul, std::_Placeholder<5>, true>::_M_head(std::_Head_base<5ul, std::_Placeholder<5>, true>&)
calls=541766 +7 113 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1288) std::_Head_base<3ul, std::_Placeholder<3>, true>::_M_head(std::_Head_base<3ul, std::_Placeholder<3>, true>&)
0xabaef 113 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1462)
0xab260 1475 541749
+1 * 541749
+3 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+1 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1452)
calls=541749 0x81664 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfn=(1464) std::tuple<VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::tuple<void, true>(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 +23 608 
* * 95347824
+5 * 541748
+4 * 541748
+4 * 541748
+1 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+1 * 541748

fn=(1480)
0xab4d4 125 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+1 * 541749
+1 * 541749

fn=(1496)
0xacaca 1326 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfn=(1498)
calls=541748 0xaca6b -15 
* * 18419432
+5 * 541748
+3 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 74 
* * 3250488
+5 +1 541748
+1 * 541748

fn=(1518)
0xaca00 195 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfn=(1520) std::_Head_base<3ul, VectorSpace::Vector<double> const&, false>::_M_head(std::_Head_base<3ul, VectorSpace::Vector<double> const&, false>&)
calls=541748 +7 -35 
* * 3792236
+5 * 541748
+1 * 541748

fn=(1528)
0xac990 1326 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfn=(1530)
calls=541748 0xac92d -15 
* * 18961180
+5 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb 74 
* * 3250488
+5 +1 541748
+1 * 541748

fn=(1552)
0xac8e0 160 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+1 * 541748

fn=(68)
0x8e180 1303 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfn=(70)
calls=248 0x8d999 351 
* * 3720
+5 * 248
+1 * 248

fn=(72)
0x8d9b3 160 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+1 * 248

fn=(1082)
0x7236d 1308 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1084)
calls=36 0x74602 198 
* * 540
+5 * 36
+1 * 36

fn=(1086)
0x75805 163 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+1 * 36

fn=(1142)
0x70a2d 1308 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1144) std::_Tuple_impl<0ul, spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> >::_M_head(std::_Tuple_impl<0ul, spdlog::details::flag_formatter*, std::default_delete<spdlog::details::flag_formatter> > const&)
calls=36 0x72e47 198 
* * 540
+5 * 36
+1 * 36

fn=(1246)
0xabc2b 201 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(1292)
0xac1d0 86 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1290)
calls=18 0xabb0b -13 
* * 108
+5 * 18
+1 * 18
+1 * 18

fn=(1296) std::_Head_base<2ul, std::_Placeholder<2>, true>::_M_head(std::_Head_base<2ul, std::_Placeholder<2>, true>&)
0xabba1 113 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1316)
0xac052 132 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1314)
calls=18 0xa9f80 -59 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+1 * 18
+1 * 18

fn=(1472)
0xab438 210 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1474) std::_Tuple_impl<4ul, VectorSpace::Vector<double> const&>::_Tuple_impl(VectorSpace::Vector<double> const&)
calls=541749 +32 360 
* * 12460227
+5 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1478)
calls=541749 +73 -86 
* * 5417490
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1488)
0xac430 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1490)
calls=541748 0xaca51 -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(1500)
0xaca85 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1502) std::_Tuple_impl<4ul, VectorSpace::Vector<double> const&>::_M_head(std::_Tuple_impl<4ul, VectorSpace::Vector<double> const&>&)
calls=541748 +7 351 
* * 8667968
+5 * 541748
+1 * 541748

fn=(1532)
0xac947 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1534) std::_Tuple_impl<2ul, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_M_head(std::_Tuple_impl<2ul, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>&)
calls=541748 +7 195 
* * 9209716
+5 * 541748
+1 * 541748

fn=(1534)
0xac961 195 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfn=(1536) std::_Head_base<2ul, VectorSpace::Matrix<double> const&, false>::_M_head(std::_Head_base<2ul, VectorSpace::Matrix<double> const&, false>&)
calls=541748 +7 -35 
* * 3792236
+5 * 541748
+1 * 541748

fn=(1568)
0xac841 160 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+1 * 541748

fn=(1572)
0xac7bb 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1310)
calls=541748 0xac23d 195 
* * 8126220
+5 * 541748
+1 * 541748

fn=(1146) std::_Head_base<0ul, spdlog::details::flag_formatter*, false>::_M_head(std::_Head_base<0ul, spdlog::details::flag_formatter*, false> const&)
0x74d83 163 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+1 * 36

fn=(1268)
0xab9dc 371 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+3 * 18
cfn=(1270)
calls=18 -77 -22 
* * 270
+5 * 18
+3 * 18
cfi=(13)
cfn=(1274)
calls=18 -45 74 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1276) std::_Head_base<5ul, std::_Placeholder<5>, true>::_Head_base<std::_Placeholder<5> >(std::_Placeholder<5>&&)
calls=18 0xac190 86 
* * 306
+5 * 18
+1 * 18
+1 * 18

fn=(1280)
0xaba3d 113 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1294)
0xabb87 195 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1296)
calls=541766 +7 -82 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1300)
0xac1f0 86 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1298)
calls=18 0xabbbd -13 
* * 108
+5 * 18
+1 * 18
+1 * 18

fn=(1502)
0xaca9f 351 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfn=(1504) std::_Head_base<4ul, VectorSpace::Vector<double> const&, false>::_M_head(std::_Head_base<4ul, VectorSpace::Vector<double> const&, false>&)
calls=541748 +7 160 
* * 3792236
+5 * 541748
+1 * 541748

fn=(1514)
0xac9cc 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1516)
calls=541748 +7 -12 
* * 14085448
+5 * 541748
+1 * 541748

fn=(1538)
0xac364 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1540)
calls=541748 0xac874 -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(1544)
0xac8f1 1326 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfn=(1546)
calls=541748 0xac88e -15 
* * 18961180
+5 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb 74 
* * 3250488
+5 +1 541748
+1 * 541748

fn=(1560)
0xac852 1326 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfn=(1562)
calls=541748 0xac7ef -15 
* * 18961180
+5 * 541748
+3 * 541748
cfi=(13)
cfn=(1452)
calls=541748 0x81664 74 
* * 3250488
+5 +1 541748
+1 * 541748

fn=(1144)
0x72e47 198 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(1146)
calls=36 0x74d83 -35 
* * 216
+5 * 36
+1 * 36

fn=(1272)
0xab9c0 113 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+1 * 541766

fn=(1284)
0xac1b0 86 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1282)
calls=18 0xaba59 -13 
* * 108
+5 * 18
+1 * 18
+1 * 18

fn=(1302)
0xabc39 195 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1304)
calls=541766 +7 -82 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1474)
0xab47a 360 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1476) std::_Head_base<4ul, VectorSpace::Vector<double> const&, false>::_Head_base(VectorSpace::Vector<double> const&)
calls=541749 +8 125 
* * 5417490
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1476)
0xab4a0 125 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+1 * 541749
+1 * 541749

fn=(1482)
0xab4ee 125 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+3 * 541749
+1 * 541749
+1 * 541749

fn=(1506)
0xac3ec 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1508)
calls=541748 0xac9b2 -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(1522)
0xac3a8 1314 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1524)
calls=541748 0xac913 -12 
* * 13001952
+5 * 541748
+1 * 541748

fn=(1536)
0xac97f 160 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+1 * 541748

fn=(1548)
0xac8a8 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1550)
calls=541748 +7 195 
* * 9209716
+5 * 541748
+1 * 541748

fn=(1564)
0xac809 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1566)
calls=541748 +7 195 
* * 9209716
+5 * 541748
+1 * 541748

fn=(824)
0x20cf4 919 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(826)
calls=36 0x23e50 206 
* * 1332
+5 * 36
+1 * 36
+1 * 36

fn=(1252)
0xabb79 201 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(1276)
0xac190 86 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1274)
calls=18 0xab9ce -13 
* * 108
+5 * 18
+1 * 18
+1 * 18

fn=(1286)
0xabad5 195 541766
+1 * 541766
+3 * 541766
+4 * 541766
+4 * 541766
+4 * 541766
+3 * 541766
cfn=(1288)
calls=541766 +7 -82 
* * 3250596
+5 * 541766
+1 * 541766

fn=(1464)
0xab2fc 608 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfn=(1466) std::_Tuple_impl<0ul, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>::_Tuple_impl(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 +9 210 
* * 83429346
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1466)
0xab346 210 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1468)
calls=541749 +32 -1 
* * 63926382
+5 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
cfn=(1484)
calls=541749 0xab508 -86 
* * 5417490
+5 * 541749
+1 * 541749
+1 * 541749

fn=(1504)
0xacab9 160 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+1 * 541748

fn=(1520)
0xaca1e 160 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+1 * 541748

fn=(1556)
0xac7d5 1303 541748
+1 * 541748
+3 * 541748
+4 * 541748
+4 +1 541748
+4 * 541748
+3 * 541748
cfn=(1302)
calls=541748 0xabc39 195 
* * 8126220
+5 * 541748
+1 * 541748

fl=(37)
fn=(246)
0x4b54e 82 46454182
+1 * 46454182
+3 * 46454182
+4 * 46454182
+4 * 46454182
+4 * 46454182
+3 * 46454182
+3 * 46454182
jcnd=51/46454182 +17 * 
* * 
+2 * 46454131
+4 * 46454131
+3 * 46454131
+3 * 46454131
cob=(10)
cfi=(35) /build/gcc/src/gcc/libstdc++-v3/libsupc++/del_opv.cc
cfn=(238) operator delete[](void*)
calls=46454131 0x8e640 -48 
* * 4113575416
* * 46454131
+5 * 46454181
+1 * 46454181
+1 * 46454181

fn=(264)
0x20560 203 109388086
+1 * 109388086
+3 * 109388086
+4 * 109388086
+4 * 109388086
+3 * 109388086
+1 * 109388086

fn=(282)
0x205d6 64 573003
+1 * 573003
+3 * 573003
+4 * 573003
+4 * 573003
+3 * 573003
+3 * 573003
+5 * 573003
+4 * 573003
+3 * 573003
+3 * 573003
+4 * 573003
+3 * 573003
+3 +1 573003
+4 * 573003
+3 * 573003
+4 * 573003
+3 * 573003
+3 * 573003
+2 * 573003
+10 * 573003
+3 * 573003
+2 * 573003
+4 * 573003
+3 * 573003
cob=(10)
cfi=(41) /build/gcc/src/gcc/libstdc++-v3/libsupc++/new_opv.cc
cfn=(270) operator new[](unsigned long)
calls=573003 0x906a0 -34 
* * 67951645
* * 573003
+5 * 573003
+3 * 573003
+4 * 573003
+3 +1 573003
+7 * 573003
jump=573003 +7 * 
* * 
+7 * 8713791
+4 * 8713791
+3 * 8713791
+3 * 8713791
jcnd=573003/8713791 +76 +5 
* * 
+2 +1 8140788
+7 * 8140788
+4 * 8140788
+3 * 8140788
+3 * 8140788
-10 * 89244432
+4 * 89244432
+3 * 89244432
+3 * 89244432
jcnd=8140788/89244432 +51 -1 
* * 
+2 +1 89244432
+4 * 89244432
+3 * 89244432
+4 * 89244432
+3 * 89244432
+4 * 89244432
+2 * 89244432
+3 * 89244432
+2 * 89244432
+2 * 89244432
+4 * 89244432
+3 * 89244432
+5 * 89244432
+4 -1 89244432
+4 * 89244432
jump=89244432 -59 * 
* * 
+2 -1 8140788
+4 * 8140788
jump=8140788 -84 * 
* * 
+2 +5 573003
+1 * 573003
+1 * 573003

fn=(1412) VectorSpace::Matrix<double>::Matrix()
0x656da 51 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+7 * 72
+4 * 72
+7 * 72
+4 * 72
+7 * 72
+1 * 72
+1 * 72

fn=(1608) VectorSpace::Matrix<double>::operator-(VectorSpace::Matrix<double> const&) const
0x8156e 113 180580
+1 * 180580
+3 * 180580
+4 * 180580
+4 * 180580
+4 * 180580
+4 * 180580
+9 * 180580
+4 * 180580
+2 +1 180580
+4 * 180580
+3 * 180580
+4 * 180580
+3 * 180580
+4 * 180580
+5 * 180580
+3 * 180580
cfn=(266)
calls=180580 0x4b47a -61 
* * 17696840
+5 +1 180580
+7 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
-10 * 902900
+4 * 902900
+3 * 902900
+3 * 902900
jcnd=180580/902900 0x81649 +5 
* * 
+6 +1 902900
+7 * 902900
+4 * 902900
+3 * 902900
+3 * 902900
-10 * 3611600
+4 * 3611600
+3 * 3611600
+3 * 3611600
jcnd=902900/3611600 0x81640 -1 
* * 
+2 +1 3611600
+3 * 3611600
+3 * 3611600
+4 * 3611600
+2 * 3611600
+3 * 3611600
cfn=(278)
calls=3611600 0x20572 -17 
* * 65008800
+5 * 3611600
+4 * 3611600
+5 * 3611600
+3 * 3611600
+3 * 3611600
+4 * 3611600
+2 * 3611600
+3 * 3611600
cfn=(278)
calls=3611600 0x20572 -17 
* * 65008800
+5 * 3611600
+4 * 3611600
+5 * 3611600
+4 * 3611600
+5 * 3611600
+3 * 3611600
+3 * 3611600
+4 * 3611600
+2 * 3611600
+3 * 3611600
cfn=(252)
calls=3611600 0x205a4 -19 
* * 65008800
+5 * 3611600
+5 * 3611600
+4 -1 3611600
+4 * 3611600
jump=3611600 0x815ce * 
* * 
+2 -1 902900
+4 * 902900
jump=902900 0x815b7 * 
* * 
+5 +5 180580
+1 +1 180580
+4 * 180580
+4 * 180580
+9 * 180580
jcnd=180580/180580 +7 * 
* * 
+7 * 180580
+1 * 180580

fn=(252)
0x205a4 98 1854657011
+1 * 1854657011
+3 * 1854657011
+4 * 1854657011
+3 * 1854657011
+3 * 1854657011
+4 * 1854657011
+3 * 1854657011
+4 * 1854657011
+3 * 1854657011
+4 * 1854657011
+2 * 1854657011
+3 * 1854657011
+2 * 1854657011
+2 * 1854657011
+4 * 1854657011
+3 * 1854657011
+1 * 1854657011

fn=(362)
0x6606e 175 27032495
+1 * 27032495
+3 * 27032495
+4 * 27032495
+4 * 27032495
+4 * 27032495
+4 * 27032495
+9 * 27032495
+4 * 27032495
+2 +1 27032495
+4 * 27032495
+3 * 27032495
+4 * 27032495
+5 * 27032495
+2 * 27032495
+3 * 27032495
cfi=(31)
cfn=(364) VectorSpace::Vector<double>::Vector(unsigned int, bool)
calls=27032495 0x4b7a4 71 
* * 4081906745
+5 +1 27032495
+7 * 27032495
+4 * 27032495
+3 * 27032495
+3 * 27032495
-10 * 70152733
+4 * 70152733
+3 * 70152733
+3 * 70152733
jcnd=27032495/70152733 0x6613a +5 
* * 
+2 +1 70152733
+7 * 70152733
+4 * 70152733
+3 * 70152733
+3 * 70152733
-10 * 280610931
+4 * 280610931
+3 * 280610931
+3 * 280610931
jcnd=70152733/280610931 +98 -1 
* * 
+2 +1 280610931
+3 * 280610931
+3 * 280610931
+4 * 280610931
+2 * 280610931
+3 * 280610931
cfn=(278)
calls=280610931 0x20572 -79 
* * 5050996758
+5 * 280610931
+4 * 280610931
+5 * 280610931
+3 * 280610931
+4 * 280610931
+2 * 280610931
+3 * 280610931
cfi=(31)
cfn=(366)
calls=280610931 0x20524 -55 
* * 3086720241
+5 * 280610931
+4 * 280610931
+5 * 280610931
+5 * 280610931
+3 * 280610931
+4 * 280610931
+2 * 280610931
+3 * 280610931
cfi=(31)
cfn=(196)
calls=280610931 0x20542 -57 
* * 3086720241
+5 * 280610931
+4 * 280610931
+5 * 280610931
+4 -1 280610931
+4 * 280610931
jump=280610931 0x660c5 * 
* * 
+2 -1 70152733
+4 * 70152733
jump=70152733 0x660b2 * 
* * 
+5 +5 27032495
+1 +1 27032495
+4 * 27032495
+4 * 27032495
+9 * 27032495
jcnd=27032495/27032495 +7 * 
* * 
+7 * 27032495
+1 * 27032495

fn=(266)
0x4b47a 53 45881120
+1 * 45881120
+3 * 45881120
+4 * 45881120
+4 * 45881120
+3 * 45881120
+3 * 45881120
+2 * 45881120
+3 * 45881120
+4 * 45881120
+3 * 45881120
+3 * 45881120
+4 * 45881120
+3 * 45881120
+3 +1 45881120
+4 * 45881120
+3 * 45881120
+4 * 45881120
+3 * 45881120
+3 * 45881120
+2 * 45881120
+10 * 45881120
+3 * 45881120
+2 * 45881120
+4 * 45881120
+3 * 45881120
cob=(10)
cfi=(41)
cfn=(270)
calls=45881120 0x906a0 -23 
* * 2798748320
* * 45881120
+5 * 45881120
+3 * 45881120
+4 * 45881120
+3 +1 45881120
+4 * 45881120
+3 * 45881120
+2 * 45881120
jcnd=22749954/45881120 0x4b54b +7 
* * 
+2 * 23131166
jump=23131166 +7 +1 
* * 
+7 +1 23131166
+7 * 23131166
+4 * 23131166
+3 * 23131166
+3 * 23131166
-10 * 61429570
+4 * 61429570
+3 * 61429570
+3 * 61429570
jcnd=23131166/61429570 +75 +6 
* * 
+2 +1 61429570
+7 * 61429570
+4 * 61429570
+3 * 61429570
+3 * 61429570
-10 * 245718280
+4 * 245718280
+3 * 245718280
+3 * 245718280
jcnd=61429570/245718280 +50 -1 
* * 
+2 +1 245718280
+4 * 245718280
+3 * 245718280
+4 * 245718280
+3 * 245718280
+4 * 245718280
+2 * 245718280
+3 * 245718280
+2 * 245718280
+2 * 245718280
+4 * 245718280
+3 * 245718280
+4 * 245718280
+4 -1 245718280
+4 * 245718280
jump=245718280 -58 * 
* * 
+2 -1 61429570
+4 * 61429570
jump=61429570 -83 * 
* * 
+2 +6 45881120
+1 * 45881120
+1 * 45881120

fn=(1606) VectorSpace::Matrix<double>::operator+=(VectorSpace::Matrix<double> const&)
0xaa1dc 185 541745
+1 * 541745
+3 * 541745
+4 * 541745
+4 * 541745
+4 +1 541745
+7 * 541745
+4 * 541745
+3 * 541745
+3 * 541745
-10 * 2708725
+4 * 2708725
+3 * 2708725
+3 * 2708725
jcnd=541745/2708725 +95 +5 
* * 
+2 +1 2708725
+7 * 2708725
+4 * 2708725
+3 * 2708725
+3 * 2708725
-10 * 10834900
+4 * 10834900
+3 * 10834900
+3 * 10834900
jcnd=2708725/10834900 +70 -1 
* * 
+2 +1 10834900
+3 * 10834900
+3 * 10834900
+4 * 10834900
+2 * 10834900
+3 * 10834900
cfn=(278)
calls=10834900 0x20572 -88 
* * 195028200
+5 * 10834900
+4 * 10834900
+5 * 10834900
+3 * 10834900
+3 * 10834900
+4 * 10834900
+2 * 10834900
+3 * 10834900
cfn=(252)
calls=10834900 0x205a4 -90 
* * 195028200
+5 * 10834900
+4 * 10834900
+5 * 10834900
+4 -1 10834900
+4 * 10834900
jump=10834900 -78 * 
* * 
+2 -1 2708725
+4 * 2708725
jump=2708725 0xaa1f3 * 
* * 
+2 +5 541745
+1 * 541745
+1 * 541745

fn=(534)
0x661a6 205 38157
+1 * 38157
+3 * 38157
+4 * 38157
+4 +1 38157
+7 * 38157
+4 * 38157
+3 * 38157
+3 * 38157
-10 * 763140
+4 * 763140
+3 * 763140
+3 * 763140
jcnd=38157/763140 +61 +5 
* * 
+2 +1 763140
+7 * 763140
+4 * 763140
+3 * 763140
+3 * 763140
-10 * 15262800
+4 * 15262800
+3 * 15262800
+3 * 15262800
jcnd=763140/15262800 +36 -1 
* * 
+2 +1 15262800
+3 * 15262800
+3 * 15262800
+4 * 15262800
+2 * 15262800
+3 * 15262800
cfn=(252)
calls=15262800 0x205a4 98 
* * 274730400
+5 * 15262800
+4 * 15262800
+4 -1 15262800
+4 * 15262800
jump=15262800 -44 * 
* * 
+2 -1 763140
+4 * 763140
jump=763140 -69 * 
* * 
+2 +5 38157
+1 * 38157
+1 * 38157

fn=(346)
0x4e47a 84 600967
+1 * 600967
+3 * 600967
+4 * 600967
+4 * 600967
+4 +1 600967
+4 * 600967
+3 * 600967
+3 * 600967
jcnd=600949/600967 +93 +6 
* * 
+2 +1 18
+4 * 18
+3 * 18
+4 * 18
+3 +1 18
+4 * 18
+3 * 18
+4 * 18
+3 +1 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
+2 * 18
+10 * 18
+3 * 18
+2 * 18
+4 * 18
+3 * 18
cob=(10)
cfi=(41)
cfn=(270)
calls=18 0x906a0 -57 
* * 1098
* * 18
+5 * 18
+3 * 18
+4 * 18
+3 * 18
jump=18 +7 +3 
* * 
+7 +3 600967
+7 * 600967
+4 * 600967
+3 * 600967
+3 * 600967
-10 * 5715830
+4 * 5715830
+3 * 5715830
+3 * 5715830
jcnd=600967/5715830 +91 +5 
* * 
+2 +1 5715830
+7 * 5715830
+4 * 5715830
+3 * 5715830
+3 * 5715830
-10 * 22863320
+4 * 22863320
+3 * 22863320
+3 * 22863320
jcnd=5715830/22863320 +66 -1 
* * 
+2 +1 22863320
+3 * 22863320
+3 * 22863320
+4 * 22863320
+2 * 22863320
+3 * 22863320
cfn=(278)
calls=22863320 0x20572 +7 
* * 411539760
+5 * 22863320
+4 * 22863320
+5 * 22863320
+3 * 22863320
+3 * 22863320
+4 * 22863320
+2 * 22863320
+3 * 22863320
cfn=(252)
calls=22863320 0x205a4 +5 
* * 411539760
+5 * 22863320
+5 * 22863320
+4 -1 22863320
+4 * 22863320
jump=22863320 -74 * 
* * 
+2 -1 5715830
+4 * 5715830
jump=5715830 -99 * 
* * 
+2 +5 600967
+1 * 600967
+1 * 600967

fn=(262)
0x4e352 123 896012
+1 * 896012
+3 * 896012
+4 * 896012
+4 * 896012
+4 * 896012
+4 * 896012
+9 * 896012
+4 * 896012
+2 +1 896012
+4 * 896012
+3 * 896012
cfn=(264)
calls=896012 0x20560 +79 
* * 6272084
+5 * 896012
+2 * 896012
+4 * 896012
+3 * 896012
+4 * 896012
+5 * 896012
+3 * 896012
cfn=(266)
calls=896012 0x4b47a -71 
* * 714109033
+5 +1 896012
+7 * 896012
+4 * 896012
+3 * 896012
+3 * 896012
-10 * 7137052
+4 * 7137052
+3 * 7137052
+3 * 7137052
jcnd=896011/7137052 0x4e45e +7 
* * 
+6 +1 7137053
+7 * 7137053
+4 * 7137053
+3 * 7137053
+3 * 7137053
-10 * 28548208
+4 * 28548208
+3 * 28548208
+3 * 28548208
jcnd=7137052/28548208 0x4e455 -1 
* * 
+6 +1 28548209
+7 * 28548209
+4 * 28548209
+3 * 28548209
cfn=(276)
calls=28548209 0x4b468 +74 
* * 199837463
-7 * 358404577
+4 * 358404577
+3 * 358404577
cfn=(276)
calls=358404577 0x4b468 +74 
* * 2508832039
+5 * 386952786
+3 * 386952786
+3 * 386952786
+2 * 386952786
jcnd=28548208/386952786 0x4e44c -1 
* * 
+2 +1 358404578
+3 * 358404578
+3 * 358404578
+4 * 358404578
+2 * 358404578
+3 * 358404578
cfn=(278)
calls=358404578 0x20572 -28 
* * 6451282404
+5 * 358404578
+4 * 358404578
+5 * 358404578
+3 * 358404578
+3 * 358404578
+4 * 358404578
+2 * 358404578
+3 * 358404578
cfn=(278)
calls=358404578 0x20572 -28 
* * 6451282404
+5 * 358404578
+4 * 358404578
+5 * 358404578
+5 * 358404578
+3 * 358404578
+3 * 358404578
+4 * 358404578
+2 * 358404578
+3 * 358404578
cfn=(252)
calls=358404578 0x205a4 -30 
* * 6451282404
+5 * 358404577
+4 * 358404577
+5 * 358404577
+4 -1 358404577
+4 * 358404577
jump=358404577 0x4e3d0 * 
* * 
+2 -1 28548208
+4 * 28548208
jump=28548208 0x4e3b9 * 
* * 
+5 -1 7137052
+4 * 7137052
jump=7137052 0x4e3a2 * 
* * 
+5 +7 896011
+1 +1 896011
+4 * 896011
+4 * 896011
+9 * 896011
jcnd=896011/896011 +7 * 
* * 
+7 * 896011
+1 * 896011

fn=(276)
0x4b468 201 703384200
+1 * 703384200
+3 * 703384200
+4 * 703384200
+4 * 703384200
+3 * 703384200
+1 * 703384200

fn=(278)
0x20572 100 1400705567
+1 * 1400705567
+3 * 1400705567
+4 * 1400705567
+3 * 1400705567
+3 * 1400705567
+4 * 1400705567
+3 * 1400705567
+4 * 1400705567
+3 * 1400705567
+4 * 1400705567
+2 * 1400705567
+3 * 1400705567
+2 * 1400705567
+2 * 1400705567
+4 * 1400705567
+3 * 1400705567
+1 * 1400705567

fl=(14)
fn=(1578)
0xac490 89 541748
+1 * 541748
+3 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+1 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +6 541748
+4 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 -21 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 -21 
* * 3250488
+5 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb -21 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb -21 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1452)
calls=541748 0x81664 -21 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1576)
calls=541748 0xac482 -21 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1580)
calls=541748 0xac474 -21 
* * 3250488
+5 * 541748
+4 * 541748
+1 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
cfn=(1582) void std::__invoke_impl<void, void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), MomentSolver*&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&>(std::__invoke_memfun_deref, void (MomentSolver::*&)(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), MomentSolver*&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541748 0xacaec -25 
* * 131410739241
+5 * 541745
+4 +1 541745
+1 +1 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(78)
0x8da56 89 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 +6 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(76)
calls=248 -38 -21 
* * 1488
+5 * 248
+3 * 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(80)
calls=248 -67 -21 
* * 1488
+5 * 248
+3 * 248
+3 * 248
cfn=(82) void std::__invoke_impl<void, void (spdlog::details::registry::*&)(), spdlog::details::registry*&>(std::__invoke_memfun_deref, void (spdlog::details::registry::*&)(), spdlog::details::registry*&)
calls=248 0x8e19a -25 
* * 491796
+5 +1 248
+1 +1 248
+4 * 248
+1 * 248
+1 * 248

fn=(1582)
0xacaec 70 541748
+1 * 541748
+3 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+2 * 541748
+1 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 +3 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1576)
calls=541748 0xac482 +1 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
jcnd=541748/541748 +35 * 
* * 
+35 * 541748
+4 * 541748
+3 * 541748
+4 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 +1 
* * 3250488
+5 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1448)
calls=541748 0x74c01 +1 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb +1 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1450)
calls=541748 0x74cbb +1 
* * 3250488
+5 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
cfi=(13)
cfn=(1452)
calls=541748 0x81664 +1 
* * 3250488
+5 * 541748
+4 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
+3 * 541748
cfi=(38)
cfn=(1584) MomentSolver::numFlux(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541748 0xa8a8e +33 
* * 131357647964
+2 * 541745
+1 +1 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(82)
0x8e19a 70 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 +3 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(76)
calls=248 0x8da48 +1 
* * 1488
+5 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
+3 * 248
jcnd=248/248 +35 * 
* * 
+35 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(15)
cfn=(84)
calls=248 0x88bb0 179 
* * 484356
+2 * 248
+1 +1 248
+1 * 248

fl=(9) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/details/periodic_worker.h
fn=(46) spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const
0x885da 34 248
+4 * 248
+3 +3 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(16)
cfn=(540) std::unique_lock<std::mutex>::unique_lock(std::mutex&)
calls=248 0x89836 194 
* * 28272
+5 -3 248
+4 * 248
+3 +4 248
+4 -4 248
+4 * 248
+3 +4 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
cfi=(3) /usr/include/c++/8.2.1/condition_variable
cfn=(44) bool std::condition_variable::wait_for<long, std::ratio<1l, 1l>, spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, std::chrono::duration<long, std::ratio<1l, 1l> > const&, spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1})
calls=248 0x8992c 148 
* * 322305
cfi=(3)
cfn=(44)
calls=1 0x899e1 157 
+4 * 333
+5 * 248
+2 * 248
jcnd=248/248 +9 +4 
* * 
+9 +4 248
+4 * 248
+4 * 248
+3 * 248
cfi=(10)
cfn=(48) std::function<void ()>::operator()() const
calls=248 0x899e8 682 
* * 541148
+5 * 248
+5 * 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(188) std::unique_lock<std::mutex>::~unique_lock()
calls=248 0x8987c 229 
* * 26784
+5 * 248
+3 * 248
+2 +1 248
jump=248 0x885da -9 
* * 

fn=(42) spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const
0x88686 38 496
+1 * 496
+3 * 496
+4 * 496
+4 * 496
+3 * 496
+3 * 496
+3 * 496
+1 * 496

fl=(24)
fn=(1128) bool __gnu_cxx::operator!=<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > >(__gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > > const&, __gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > > const&)
0x6247a 884 72
+1 * 72
+3 * 72
+1 * 72
+4 * 72
+4 * 72
+4 +3 72
+4 * 72
+3 * 72
cfn=(1130) __gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > >::base() const
calls=72 0x669aa -39 
* * 432
+5 * 72
+3 * 72
+4 * 72
+3 * 72
cfn=(1130)
calls=72 0x669aa -39 
* * 432
+5 * 72
+3 * 72
+3 * 72
+3 * 72
+4 * 72
+1 * 72
+1 * 72

fn=(1386) __gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >::base() const
0x5a636 848 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(686) std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >::back_insert_iterator(fmt::v5::internal::basic_buffer<char>&)
0x2264c 467 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(688)
calls=18 0x25ab7 47 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+1 * 18
+1 * 18

fn=(1130)
0x669aa 848 144
+1 * 144
+3 * 144
+4 +1 144
+4 * 144
+1 * 144

fn=(144) __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > >::operator*() const
0x1f1a0 796 780
+1 * 780
+3 * 780
+4 +1 780
+4 * 780
+3 * 780
+1 * 780

fn=(1132) __gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > >::operator*() const
0x624d6 796 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+3 * 36
+1 * 36

fn=(1384) Cell* const* std::__niter_base<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >(__gnu_cxx::__normal_iterator<Cell* const*, std::vector<Cell*, std::allocator<Cell*> > >)
0x5a4a4 987 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(1386)
calls=36 0x5a636 848 
* * 216
+5 * 36
+3 * 36
+1 * 36

fn=(140) bool __gnu_cxx::operator!=<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > >(__gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > const&)
0x1f144 884 1294
+1 * 1294
+3 * 1294
+1 * 1294
+4 * 1294
+4 * 1294
+4 +3 1294
+4 * 1294
+3 * 1294
cfn=(142) __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > >::base() const
calls=1294 0x214a6 -39 
* * 7764
+5 * 1294
+3 * 1294
+4 * 1294
+3 * 1294
cfn=(142)
calls=1294 0x214a6 -39 
* * 7764
+5 * 1294
+3 * 1294
+3 * 1294
+3 * 1294
+4 * 1294
+1 * 1294
+1 * 1294

fn=(1162) __gnu_cxx::__normal_iterator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >*, std::vector<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> >, std::allocator<std::unique_ptr<spdlog::details::flag_formatter, std::default_delete<spdlog::details::flag_formatter> > > > >::operator++()
0x624b6 804 36
+1 * 36
+3 * 36
+4 +2 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 +1 36
+4 +1 36
+1 * 36

fn=(684) std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> > std::back_inserter<fmt::v5::internal::basic_buffer<char> >(fmt::v5::internal::basic_buffer<char>&)
0x2076e 533 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(686)
calls=18 0x2264c -67 
* * 360
+5 * 18
+4 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(1124)
0x6698c 783 72
+1 * 72
+3 * 72
+4 * 72
+4 +1 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+1 * 72
+1 * 72

fn=(1364)
0x59a0c 783 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(142)
0x214a6 848 2588
+1 * 2588
+3 * 2588
+4 +1 2588
+4 * 2588
+1 * 2588

fn=(172) __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > >::operator++()
0x1f180 804 780
+1 * 780
+3 * 780
+4 +2 780
+4 * 780
+3 * 780
+4 * 780
+4 * 780
+3 +1 780
+4 +1 780
+1 * 780

fn=(136)
0x21488 783 1028
+1 * 1028
+3 * 1028
+4 * 1028
+4 +1 1028
+4 * 1028
+3 * 1028
+4 * 1028
+3 * 1028
+1 * 1028
+1 * 1028

fl=(32)
fn=(852) std::signbit(double)
0x1b3ac 666 36
+1 * 36
+3 * 36
+5 * 36
+5 * 36
+4 * 36
+3 * 36
+2 * 36
+3 * 36
+1 * 36

fn=(862) std::isinf(double)
0x1b31b 593 36
+1 * 36
+3 * 36
+5 * 36
+5 * 36
+8 * 36
+4 * 36
+8 * 36
+3 * 36
+3 * 36
+3 * 36
+3 * 36
+1 * 36

fn=(198)
0x6603e 415 67147520
+1 * 67147520
+3 * 67147520
+4 * 67147520
+5 * 67147520
+3 +3 67147520
+5 * 67147520
+5 * 67147520
cob=(9)
cfi=(33)
cfn=(202)
calls=67147520 0xff80 0 
* * 5426063949
* * 67147520
+5 * 67147520
+5 * 67147520
+4 * 67147520
+5 +1 67147520
+1 * 67147520

fn=(858) std::isnan(double)
0x1b36b 620 36
+1 * 36
+3 * 36
+5 * 36
+5 * 36
+5 * 36
jcnd=36/36 +9 * 
* * 
+9 * 36
+5 * 36
+1 * 36

fl=(55)
fn=(624)
0x1ad83 81 72
+1 * 72
+3 * 72
+3 * 72
+3 +1 72
+3 * 72
+3 * 72
+2 +1 72
+1 * 72

fl=(17)
fn=(98)
0x89ff0 324 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfi=(18)
cfn=(100)
calls=248 0x8b1ec 503 
* * 12648
+5 * 248
+1 * 248

fn=(108)
0x650b2 346 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfi=(18)
cfn=(110)
calls=248 0x69e42 511 
* * 9920
+5 * 248
+1 * 248

fl=(29) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/sinks/ansicolor_sink.h
fn=(186) spdlog::sinks::ansicolor_sink<spdlog::details::console_stdout, spdlog::details::console_mutex>::flush()
0x78bc4 118 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+7 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(16)
cfn=(86)
calls=248 0x613c0 +41 
* * 20088
+5 +1 248
+4 * 248
+7 * 248
+3 * 248
cob=(1)
cfi=(6)
cfn=(156) fflush
calls=248 0x70d10 0 
* * 17608
* * 248
+5 -1 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(160)
calls=248 0x613ee +47 
* * 17112
+5 +2 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +35 * 
* * 
+35 * 248
+4 * 248
+1 * 248
+1 * 248

fl=(62) /usr/include/c++/8.2.1/bits/stl_algo.h
fn=(964) char* std::__copy_n<char*, unsigned long, char*>(char*, unsigned long, char*, std::random_access_iterator_tag)
0x3805c 780 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +2 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(64)
cfn=(966)
calls=36 0x3aeb0 446 
* * 4788
+5 * 36
+1 * 36

fn=(1024) char* std::copy_n<char const*, unsigned long, char*>(char const*, unsigned long, char*)
0x25b7d 799 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +8 18
+4 * 18
+3 * 18
cfi=(63)
cfn=(1026)
calls=18 0x25978 205 
* * 90
+5 -1 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1028) char* std::__copy_n<char const*, unsigned long, char*>(char const*, unsigned long, char*, std::random_access_iterator_tag)
calls=18 0x27adb -26 
* * 2754
+5 +2 18
+1 * 18

fn=(960) char* std::copy_n<char*, unsigned long, char*>(char*, unsigned long, char*)
0x34ac6 799 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +8 36
+4 * 36
+3 * 36
cfi=(63)
cfn=(962)
calls=36 0x26959 205 
* * 180
+5 -1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(964)
calls=36 0x3805c -26 
* * 5364
+5 +2 36
+1 * 36

fn=(1028)
0x27adb 780 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(64)
cfn=(1030)
calls=18 0x20ddd 446 
* * 2466
+5 * 18
+1 * 18

fl=(25) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/sinks/stdout_sinks.h
fn=(152) spdlog::sinks::stdout_sink<spdlog::details::console_stdout, spdlog::details::console_mutex>::flush()
0x8fbe4 47 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +2 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(16)
cfn=(86)
calls=248 0x613c0 161 
* * 20088
+5 +1 248
+4 * 248
+4 * 248
+3 * 248
cob=(1)
cfi=(6)
cfn=(156)
calls=248 0x70d10 -50 
* * 17608
* * 248
+5 -1 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(160)
calls=248 0x613ee 167 
* * 17112
+5 +2 248
+1 * 248
+4 * 248
+9 * 248
jcnd=248/248 +35 * 
* * 
+35 * 248
+4 * 248
+1 * 248
+1 * 248

fn=(1072) spdlog::sinks::stdout_sink<spdlog::details::console_stdout, spdlog::details::console_mutex>::log(spdlog::details::log_msg const&)
0x8fa7c 38 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+7 * 18
+7 * 18
+7 * 18
+9 * 18
+4 * 18
+2 +2 18
+7 * 18
+4 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(16)
cfn=(86)
calls=18 0x613c0 161 
* * 1458
+5 +1 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56)
cfn=(630)
calls=18 0xb2d90 +90 
* * 36
* * 18
+5 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(57)
cfn=(632)
calls=18 0x1ea6e 525 
* * 1206
+5 * 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56)
cfn=(644)
calls=18 0xb2db0 +98 
* * 36
* * 18
+5 +1 18
+7 * 18
+4 * 18
+3 * 18
cfi=(59)
cfn=(1074)
calls=18 0x6503a 334 
* * 1098
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+7 * 18
+7 * 18
+3 * 18
cfi=(71)
cfn=(1088)
calls=18 0x5ede4 562 
* * 34362
+2 +1 18
+7 * 18
+4 * 18
+7 * 18
+3 * 18
cfi=(58)
cfn=(938)
calls=18 0x1ea5c 406 
* * 126
+5 * 18
+3 * 18
+7 * 18
+3 * 18
cfi=(58)
cfn=(986) fmt::v5::internal::basic_buffer<char>::data()
calls=18 0x1eb48 412 
* * 126
+5 * 18
+3 * 18
+3 * 18
+5 * 18
+3 * 18
cob=(1)
cfi=(6)
cfn=(1174) fwrite
calls=18 0x71b20 -43 
* * 6336
* * 18
+5 +1 18
cfi=(76)
cfn=(1204)
calls=18 0x60a6a -16 
* * 90
+5 * 18
+3 * 18
cob=(1)
cfi=(6)
cfn=(156)
calls=18 0x70d10 -44 
* * 1278
* * 18
+5 -3 18
+7 * 18
+3 * 18
cfi=(57)
cfn=(982)
calls=18 0x1eada 529 
* * 954
+5 -1 18
+7 * 18
+3 * 18
cfi=(16)
cfn=(160)
calls=18 0x613ee 167 
* * 1242
+5 +5 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +53 * 
* * 
+53 * 18
+7 * 18
+1 * 18
+2 * 18
+1 * 18

fl=(3)
fn=(44)
0x8992c 148 248
+1 * 248
+3 * 248
+1 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +5 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(546)
calls=248 0x5e3c5 +40 
* * 12400
+5 * 248
+4 +1 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(8)
cfn=(554)
calls=248 0x898a3 559 
* * 31744
+5 * 248
+2 * 248
jcnd=248/248 +14 +2 
* * 
+14 +2 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(558)
calls=248 0x8991d -57 
* * 1488
+5 * 248
+3 * 248
cob=(10)
cfi=(5)
cfn=(22)
calls=248 0xb3650 55 
* * 9672
* * 248
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(8)
cfn=(560)
calls=248 0x8ad76 715 
* * 27032
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(40) bool std::condition_variable::wait_until<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, spdlog::details::periodic_worker::periodic_worker(std::function<void ()> const&, std::chrono::duration<long, std::ratio<1l, 1l> >)::{lambda()#1}::operator()() const::{lambda()#1})
calls=248 0x8adea -32 
* * 228072
cfn=(40)
calls=1 0x8ae49 -24 
+4 * 326
+5 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+4 * 248
+1 * 248
+1 * 248

fn=(38) std::cv_status std::condition_variable::wait_until<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
0x8bf22 104 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 +2 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(18) std::cv_status std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::unique_lock<std::mutex>&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
calls=248 0x8ce00 +60 
* * 212965
cfn=(18)
calls=1 0x8cef4 +77 
+4 * 305
+5 * 248
+1 * 248

fn=(40)
0x8adea 124 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+4 +4 248
+4 * 248
+3 * 248
cfi=(9)
cfn=(42)
calls=248 0x88686 -90 
* * 2232
+5 * 248
+3 * 248
+2 * 248
+2 +1 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfn=(38)
calls=248 0x8bf22 -25 
* * 216435
cfn=(38)
calls=1 0x8bf4d -23 
+4 * 307
+5 * 248
+3 * 248
+3 * 248
+2 * 248
+2 +1 248
+4 * 248
+3 * 248
cfi=(9)
cfn=(42)
calls=248 0x88686 -92 
* * 2232
+5 * 248
jump=248 +7 +2 
* * 
+7 +2 248
+1 * 248

fn=(18)
0x8ce00 166 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 * 248
+4 * 248
+9 * 248
+4 * 248
+2 +3 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(566)
calls=248 0x8cc99 674 
* * 25296
+5 * 248
+4 +1 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(8)
cfn=(576)
calls=248 0x8cd01 752 
* * 46376
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(582)
calls=248 0x61cbc +23 
* * 12152
+5 * 248
+4 +4 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(578)
calls=248 0x894ce 639 
* * 1736
+5 * 248
+4 * 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(550)
calls=248 0x5e072 348 
* * 1736
+5 -2 248
+4 +3 248
+4 * 248
+3 * 248
cfi=(8)
cfn=(36)
calls=248 0x5cf64 348 
* * 1736
+5 -3 248
+4 +6 248
+4 * 248
+3 * 248
cfi=(16)
cfn=(586) std::unique_lock<std::mutex>::mutex() const
calls=248 0x8d7e2 352 
* * 1736
+5 * 248
+3 * 248
cfi=(16)
cfn=(588) std::mutex::native_handle()
calls=248 0x884e4 -53 
* * 1488
+5 * 248
+3 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(2)
cfn=(16)
calls=248 0x87fcb 870 
* * 74474
cfi=(2)
cfn=(16)
calls=1 0x87ff6 872 
+4 * 164
+5 +3 248
cob=(10)
cfi=(5)
cfn=(22)
calls=248 0xb3650 55 
* * 9672
* * 248
+5 * 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
+3 * 248
cfi=(8)
cfn=(30)
calls=248 0x8d7f3 770 
* * 21328
+5 +1 248
+2 * 248
jcnd=248/248 +9 * 
* * 
+9 * 248
+5 +1 248
+4 * 248
+9 * 248
jcnd=248/248 +7 * 
* * 
+7 * 248
+1 * 248

fl=(28)
fn=(1210)
0x892ba 83 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(938)
calls=18 0x1ea5c 406 
* * 126
+5 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(1056)
calls=18 0x4e01a 415 
* * 126
+5 * 18
+4 +1 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+5 * 18
+3 * 18
cob=(1)
cfi=(6)
cfn=(1174)
calls=18 0x71b20 -87 
* * 2466
* * 18
+5 * 18
+4 * 18
+3 * 18
+2 * 18
jcnd=18/18 0x893e3 +4 
* * 
0x893e3 +4 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+4 * 18
+1 * 18
+2 * 18
+1 * 18

fn=(178)
0x89262 69 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+4 * 248
+3 * 248
cob=(1)
cfi=(6)
cfn=(156)
calls=248 0x70d10 -71 
* * 20596
* * 248
+5 +1 248
+1 * 248
+1 * 248

fl=(21)
fn=(124)
0x1f524 988 514
+1 * 514
+3 * 514
+4 * 514
+4 +3 514
+4 * 514
+3 * 514
cfn=(126) std::__shared_ptr_access<spdlog::logger, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
calls=514 0x2168c +5 
* * 8224
+5 +1 514
+1 * 514

fn=(150) std::__shared_ptr<spdlog::sinks::sink, (__gnu_cxx::_Lock_policy)2>::get() const
0x2421a 1285 816
+1 * 816
+3 * 816
+4 +1 816
+4 * 816
+3 * 816
+1 * 816

fn=(128) std::__shared_ptr<spdlog::logger, (__gnu_cxx::_Lock_policy)2>::get() const
0x1f598 1285 514
+1 * 514
+3 * 514
+4 +1 514
+4 * 514
+3 * 514
+1 * 514

fn=(148) std::__shared_ptr_access<spdlog::sinks::sink, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
0x214b4 996 816
+1 * 816
+3 * 816
+4 * 816
+4 +1 816
+4 * 816
+3 * 816
cfn=(150)
calls=816 0x2421a 1285 
* * 5712
+5 * 816
+1 * 816

fn=(126)
0x2168c 996 514
+1 * 514
+3 * 514
+4 * 514
+4 +1 514
+4 * 514
+3 * 514
cfn=(128)
calls=514 0x1f598 1285 
* * 3598
+5 * 514
+1 * 514

fn=(146) std::__shared_ptr_access<spdlog::sinks::sink, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
0x1f1b2 988 816
+1 * 816
+3 * 816
+4 * 816
+4 +3 816
+4 * 816
+3 * 816
cfn=(148)
calls=816 0x214b4 +5 
* * 13056
+5 +1 816
+1 * 816

fl=(31)
fn=(1430) VectorSpace::Vector<unsigned int>::size() const
0x5898e 238 722329
+1 * 722329
+3 * 722329
+4 * 722329
+4 * 722329
+3 * 722329
+1 * 722329

fn=(358)
0x66168 240 301971
+1 * 301971
+3 * 301971
+4 +1 301971
+7 * 301971
+4 * 301971
+3 * 301971
+3 * 301971
-10 * 4743420
+4 * 4743420
+3 * 4743420
+3 * 4743420
jcnd=301971/4743420 +33 +3 
* * 
+2 +1 4743420
+4 * 4743420
+3 * 4743420
+3 * 4743420
+4 * 4743420
+3 * 4743420
+4 * 4743420
+4 -1 4743420
+4 * 4743420
jump=4743420 -41 * 
* * 
+2 +3 301971
+1 * 301971
+1 * 301971

fn=(1610) VectorSpace::Vector<unsigned int>::~Vector()
0x583fc 89 181469
+1 * 181469
+3 * 181469
+4 * 181469
+4 +1 181469
+4 * 181469
+4 * 181469
+3 * 181469
+2 * 181469
+2 +1 181469
+4 * 181469
+3 * 181469
+3 * 181469
+2 * 181469
+4 * 181469
+3 * 181469
+3 * 181469
cob=(10)
cfi=(35)
cfn=(238)
calls=181469 0x8e640 -57 
* * 16014244
* * 181469
+5 +2 181469
+1 * 181469
+1 * 181469

fn=(234)
0x4b340 89 148252658
+1 * 148252658
+3 * 148252658
+4 * 148252658
+4 +1 148252658
+4 * 148252658
+4 * 148252658
+3 * 148252658
+2 * 148252658
jcnd=54174781/148252658 +29 +3 
* * 
+2 +1 94077877
+4 * 94077877
+3 * 94077877
+3 * 94077877
+2 * 94077877
+4 * 94077877
+3 * 94077877
+3 * 94077877
cob=(10)
cfi=(35)
cfn=(238)
calls=94077877 0x8e640 -57 
* * 8569246910
* * 94077877
+5 +2 148252658
+1 * 148252658
+1 * 148252658

fn=(1436) VectorSpace::Vector<unsigned int>::operator[](unsigned int)
0x58604 122 1079898
+1 * 1079898
+3 * 1079898
+4 * 1079898
+3 * 1079898
+4 * 1079898
+3 * 1079898
+3 * 1079898
+4 * 1079898
+3 * 1079898
+1 * 1079898

fn=(444)
0x66156 238 186703367
+1 * 186703367
+3 * 186703367
+4 * 186703367
+4 * 186703367
+3 * 186703367
+1 * 186703367

fn=(1442)
0x588ec 95 1155498
+1 * 1155498
+3 * 1155498
+4 * 1155498
+4 * 1155498
+4 * 1155498
+4 * 1155498
+3 * 1155498
+4 * 1155498
+3 * 1155498
+4 * 1155498
+4 +1 1155498
+4 * 1155498
+3 * 1155498
+2 * 1155498
+10 * 1155498
+3 * 1155498
+2 * 1155498
+4 * 1155498
+3 * 1155498
cob=(10)
cfi=(41)
cfn=(270)
calls=1155498 0x906a0 -65 
* * 70485378
* * 1155498
+5 * 1155498
+3 * 1155498
+4 * 1155498
+3 +1 1155498
+7 * 1155498
jump=1155498 +7 * 
* * 
+7 * 3466494
+4 * 3466494
+3 * 3466494
+3 * 3466494
jcnd=1155498/3466494 +50 +3 
* * 
+2 +1 2310996
+4 * 2310996
+3 * 2310996
+3 * 2310996
+4 * 2310996
+3 * 2310996
+4 * 2310996
+3 * 2310996
+3 * 2310996
+4 * 2310996
+3 * 2310996
+4 * 2310996
+4 -1 2310996
+4 * 2310996
jump=2310996 -58 * 
* * 
+2 +3 1155498
+1 * 1155498
+1 * 1155498

fn=(1594) VectorSpace::Vector<double>::Vector(unsigned int, double*)
0x4e322 87 54174788
+1 * 54174788
+3 * 54174788
+4 * 54174788
+3 * 54174788
+4 * 54174788
+4 * 54174788
+3 * 54174788
+3 * 54174788
+4 * 54174788
+4 * 54174788
+4 * 54174788
+4 * 54174788
+3 * 54174788
+1 * 54174788
+1 * 54174788

fn=(196)
0x20542 122 760878333
+1 * 760878333
+3 * 760878333
+4 * 760878333
+3 * 760878333
+4 * 760878333
+3 * 760878333
+3 * 760878333
+4 * 760878333
+3 * 760878333
+1 * 760878333

fn=(354)
0x65766 80 587829
+1 * 587829
+3 * 587829
+4 * 587829
+4 * 587829
+3 * 587829
+5 * 587829
+4 * 587829
+3 * 587829
+3 * 587829
+4 * 587829
+4 +1 587829
+4 * 587829
+3 * 587829
+2 * 587829
+10 * 587829
+3 * 587829
+2 * 587829
+4 * 587829
+3 * 587829
cob=(10)
cfi=(41)
cfn=(270)
calls=587829 0x906a0 -50 
* * 35857569
* * 587829
+5 * 587829
+3 * 587829
+4 * 587829
+3 +1 587829
+7 * 587829
jump=587829 +7 * 
* * 
+7 * 8600073
+4 * 8600073
+3 * 8600073
+3 * 8600073
jcnd=587829/8600073 +34 +3 
* * 
+2 +1 8012244
+4 * 8012244
+3 * 8012244
+3 * 8012244
+4 * 8012244
+3 * 8012244
+5 * 8012244
+4 -1 8012244
+4 * 8012244
jump=8012244 -42 * 
* * 
+2 +3 587829
+1 * 587829
+1 * 587829

fn=(538)
0x4b60a 111 10849641
+1 * 10849641
+3 * 10849641
+4 * 10849641
+4 * 10849641
+4 +1 10849641
+4 * 10849641
+3 * 10849641
+3 * 10849641
jcnd=10849641/10849641 +77 +5 
* * 
+77 +5 10849641
+7 * 10849641
+4 * 10849641
+3 * 10849641
+3 * 10849641
-10 * 43633508
+4 * 43633508
+3 * 43633508
+3 * 43633508
jcnd=10849641/43633508 +50 +3 
* * 
+2 +1 43633508
+4 * 43633508
+3 * 43633508
+3 * 43633508
+4 * 43633508
+3 * 43633508
+4 * 43633508
+3 * 43633508
+3 * 43633508
+4 * 43633508
+3 * 43633508
+4 * 43633508
+4 -1 43633508
+4 * 43633508
jump=43633508 -58 * 
* * 
+2 +3 10849641
+1 * 10849641
+1 * 10849641

fn=(366)
0x20524 124 738325018
+1 * 738325018
+3 * 738325018
+4 * 738325018
+3 * 738325018
+4 * 738325018
+3 * 738325018
+3 * 738325018
+4 * 738325018
+3 * 738325018
+1 * 738325018

fn=(1426)
0x5884e 95 181473
+1 * 181473
+3 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+4 * 181473
+3 * 181473
+4 * 181473
+3 * 181473
+4 * 181473
+4 +1 181473
+4 * 181473
+3 * 181473
+2 * 181473
+10 * 181473
+3 * 181473
+2 * 181473
+4 * 181473
+3 * 181473
cob=(10)
cfi=(41)
cfn=(270)
calls=181473 0x906a0 -65 
* * 11069853
* * 181473
+5 * 181473
+3 * 181473
+4 * 181473
+3 +1 181473
+7 * 181473
jump=181473 +7 * 
* * 
+7 * 725892
+4 * 725892
+3 * 725892
+3 * 725892
jcnd=181473/725892 +47 +3 
* * 
+2 +1 544419
+4 * 544419
+3 * 544419
+3 * 544419
+4 * 544419
+4 * 544419
+4 * 544419
+3 * 544419
+3 * 544419
+4 * 544419
+3 * 544419
+2 * 544419
+2 -1 544419
+4 * 544419
jump=544419 -55 * 
* * 
+2 +3 181473
+1 * 181473
+1 * 181473

fn=(1602)
0x7ae48 126 10906957
+1 * 10906957
+3 * 10906957
+4 * 10906957
+4 * 10906957
+4 * 10906957
+4 * 10906957
+9 * 10906957
+4 * 10906957
+2 +1 10906957
+4 * 10906957
+3 * 10906957
+4 * 10906957
+5 * 10906957
+2 * 10906957
+3 * 10906957
cfn=(364)
calls=10906957 0x4b7a4 -56 
* * 1645078507
+5 +1 10906957
+7 * 10906957
+4 * 10906957
+3 * 10906957
+3 * 10906957
-10 * 43483828
+4 * 43483828
+3 * 43483828
+3 * 43483828
jcnd=10906957/43483828 +85 +3 
* * 
+2 +1 43483828
+4 * 43483828
+3 * 43483828
+3 * 43483828
+4 * 43483828
+3 * 43483828
+4 * 43483828
+4 * 43483828
+3 * 43483828
+3 * 43483828
+4 * 43483828
+3 * 43483828
+4 * 43483828
+4 * 43483828
+5 * 43483828
+3 * 43483828
+4 * 43483828
+2 * 43483828
+3 * 43483828
cfn=(196)
calls=43483828 0x20542 -7 
* * 478322108
+5 * 43483828
+5 * 43483828
+4 -1 43483828
+4 * 43483828
jump=43483828 -93 * 
* * 
+2 +3 10906957
+1 +1 10906957
+4 * 10906957
+4 * 10906957
+9 * 10906957
jcnd=10906957/10906957 +7 * 
* * 
+7 * 10906957
+1 * 10906957

fn=(364)
0x4b7a4 71 92334555
+1 * 92334555
+3 * 92334555
+4 * 92334555
+4 * 92334555
+3 * 92334555
+2 * 92334555
+3 * 92334555
+4 * 92334555
+3 * 92334555
+3 * 92334555
+4 * 92334555
+4 +1 92334555
+4 * 92334555
+3 * 92334555
+2 * 92334555
+10 * 92334555
+3 * 92334555
+2 * 92334555
+4 * 92334555
+3 * 92334555
cob=(10)
cfi=(41)
cfn=(270)
calls=92334555 0x906a0 -41 
* * 6794527998
* * 92334555
+5 * 92334555
+3 * 92334555
+4 * 92334555
+3 +1 92334555
+4 * 92334555
+3 * 92334555
+2 * 92334555
jcnd=21890230/92334555 +59 +5 
* * 
+2 * 70444325
jump=70444325 +7 +1 
* * 
+7 +1 70444325
+7 * 70444325
+4 * 70444325
+3 * 70444325
+3 * 70444325
-10 * 281633300
+4 * 281633300
+3 * 281633300
+3 * 281633300
jcnd=70444325/281633300 +33 +4 
* * 
+2 +1 281633300
+4 * 281633300
+3 * 281633300
+3 * 281633300
+4 * 281633300
+3 * 281633300
+4 * 281633300
+4 -1 281633300
+4 * 281633300
jump=281633300 -41 * 
* * 
+2 +4 92334555
+1 * 92334555
+1 * 92334555

fn=(1596)
0x7ad62 134 21669915
+1 * 21669915
+3 * 21669915
+4 * 21669915
+4 * 21669915
+4 * 21669915
+4 * 21669915
+9 * 21669915
+4 * 21669915
+2 +1 21669915
+4 * 21669915
+3 * 21669915
+4 * 21669915
+5 * 21669915
+2 * 21669915
+3 * 21669915
cfn=(364)
calls=21669915 0x4b7a4 -64 
* * 3272157165
+5 +1 21669915
+7 * 21669915
+4 * 21669915
+3 * 21669915
+3 * 21669915
-10 * 86679660
+4 * 86679660
+3 * 86679660
+3 * 86679660
jcnd=21669915/86679660 +85 +3 
* * 
+2 +1 86679660
+4 * 86679660
+3 * 86679660
+3 * 86679660
+4 * 86679660
+3 * 86679660
+4 * 86679660
+4 * 86679660
+3 * 86679660
+3 * 86679660
+4 * 86679660
+3 * 86679660
+4 * 86679660
+4 * 86679660
+5 * 86679660
+3 * 86679660
+4 * 86679660
+2 * 86679660
+3 * 86679660
cfn=(196)
calls=86679660 0x20542 -15 
* * 953476260
+5 * 86679660
+5 * 86679660
+4 -1 86679660
+4 * 86679660
jump=86679660 -93 * 
* * 
+2 +3 21669915
+1 +1 21669915
+4 * 21669915
+4 * 21669915
+9 * 21669915
jcnd=21669915/21669915 +7 * 
* * 
+7 * 21669915
+1 * 21669915

fn=(1598)
0x4b3b6 174 10834958
+1 * 10834958
+3 * 10834958
+4 * 10834958
+4 * 10834958
+4 * 10834958
+4 * 10834958
+9 * 10834958
+4 * 10834958
+2 +1 10834958
+4 * 10834958
+3 * 10834958
+4 * 10834958
+5 * 10834958
+2 * 10834958
+3 * 10834958
cfn=(364)
calls=10834958 0x4b7a4 71 
* * 1636078658
+5 +1 10834958
+7 * 10834958
+4 * 10834958
+3 * 10834958
+3 * 10834958
-10 * 43339832
+4 * 43339832
+3 * 43339832
+3 * 43339832
jcnd=10834958/43339832 +72 +3 
* * 
+2 +1 43339832
+4 * 43339832
+3 * 43339832
+3 * 43339832
+4 * 43339832
+3 * 43339832
+4 * 43339832
+4 * 43339832
+4 * 43339832
+4 * 43339832
+5 * 43339832
+3 * 43339832
+4 * 43339832
+2 * 43339832
+3 * 43339832
cfn=(196)
calls=43339832 0x20542 -55 
* * 476738152
+5 * 43339832
+5 * 43339832
+4 -1 43339832
+4 * 43339832
jump=43339832 -80 * 
* * 
+2 +3 10834958
+1 +1 10834958
+4 * 10834958
+4 * 10834958
+9 * 10834958
jcnd=10834958/10834958 +7 * 
* * 
+7 * 10834958
+1 * 10834958

fl=(60) /home/jannick/Projects/UQCreator/code/src/../ext/spdlog/include/spdlog/fmt/bundled/format-inl.h
fn=(876) int fmt::v5::internal::char_traits<char>::format_float<double>(char*, unsigned long, char const*, int, double)
0x30504 238 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+5 +2 36
+4 * 36
jcnd=36/36 +37 +2 
* * 
+37 +2 36
+5 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+5 * 36
cob=(1)
cfi=(6)
cfn=(880) snprintf
calls=36 0x59470 0 
* * 96801
* * 36
+5 +1 36
+1 * 36

fl=(57)
fn=(680) fmt::v5::vformat_to(fmt::v5::internal::basic_buffer<char>&, fmt::v5::basic_string_view<char>, fmt::v5::format_args)
0x1b7a6 3449 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(682) fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> >::back_insert_range(fmt::v5::internal::basic_buffer<char>&)
calls=18 0x1e6fe 388 
* * 1188
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(692) fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>::iterator fmt::v5::vformat_to<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >(fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::range, fmt::v5::basic_string_view<char>, fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >)
calls=18 0x1e771 3342 
* * 229587
+5 +1 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(694) fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::format_handler(fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_string_view<char>, fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >)
0x207d0 3292 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(696) fmt::v5::internal::error_handler::error_handler()
calls=18 0x1b266 468 
* * 108
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfn=(698) fmt::v5::output_range<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, void>::begin() const
calls=18 0x20ce2 377 
* * 126
+5 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
cfi=(58)
cfn=(700) fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>::basic_format_context(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_string_view<char>, fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >)
calls=18 0x22676 1007 
* * 2124
+5 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(710) fmt::v5::basic_format_arg<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::basic_format_arg()
calls=18 0x226f0 759 
* * 414
+5 * 18
jump=18 +32 * 
* * 
+32 * 18
+4 * 18
+1 * 18
+2 * 18
+1 * 18

fn=(714) void fmt::v5::internal::parse_format_string<false, char, fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&>(fmt::v5::basic_string_view<char>, fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&)
0x209fd 2147 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +17 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(716) fmt::v5::basic_string_view<char>::data() const
calls=18 0x20992 292 
* * 126
+5 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(718) fmt::v5::basic_string_view<char>::size() const
calls=18 0x1b84c 295 
* * 126
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+4 +1 18
+4 * 18
+4 * 18
-8 * 36
+4 * 36
+4 * 36
jcnd=18/36 0x20c78 +32 
* * 
+6 +3 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+2 * 36
jcnd=18/36 +44 * 
* * 
+2 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+5 * 18
+3 * 18
cfn=(1016) bool fmt::v5::internal::find<false, char, char const*>(char const*, char const*, char, char const*&)
calls=18 0x1b757 -42 
* * 882
+5 * 18
+3 * 18
+2 * 18
jcnd=18/18 +9 * 
* * 
+9 * 36
+5 * 36
+2 * 36
jcnd=36/36 +30 +2 
* * 
+30 +2 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(720) void fmt::v5::internal::parse_format_string<false, char, fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&>(fmt::v5::basic_string_view<char>, fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&)::writer::operator()(char const*, char const*)
calls=36 0x2089e -22 
* * 8370
+5 +1 36
+4 * 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
jcnd=36/36 +26 +2 
* * 
+26 +2 36
+4 * 36
+3 * 36
+2 * 36
jcnd=36/36 +38 +3 
* * 
+38 +3 36
+4 * 36
+3 * 36
+2 * 36
jcnd=36/36 +34 +3 
* * 
+34 +3 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(722) char const* fmt::v5::internal::parse_arg_id<char, fmt::v5::internal::id_adapter<fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&, char> >(char const*, char const*, fmt::v5::internal::id_adapter<fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&, char>&&)
calls=36 0x22ae0 1949 
* * 9576
+5 * 36
+4 +1 36
+4 * 36
+4 * 36
+2 * 36
+4 * 36
+3 * 36
jump=36 +7 * 
* * 
+7 * 36
+3 +1 36
+4 * 36
jcnd=36/36 +26 +2 
* * 
+26 +2 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(746) fmt::v5::internal::null_terminating_iterator<char>::null_terminating_iterator(char const*, char const*)
calls=36 0x209a4 707 
* * 504
+5 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(748) fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::on_format_specs(fmt::v5::internal::null_terminating_iterator<char>)
calls=36 0x23bd8 3319 
* * 200085
+5 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(782) fmt::v5::internal::null_terminating_iterator<char>::operator*() const
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+3 * 36
+2 * 36
jcnd=36/36 +23 +2 
* * 
+23 +2 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(750) char const* fmt::v5::internal::pointer_from<char>(fmt::v5::internal::null_terminating_iterator<char>)
calls=36 0x22cac 781 
* * 360
+5 * 36
+4 * 36
jump=36 +23 +5 
* * 
+23 +5 36
+4 * 36
+4 * 36
+4 -30 36
jump=36 0x20a5c * 
* * 
+13 +32 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(724) fmt::v5::internal::id_adapter<fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&, char>::operator()()
0x2615a 2135 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(726) fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::on_arg_id()
calls=36 0x227d8 3304 
* * 8136
+5 * 36
+1 * 36
+1 * 36

fn=(766) bool fmt::v5::internal::custom_formatter<char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::operator()<double>(double) const
0x27ca4 1631 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+5 * 36
+1 * 36

fn=(794) fmt::v5::internal::null_terminating_iterator<char>::operator++()
0x23076 724 144
+1 * 144
+3 * 144
+4 +1 144
+4 * 144
+3 * 144
+4 * 144
+4 * 144
+3 +1 144
+4 * 144
+4 * 144
+3 +1 144
+1 * 144

fn=(806) fmt::v5::internal::null_terminating_iterator<char>::operator++(int)
0x232da 729 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 +1 36
+4 * 36
+4 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(810) fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::arg_formatter(fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>&, fmt::v5::basic_format_specs<char>*)
0x25ebc 2329 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(812) fmt::v5::internal::context_base<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, char>::out()
calls=36 0x20c94 956 
* * 252
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(814) fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> >::back_insert_range(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)
calls=36 0x27d8a 389 
* * 828
+5 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(816) fmt::v5::internal::arg_formatter_base<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::arg_formatter_base(fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_specs<char>*)
calls=36 0x27db0 1476 
* * 4068
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(846) fmt::v5::float_spec_handler<char>::on_fixed()
0x30364 2835 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+3 * 18
+2 * 18
jcnd=18/18 +10 +7 
* * 
+10 +7 18
+1 * 18
+1 * 18

fn=(848) std::numeric_limits<fmt::v5::internal::dummy_int>::isnegative(double)
0x1b4c0 345 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+9 * 36
+4 * 36
+2 +2 36
+5 * 36
cfn=(850) bool fmt::v5::internal::const_check<bool>(bool)
calls=36 0x1e646 -36 
* * 252
+5 * 36
+2 * 36
+2 +1 36
+5 * 36
cfi=(32)
cfn=(852)
calls=36 0x1b3ac 666 
* * 360
+5 * 36
jump=36 0x1b564 +7 
* * 
0x1b564 +7 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(856) bool std::numeric_limits<fmt::v5::internal::dummy_int>::isnotanumber<double>(double)
0x1e655 337 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+9 * 36
+4 * 36
+2 +2 36
+5 * 36
cfn=(850)
calls=36 -48 -28 
* * 252
+5 * 36
+2 * 36
+2 +1 36
+5 * 36
cfi=(32)
cfn=(858)
calls=36 0x1b36b 620 
* * 324
+5 * 36
jump=36 +38 +2 
* * 
+38 +2 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(984) fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >::deallocate()
0x20fb4 516 90
+1 * 90
+3 * 90
+4 * 90
+4 +1 90
+4 * 90
+3 * 90
cfi=(58)
cfn=(986)
calls=90 0x1eb48 412 
* * 630
+5 * 90
+4 +1 90
+4 * 90
+4 * 90
+4 * 90
jcnd=90/90 +36 +1 
* * 
+36 +1 90
+1 * 90
+1 * 90

fn=(1022) fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::on_text(char const*, char const*)
0x2271c 3296 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(758) std::make_unsigned<long>::type fmt::v5::internal::to_unsigned<long>(long)
calls=18 0x1e6c5 221 
* * 162
+5 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(812)
calls=18 0x20c94 956 
* * 126
+5 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(948) std::enable_if<fmt::v5::is_contiguous<fmt::v5::internal::basic_buffer<char> >::value, fmt::v5::internal::checked<fmt::v5::internal::basic_buffer<char>::value_type>::type>::type fmt::v5::internal::reserve<fmt::v5::internal::basic_buffer<char> >(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >&, unsigned long)
calls=18 0x23eac 677 
* * 2016
+5 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(62)
cfn=(1024)
calls=18 0x25b7d 799 
* * 3150
+5 * 18
+3 * 18
+4 * 18
+3 +1 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(58)
cfn=(996) fmt::v5::internal::context_base<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, char>::advance_to(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)
calls=18 0x25bb6 960 
* * 180
+5 +1 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(720)
0x2089e 2150 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
jcnd=18/36 0x2097a * 
* * 
+6 +2 18
+8 +1 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+5 * 18
+3 * 18
cfn=(1016)
calls=18 0x1b757 -26 
* * 882
+5 * 18
+3 * 18
+2 * 18
+2 +1 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1022)
calls=18 0x2271c 3296 
* * 6516
+5 * 18
jump=18 0x2097b +7 
* * 
0x2097a -4 18
+1 +11 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
-13 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 36
+1 * 36

fn=(722)
0x22ae0 1949 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+4 * 36
jcnd=36/36 +33 +1 
* * 
+33 +1 36
+4 * 36
+3 * 36
+3 +1 36
+4 * 36
+2 * 36
+4 * 36
+2 +1 36
+4 * 36
+3 * 36
cfn=(724)
calls=36 0x2615a 2135 
* * 8532
+5 * 36
+4 * 36
jump=36 0x22c96 +16 
* * 
0x22c96 +16 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(762) fmt::v5::internal::custom_formatter<char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::custom_formatter(fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>&)
0x25c8e 1623 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(772) fmt::v5::internal::specs_setter<char>::specs_setter(fmt::v5::basic_format_specs<char>&)
0x285a4 1695 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(796) unsigned int fmt::v5::internal::parse_nonnegative_int<fmt::v5::internal::null_terminating_iterator<char>, fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >&>(fmt::v5::internal::null_terminating_iterator<char>&, fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >&)
0x22da8 1571 72
+1 * 72
+3 * 72
+1 * 72
+4 * 72
+4 * 72
+4 * 72
+9 * 72
+4 * 72
+2 +1 72
+4 * 72
+3 * 72
cfn=(782)
calls=72 0x209ce 720 
* * 1080
+5 * 72
+2 * 72
+2 * 72
+4 * 72
+3 * 72
cfn=(782)
calls=72 0x209ce 720 
* * 1080
+5 * 72
+2 * 72
jcnd=72/72 +33 +1 
* * 
+33 +1 72
+7 +2 72
+7 +1 72
+3 * 72
+5 * 72
+2 * 72
+2 * 72
+3 * 72
+3 +3 72
+3 * 72
+3 * 72
jcnd=72/72 +16 +4 
* * 
+16 +4 72
+3 * 72
+2 * 72
+3 * 72
+2 * 72
+2 * 72
+2 * 72
+4 * 72
+3 * 72
cfn=(782)
calls=72 0x209ce 720 
* * 1080
+5 * 72
+3 * 72
+2 * 72
+3 * 72
+3 +2 72
+4 * 72
+4 * 72
+3 * 72
+4 * 72
+4 +1 72
+4 * 72
+3 * 72
cfn=(794)
calls=72 0x23076 724 
* * 936
+5 +1 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+4 +1 72
+4 * 72
+3 * 72
cfn=(782)
calls=72 0x209ce 720 
* * 1080
+5 * 72
+2 * 72
jcnd=36/72 +25 * 
* * 
+2 * 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
jcnd=36/36 +9 * 
* * 
+9 * 72
+5 * 72
+2 * 72
jcnd=72/72 +7 +1 
* * 
+7 +1 72
+3 * 72
+3 * 72
jcnd=72/72 +21 +2 
* * 
+21 +2 72
+3 +1 72
+4 * 72
+9 * 72
jcnd=72/72 +7 * 
* * 
+7 * 72
+4 * 72
+1 * 72
+1 * 72

fn=(802) fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >::end_precision()
0x2660a 1766 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+2 * 36
cfi=(58)
cfn=(804) fmt::v5::internal::is_integral(fmt::v5::internal::type)
calls=36 0x1b281 508 
* * 540
+5 * 36
+2 * 36
+2 * 36
+4 * 36
+3 * 36
+3 * 36
jcnd=36/36 +9 * 
* * 
+9 * 36
+5 * 36
+2 * 36
jcnd=36/36 +21 +2 
* * 
+21 +2 36
+1 * 36
+1 * 36

fn=(836) std::enable_if<std::is_floating_point<double>::value, std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> > >::type fmt::v5::internal::arg_formatter_base<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::operator()<double>(double)
0x280dc 1503 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+5 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+2 * 36
+4 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
jump=36 +29 * 
* * 
+29 * 36
+4 * 36
+5 * 36
+3 * 36
+3 * 36
cfn=(838) void fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::write_double<double>(double, fmt::v5::basic_format_specs<char> const&)
calls=36 0x2a2f4 2857 
* * 136185
+5 +1 36
+4 * 36
+3 * 36
cfn=(992) fmt::v5::internal::arg_formatter_base<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::out()
calls=36 0x29fe2 -45 
* * 576
+5 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(872) void fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::append_float_length<double>(char*&, double)
0x304f0 2695 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+5 * 36
+1 * 36
+1 * 36

fn=(994) fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::out() const
0x2c84a 2420 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
+1 * 36

fn=(998) fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::~arg_formatter()
0x22858 2306 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(1000) fmt::v5::internal::arg_formatter_base<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::~arg_formatter_base()
calls=36 -47 1426 
* * 2880
+5 * 36
+1 * 36
+1 * 36

fn=(750)
0x22cac 781 108
+1 * 108
+3 * 108
+3 * 108
+3 * 108
+3 * 108
+4 * 108
+4 +1 108
+4 +1 108
+1 * 108

fn=(798) fmt::v5::internal::specs_setter<char>::on_width(unsigned int)
0x2646c 1712 36
+1 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
+2 * 36
+1 * 36
+1 * 36

fn=(818) fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::basic_writer(fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> >)
0x1e8c4 2702 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(698)
calls=36 0x20ce2 377 
* * 252
+5 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(59)
cfn=(820)
calls=36 0x20d2c 191 
* * 2484
+5 * 36
+1 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(860) bool std::numeric_limits<fmt::v5::internal::dummy_int>::isinfinity<double>(double)
0x2d39e 326 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+9 * 36
+4 * 36
+2 +4 36
+5 * 36
cfn=(850)
calls=36 0x1e646 -19 
* * 252
+5 * 36
+2 * 36
+2 +1 36
+5 * 36
cfi=(32)
cfn=(862)
calls=36 0x1b31b 593 
* * 468
+5 * 36
jump=36 +38 +2 
* * 
+38 +2 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(1016)
0x1b757 2128 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+2 * 36
+4 * 36
+3 +1 36
+4 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+2 * 36
+3 * 36
cob=(1)
cfi=(6)
cfn=(1020) __memchr_avx2
calls=36 0x15b560 0 
* * 828
* * 36
+5 * 36
+3 * 36
+4 * 36
+3 +1 36
+4 * 36
+3 * 36
+3 * 36
+3 +1 36
+1 * 36

fn=(1048) fmt::v5::format_handler<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::~format_handler()
0x1e752 3288 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(1050) fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>::~basic_format_context()
calls=18 -55 979 
* * 396
+5 * 18
+1 * 18
+1 * 18

fn=(646) fmt::v5::buffer_context<char>::type::iterator fmt::v5::format_to<char const*, double, double, 500ul, char>(fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >&, char const* const&, double const&, double const&)
0xab123 3464 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +3 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(648) std::enable_if<!fmt::v5::internal::is_compile_string<char const*>::value, void>::type fmt::v5::internal::check_format_string<double, double, char const*>(char const* const&)
calls=18 0xab91a 1350 
* * 108
+5 +3 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(58)
cfn=(650) fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double> fmt::v5::make_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double>(double const&, double const&)
calls=18 0xab925 1132 
* * 4230
+5 -2 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(58)
cfn=(664) fmt::v5::format_args::format_args<fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double> >(fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double>&&)
calls=18 0xab964 1239 
* * 882
+5 * 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(58)
cfn=(672) fmt::v5::basic_string_view<char>::basic_string_view(char const*)
calls=18 0x1b85e 279 
* * 918
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(680)
calls=18 0x1b7a6 -19 
* * 231405
+5 +2 18
+1 +1 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(690) fmt::v5::output_range<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, void>::output_range(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)
0x207b6 376 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+4 * 54
+4 * 54
+3 * 54
+1 * 54
+1 * 54

fn=(746)
0x209a4 707 108
+1 * 108
+3 * 108
+4 * 108
+4 * 108
+4 +1 108
+4 * 108
+4 * 108
+3 * 108
+4 * 108
+4 * 108
+4 * 108
+1 * 108
+1 * 108

fn=(780) fmt::v5::internal::null_terminating_iterator<char> fmt::v5::internal::parse_format_specs<fmt::v5::internal::null_terminating_iterator<char>, fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >&>(fmt::v5::internal::null_terminating_iterator<char>, fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >&)
0x236bf 2014 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+3 +1 36
+4 * 36
+2 * 36
+4 * 36
jcnd=36/36 +15 +4 
* * 
+15 +4 36
+7 +1 36
+7 +2 36
+3 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(784) fmt::v5::internal::null_terminating_iterator<char>::operator+(long)
calls=36 0x22d1a 740 
* * 1404
-16 * 36
+3 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(784)
calls=36 0x22d1a 740 
* * 1404
+5 * 72
+4 * 72
+4 +1 72
+4 * 72
+3 * 72
cfn=(782)
calls=72 0x209ce 720 
* * 1080
+5 * 72
+3 * 72
+3 * 72
+2 * 72
+3 * 72
+2 * 72
+3 * 72
+2 * 72
jump=72 +49 +14 
* * 
+49 +14 72
+4 * 72
jcnd=72/72 0x2381d +12 
* * 
0x2381d +12 72
+4 * 72
+3 * 72
+2 * 72
+3 * 72
+2 * 72
jcnd=36/72 +7 +3 
* * 
+2 -28 36
jump=36 0x23722 +1 
* * 
+5 +31 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+3 * 36
+3 * 36
+2 * 36
+3 * 36
+2 * 36
+3 * 36
+2 * 36
jump=36 +79 +15 
* * 
+79 +15 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+3 * 36
+2 * 36
jcnd=36/36 +26 +6 
* * 
+26 +6 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+3 * 36
+2 * 36
+2 +1 36
+4 * 36
+3 * 36
cfn=(786) fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >::on_zero()
calls=36 0x26444 1761 
* * 1980
+5 +1 36
+4 * 36
+3 * 36
cfn=(794)
calls=36 0x23076 724 
* * 468
+5 +4 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+5 * 36
jump=36 +7 * 
* * 
+7 * 36
+2 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(796)
calls=36 0x22da8 1571 
* * 5328
+5 * 36
+2 * 36
+3 * 36
cfn=(798)
calls=36 0x2646c 1712 
* * 396
+5 * 36
jump=36 0x239fd +10 
* * 
0x239fd +10 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+3 * 36
+2 * 36
+6 +1 36
+4 * 36
+3 * 36
cfn=(794)
calls=36 0x23076 724 
* * 468
+5 +1 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+5 * 36
jump=36 +7 * 
* * 
+7 * 36
+2 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(796)
calls=36 0x22da8 1571 
* * 6048
+5 * 36
+2 * 36
+3 * 36
cfn=(800) fmt::v5::internal::specs_setter<char>::on_precision(unsigned int)
calls=36 0x2653a 1713 
* * 396
+5 * 36
jump=36 0x23b43 +12 
* * 
0x23b43 +12 36
+4 * 36
+3 * 36
cfn=(802)
calls=36 0x2660a 1766 
* * 1260
+5 +4 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+2 * 36
+5 * 36
jump=36 +7 * 
* * 
+7 * 36
+2 * 36
+2 +1 36
+4 * 36
+4 * 36
+5 * 36
+3 * 36
cfn=(806)
calls=36 0x232da 729 
* * 900
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+3 * 36
+2 * 36
+3 * 36
cfn=(808) fmt::v5::internal::specs_setter<char>::on_type(char)
calls=36 0x2665a 1718 
* * 432
+5 +1 36
+4 * 36
+4 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(788) fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >::require_numeric_argument()
0x28602 1772 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+2 * 36
cfi=(58)
cfn=(790) fmt::v5::internal::is_arithmetic(fmt::v5::internal::type)
calls=36 0x1b2ce 513 
* * 576
+5 * 36
+3 * 36
+2 * 36
jcnd=36/36 +21 +2 
* * 
+21 +2 36
+1 * 36
+1 * 36

fn=(842) fmt::v5::float_spec_handler<char>::float_spec_handler(char)
0x2d114 2821 36
+1 * 36
+3 * 36
+4 * 36
+2 * 36
+3 * 36
+4 * 36
+4 * 36
+2 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(864) fmt::v5::internal::use_grisu()
0x1b4b5 290 36
+1 * 36
+3 +1 36
+5 +1 36
+1 * 36

fn=(682)
0x1e6fe 388 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(24)
cfn=(684)
calls=18 0x2076e 533 
* * 684
+5 * 18
+3 * 18
+3 * 18
cfn=(690)
calls=18 0x207b6 -12 
* * 180
+5 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(748)
0x23bd8 3319 36
+1 * 36
+3 * 36
+2 * 36
+1 * 36
+7 * 36
+7 * 36
+3 * 36
+3 * 36
+3 * 36
+7 * 36
+7 * 36
+9 * 36
+4 * 36
+2 +1 36
+7 * 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(730) fmt::v5::internal::context_base<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, char>::parse_context()
calls=36 0x25c3a 945 
* * 216
+5 * 36
+7 +1 36
+7 * 36
+7 * 36
+3 * 36
+3 * 36
cfn=(750)
calls=36 0x22cac 781 
* * 360
+5 * 36
+3 * 36
+7 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(752) fmt::v5::basic_parse_context<char, fmt::v5::internal::error_handler>::advance_to(char const*)
calls=36 0x25c48 845 
* * 2412
+5 +1 36
+7 * 36
+4 * 36
+7 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(762)
calls=36 0x25c8e 1623 
* * 360
+5 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(764) fmt::v5::internal::result_of<fmt::v5::internal::custom_formatter<char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > (int)>::type fmt::v5::visit<fmt::v5::internal::custom_formatter<char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >(fmt::v5::internal::custom_formatter<char, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >&&, fmt::v5::basic_format_arg<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > const&)
calls=36 0x25ca8 782 
* * 1368
+5 * 36
+2 * 36
jcnd=36/36 +37 +2 
* * 
+37 +2 36
+8 * 36
+8 * 36
+8 * 36
+7 * 36
+7 +3 36
+7 * 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(768) fmt::v5::basic_format_arg<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::type() const
calls=36 0x26278 765 
* * 252
+5 * 36
+2 * 36
+7 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(770) fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::specs_handler(fmt::v5::basic_format_specs<char>&, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>&)
calls=36 0x26242 1806 
* * 972
+5 * 36
+4 * 36
+4 * 36
+2 * 36
+3 * 36
+3 * 36
cfn=(774) fmt::v5::internal::specs_checker<fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >::specs_checker(fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > const&, fmt::v5::internal::type)
calls=36 0x262c0 1729 
* * 1620
+5 +1 36
+4 * 36
+7 * 36
+7 * 36
+3 * 36
+3 * 36
cfn=(780)
calls=36 0x236bf 2014 
* * 35496
+5 * 36
+7 * 36
+7 +1 36
+7 * 36
+3 * 36
cfn=(782)
calls=36 0x209ce 720 
* * 540
+5 * 36
+2 * 36
+3 * 36
+2 * 36
jcnd=36/36 +24 +2 
* * 
+24 +2 36
+7 * 36
+7 * 36
+3 * 36
+3 * 36
cfn=(750)
calls=36 0x22cac 781 
* * 360
+5 * 36
+3 * 36
+7 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(752)
calls=36 0x25c48 845 
* * 2412
+5 +1 36
+7 * 36
+4 * 36
+7 * 36
+4 * 36
+7 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(810)
calls=36 0x25ebc 2329 
* * 6408
+5 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(834) fmt::v5::internal::result_of<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > > (int)>::type fmt::v5::visit<fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >(fmt::v5::arg_formatter<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >&&, fmt::v5::basic_format_arg<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > const&)
calls=36 0x25f3d 782 
* * 139317
+5 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(996)
calls=36 0x25bb6 960 
* * 360
+5 * 36
+4 * 36
+3 * 36
cfn=(998)
calls=36 0x22858 2306 
* * 3240
+5 +1 36
+7 * 36
+7 +1 36
+4 * 36
+9 * 36
jcnd=36/36 +35 * 
* * 
+35 * 36
+7 * 36
+1 * 36
+2 * 36
+1 * 36

fn=(786)
0x26444 1761 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(788)
calls=36 0x28602 +10 
* * 1080
+5 +1 36
+4 * 36
+3 * 36
cfn=(792) fmt::v5::internal::specs_setter<char>::on_zero()
calls=36 0x28752 -56 
* * 432
+5 +1 36
+1 * 36
+1 * 36

fn=(792)
0x28752 1707 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+3 * 36
+7 +1 36
+4 * 36
+3 * 36
+7 +1 36
+1 * 36
+1 * 36

fn=(840) fmt::v5::basic_format_specs<char>::type() const
0x29e88 1239 144
+1 * 144
+3 * 144
+4 * 144
+4 * 144
+4 * 144
+1 * 144

fn=(942) void fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::write_padded<fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::double_writer>(unsigned long, fmt::v5::align_spec const&, fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::double_writer&&)
0x2d606 2782 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+3 * 36
cfn=(944) fmt::v5::align_spec::width() const
calls=36 0x1b724 1218 
* * 252
+5 * 36
+3 +1 36
+3 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(946) fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::reserve(unsigned long)
calls=36 0x20db8 2424 
* * 4464
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(956) void fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::double_writer::operator()<char*>(char*&&)
calls=36 0x3056c 2652 
* * 7560
+5 * 36
jump=36 0x2d7ba +16 
* * 
0x2d7ba +16 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(1002) fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::~basic_writer()
0x1b82c 2410 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(59)
cfn=(1004)
calls=36 0x1e900 270 
* * 2124
+5 * 36
+1 * 36
+1 * 36

fn=(692)
0x1e771 3342 18
+1 * 18
+3 * 18
+1 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
+3 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
+3 * 18
+7 * 18
+7 * 18
+9 * 18
+4 * 18
+2 +3 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
cfn=(694)
calls=18 0x207d0 -53 
* * 3492
+5 +1 18
+7 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
cfn=(714)
calls=18 0x209fd 2147 
* * 224457
+5 +1 18
+7 * 18
+4 * 18
+3 * 18
cfi=(58)
cfn=(812)
calls=18 0x20c94 956 
* * 126
+5 * 18
+3 -2 18
+7 * 18
+3 * 18
cfn=(1048)
calls=18 0x1e752 -57 
* * 594
+5 +2 18
+3 +1 18
+4 * 18
+9 * 18
jcnd=18/18 +38 * 
* * 
+38 * 18
+7 * 18
+1 * 18
+1 * 18

fn=(732) fmt::v5::basic_parse_context<char, fmt::v5::internal::error_handler>::next_arg_id()
0x27b10 1245 36
+1 * 36
+3 * 36
+4 * 36
+4 +1 36
+4 * 36
+3 * 36
+2 * 36
+2 +1 36
+4 * 36
+3 * 36
+3 * 36
+4 * 36
+3 * 36
+2 * 36
cfi=(58)
cfn=(734) std::make_unsigned<int>::type fmt::v5::internal::to_unsigned<int>(int)
calls=36 0x1b5f3 221 
* * 324
+5 * 36
jump=36 +26 +3 
* * 
+26 +3 36
+1 * 36

fn=(778) fmt::v5::internal::specs_setter<char>::specs_setter(fmt::v5::internal::specs_setter<char> const&)
0x285be 1698 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(632)
0x1ea6e 525 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 +1 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90
cob=(10)
cfi=(56)
cfn=(636) std::allocator<char>::allocator(std::allocator<char> const&)
calls=90 0xb2da0 133 
* * 180
* * 90
+5 * 90
+4 * 90
+5 * 90
+5 * 90
+5 * 90
+3 * 90
cfi=(58)
cfn=(638) fmt::v5::internal::basic_buffer<char>::basic_buffer(char*, unsigned long, unsigned long)
calls=90 0x20ef8 384 
* * 1890
+5 * 90
+7 * 90
+4 * 90
+3 +1 90
+4 * 90
+4 * 90
+4 * 90
+5 * 90
+3 * 90
+3 * 90
cfi=(58)
cfn=(640) fmt::v5::internal::basic_buffer<char>::set(char*, unsigned long)
calls=90 0x20f88 388 
* * 1260
+5 +1 90
+1 * 90
+1 * 90

fn=(726)
0x227d8 3304 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(728) fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>::next_arg()
calls=36 0x25bd2 1011 
* * 7200
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
+1 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(774)
0x262c0 1729 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 +1 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(776) fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::specs_handler(fmt::v5::internal::specs_handler<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > const&)
calls=36 -87 +72 
* * 1008
+5 * 36
+4 * 36
+3 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(808)
0x2665a 1718 36
+1 * 36
+3 * 36
+4 * 36
+2 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+1 * 36
+1 * 36

fn=(816)
0x27db0 1476 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(818)
calls=36 0x1e8c4 2702 
* * 3456
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(844) void fmt::v5::internal::handle_float_type_spec<char, fmt::v5::float_spec_handler<char>&>(char, fmt::v5::float_spec_handler<char>&)
0x2d136 1283 36
+1 * 36
+3 * 36
+4 * 36
+2 * 36
+4 * 36
+3 +1 36
+4 * 36
+3 * 36
+2 * 36
+3 * 36
jcnd=36/36 +30 * 
* * 
+30 * 36
+3 * 36
jcnd=18/36 +38 +5 
* * 
+2 * 18
+3 * 18
jcnd=18/18 +9 * 
* * 
+9 * 18
+3 * 18
jcnd=18/18 +35 +8 
* * 
+21 +5 18
+4 * 18
+3 * 18
cfn=(1042) fmt::v5::float_spec_handler<char>::on_exp()
calls=18 0x30346 2830 
* * 180
+5 +1 18
jump=18 +43 +11 
* * 
+2 +2 18
+4 * 18
+3 * 18
cfn=(846)
calls=18 0x30364 2835 
* * 180
+5 +1 18
jump=18 +29 +8 
* * 
+29 +8 36
+1 * 36
+1 * 36

fn=(982)
0x1eada 529 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+7 * 90
+4 * 90
+3 * 90
+4 * 90
+3 * 90
cfn=(984)
calls=90 0x20fb4 -13 
* * 1980
+5 * 90
+4 * 90
+3 * 90
cfi=(58)
cfn=(988) fmt::v5::internal::basic_buffer<char>::~basic_buffer()
calls=90 0x20f42 400 
* * 810
+5 * 90
+4 * 90
+3 * 90
cob=(10)
cfi=(56)
cfn=(644)
calls=90 0xb2db0 139 
* * 180
* * 90
+5 * 90
+1 * 90
+1 * 90

fn=(1042)
0x30346 2830 18
+1 * 18
+3 * 18
+4 +1 18
+4 * 18
+3 * 18
+2 * 18
jcnd=18/18 +10 +2 
* * 
+10 +2 18
+1 * 18
+1 * 18

fn=(770)
0x26242 1806 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +2 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(772)
calls=36 0x285a4 1695 
* * 360
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(776)
0x2628a 1802 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(778)
calls=36 0x285be 1698 
* * 396
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(784)
0x22d1a 740 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+4 * 72
+9 * 72
+4 * 72
+2 +1 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+3 * 72
cfn=(746)
calls=72 0x209a4 -34 
* * 1008
+5 * 72
+4 * 72
+4 +1 72
+4 * 72
+9 * 72
jcnd=72/72 +7 * 
* * 
+7 * 72
+1 * 72

fn=(814)
0x27d8a 389 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(690)
calls=36 0x207b6 -13 
* * 360
+5 * 36
+1 * 36
+1 * 36

fn=(854) fmt::v5::basic_format_specs<char>::flag(unsigned int) const
0x29e9a 1237 72
+1 * 72
+3 * 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+3 * 72
+2 * 72
+3 * 72
+1 * 72

fn=(870) fmt::v5::basic_format_specs<char>::precision() const
0x2a2e2 1238 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+3 * 72
+1 * 72

fn=(940) fmt::v5::align_spec::align() const
0x1b746 1220 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
+1 * 36

fn=(944)
0x1b724 1218 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+2 * 36
+1 * 36

fn=(946)
0x20db8 2424 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(948)
calls=36 0x23eac 677 
* * 4032
+5 +1 36
+1 * 36

fn=(698)
0x20ce2 377 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+3 * 54
+1 * 54

fn=(782)
0x209ce 720 900
+1 * 900
+3 * 900
+4 +1 900
+4 * 900
+3 * 900
+4 * 900
+4 * 900
+3 * 900
+2 * 900
+4 * 900
+3 * 900
+3 * 900
jump=900 +7 +1 
* * 
+7 +1 900
+1 * 900

fn=(800)
0x2653a 1713 36
+1 * 36
+3 * 36
+4 * 36
+3 +1 36
+4 * 36
+3 * 36
+3 * 36
+3 +1 36
+1 * 36
+1 * 36

fn=(838)
0x2a2f4 2857 36
+1 * 36
+3 * 36
+1 * 36
+7 * 36
+7 * 36
+8 * 36
+7 * 36
+9 * 36
+4 * 36
+2 +2 36
+7 * 36
+3 * 36
cfn=(840)
calls=36 0x29e88 1239 
* * 252
+5 * 36
+3 * 36
+7 * 36
+2 * 36
+3 * 36
cfn=(842)
calls=36 0x2d114 -38 
* * 468
+5 +1 36
+7 * 36
+3 * 36
cfn=(840)
calls=36 0x29e88 1239 
* * 252
+5 * 36
+3 * 36
+7 * 36
+3 * 36
+2 * 36
cfn=(844)
calls=36 0x2d136 1283 
* * 1152
+5 +2 36
+7 +3 36
+8 * 36
cfn=(848)
calls=36 0x1b4c0 345 
* * 1296
+5 * 36
+2 * 36
jcnd=36/36 +39 +3 
* * 
+39 +3 36
+7 * 36
+5 * 36
+3 * 36
cfn=(854)
calls=36 0x29e9a 1237 
* * 396
+5 * 36
+2 * 36
jcnd=36/36 +44 +12 
* * 
+44 +12 36
+7 * 36
+7 * 36
+7 * 36
+3 * 36
+4 * 36
+7 * 36
+7 * 36
+4 * 36
+7 * 36
+7 * 36
+6 +4 36
+8 * 36
cfn=(856)
calls=36 0x1e655 337 
* * 1260
+5 * 36
+2 * 36
jcnd=36/36 +52 +2 
* * 
+52 +2 36
+8 * 36
cfn=(860)
calls=36 0x2d39e 326 
* * 1404
+5 * 36
+2 * 36
jcnd=36/36 +52 +3 
* * 
+52 +3 36
+7 * 36
+3 * 36
cob=(10)
cfi=(56)
cfn=(630)
calls=36 0xb2d90 131 
* * 72
* * 36
+5 * 36
+7 * 36
+7 * 36
+3 * 36
+3 * 36
cfn=(632)
calls=36 0x1ea6e 525 
* * 2412
+5 * 36
+7 * 36
+3 * 36
cob=(10)
cfi=(56)
cfn=(644)
calls=36 0xb2db0 139 
* * 72
* * 36
+5 +1 36
+7 * 36
+3 * 36
cfn=(840)
calls=36 0x29e88 1239 
* * 252
+5 * 36
+6 +2 36
cfn=(864)
calls=36 0x1b4b5 290 
* * 180
+5 * 36
+2 * 36
jcnd=36/36 +9 * 
* * 
+9 * 36
+5 -1 36
+3 * 36
+2 * 36
cfn=(850)
calls=36 0x1e646 311 
* * 252
+5 +2 36
+2 * 36
jcnd=36/36 +27 * 
* * 
+27 * 36
+5 -2 36
+2 * 36
jcnd=36/36 0x2a5f1 +10 
* * 
0x2a5f1 +10 36
+7 * 36
+3 * 36
+4 * 36
+7 * 36
+7 * 36
+4 * 36
+7 +1 36
+7 * 36
+6 +1 36
+7 * 36
+7 * 36
+8 * 36
+7 * 36
+3 * 36
+3 * 36
cfn=(866) void fmt::v5::basic_writer<fmt::v5::back_insert_range<fmt::v5::internal::basic_buffer<char> > >::write_double_sprintf<double>(double, fmt::v5::basic_format_specs<char> const&, fmt::v5::internal::basic_buffer<char>&)
calls=36 0x2d40e +24 
* * 105369
+5 +2 36
+7 * 36
+3 * 36
cfi=(58)
cfn=(938)
calls=36 0x1ea5c 406 
* * 252
+5 * 36
+7 +1 36
+7 * 36
+3 * 36
+7 * 36
+3 * 36
+6 +1 36
+7 * 36
+3 * 36
cfn=(940)
calls=36 0x1b746 1220 
* * 252
+5 * 36
+3 * 36
+3 * 36
+2 * 36
+2 +1 36
+7 * 36
jcnd=36/36 0x2a709 +7 
* * 
0x2a709 +7 36
+10 * 36
jump=36 +53 +7 
* * 
+53 +7 36
+7 * 36
+7 * 36
+7 * 36
+6 * 36
+7 * 36
+7 * 36
+7 * 36
+7 * 36
+7 * 36
+7 * 36
+3 * 36
cfn=(942)
calls=36 0x2d606 2782 
* * 13500
+5 -33 36
+7 * 36
+3 * 36
cfn=(982)
calls=36 0x1eada 529 
* * 1908
+5 * 36
jump=36 +31 +34 
* * 
+31 +34 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+7 * 36
+1 * 36
+1 * 36

fn=(850)
0x1e646 311 144
+1 * 144
+3 * 144
+2 * 144
+3 * 144
+4 * 144
+1 * 144

fn=(866)
0x2d40e 2927 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+5 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +4 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(868) fmt::v5::internal::basic_buffer<char>::capacity() const
calls=36 0x23fce 409 
* * 252
+5 * 36
+3 * 36
jcnd=36/36 +33 * 
* * 
+33 * 36
+1 +5 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 +1 36
+4 * 36
+5 * 36
+3 * 36
cfn=(854)
calls=36 0x29e9a 1237 
* * 396
+5 * 36
+2 * 36
jcnd=36/36 +17 +2 
* * 
+17 +2 36
+4 * 36
+3 * 36
cfn=(870)
calls=36 0x2a2e2 1238 
* * 252
+5 * 36
+2 * 36
+3 * 36
+2 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 +3 36
+5 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(872)
calls=36 0x304f0 2695 
* * 288
+5 +1 36
+4 * 36
+3 * 36
cfn=(840)
calls=36 0x29e88 1239 
* * 252
+5 * 36
+2 * 36
+4 * 36
+4 * 36
+4 * 36
+2 +1 36
+4 * 36
+3 +3 36
+8 +2 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(868)
calls=36 0x23fce 409 
* * 252
+5 * 36
+4 +1 36
+4 * 36
+5 * 36
+3 * 36
cfi=(58)
cfn=(874) fmt::v5::internal::basic_buffer<char>::operator[](unsigned long)
calls=36 0x1ed40 443 
* * 360
+5 * 36
+4 +1 36
+4 * 36
+3 * 36
cfn=(870)
calls=36 0x2a2e2 1238 
* * 252
+5 * 36
+2 * 36
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(60)
cfn=(876)
calls=36 0x30504 238 
* * 97557
+5 * 36
+3 +2 36
+4 * 36
+2 +1 36
+3 * 36
+2 * 36
cfi=(58)
cfn=(734)
calls=36 0x1b5f3 221 
* * 324
+5 * 36
+3 +1 36
+3 * 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(868)
calls=36 0x23fce 409 
* * 252
+5 * 36
+3 * 36
+3 * 36
+2 * 36
+2 +1 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(58)
cfn=(934) fmt::v5::internal::basic_buffer<char>::resize(unsigned long)
calls=36 0x1e882 420 
* * 1008
+5 +1 36
+1 +9 36
+1 * 36
+4 * 36
+9 * 36
jcnd=36/36 +73 * 
* * 
+73 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(948)
0x23eac 677 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+4 +1 54
+4 * 54
+3 * 54
cfi=(58)
cfn=(950) fmt::v5::internal::basic_buffer<char>& fmt::v5::internal::get_container<fmt::v5::internal::basic_buffer<char> >(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)
calls=54 0x266f8 967 
* * 1512
+5 * 54
+4 +1 54
+4 * 54
+3 * 54
cfi=(58)
cfn=(938)
calls=54 0x1ea5c 406 
* * 378
+5 * 54
+4 +1 54
+4 * 54
+4 * 54
+3 * 54
+4 * 54
+3 * 54
+3 * 54
cfi=(58)
cfn=(934)
calls=54 0x1e882 420 
* * 1512
+5 +1 54
+4 * 54
+4 * 54
+3 * 54
+3 * 54
cfi=(58)
cfn=(874)
calls=54 0x1ed40 443 
* * 540
+5 * 54
+3 * 54
+4 * 54
+3 * 54
+3 * 54
cfn=(954) char* fmt::v5::internal::make_checked<char>(char*, unsigned long)
calls=54 0x24109 420 
* * 378
+5 +1 54
+1 * 54

fn=(954)
0x24109 420 126
+1 * 126
+3 * 126
+4 * 126
+4 * 126
+4 * 126
+1 * 126

fn=(956)
0x3056c 2652 36
+1 * 36
+3 * 36
+2 * 36
+1 * 36
+4 * 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+2 * 36
jcnd=36/36 +48 +4 
* * 
+48 +4 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(58)
cfn=(958) fmt::v5::internal::basic_buffer<char>::begin()
calls=36 0x34ab4 402 
* * 252
+5 * 36
+3 * 36
+3 * 36
+3 * 36
cfi=(62)
cfn=(960)
calls=36 0x34ac6 799 
* * 6156
+5 * 36
+3 * 36
+4 * 36
+3 +1 36
+1 * 36
+4 * 36
+1 * 36
+2 * 36
+1 * 36

fn=(992)
0x29fe2 1460 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(994)
calls=36 0x2c84a 2420 
* * 252
+5 * 36
+1 * 36

fn=(1000)
0x2283c 1426 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(1002)
calls=36 0x1b82c 2410 
* * 2520
+5 * 36
+1 * 36
+1 * 36

fn=(1156)
0x21316 425 72
+1 * 72
+3 * 72
+1 * 72
+4 * 72
+4 * 72
+4 * 72
+4 +1 72
+4 * 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
cfi=(58)
cfn=(758)
calls=72 0x1e6c5 221 
* * 648
+5 * 72
+3 * 72
+4 +1 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
cfi=(58)
cfn=(936) fmt::v5::internal::basic_buffer<char>::reserve(unsigned long)
calls=72 0x20ca6 +2 
* * 864
+5 +2 72
+4 * 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
cfn=(954)
calls=72 0x24109 -9 
* * 504
+5 * 72
+3 * 72
+4 * 72
+4 -1 72
+3 * 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
cfi=(72)
cfn=(1158)
calls=72 0x2411b 115 
* * 11700
+5 +2 72
+4 * 72
+4 * 72
+4 +1 72
+1 * 72
+4 * 72
+1 * 72
+1 * 72

fl=(10)
fn=(1220) bool std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_not_empty_function<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >(std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> const&)
0xaaa8c 239 18
+1 * 18
+3 * 18
+4 +1 18
+5 * 18
+1 * 18

fn=(1446) std::function<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>::operator()(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&) const
0x814b8 682 541749
+1 * 541749
+3 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+1 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +3 541749
+4 * 541749
+3 * 541749
cfn=(50) std::_Function_base::_M_empty() const
calls=541749 0x1b096 260 
* * 4875741
+5 * 541749
+2 * 541749
jcnd=541749/541749 +7 +2 
* * 
+7 +2 541749
+4 * 541749
+4 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1452)
calls=541749 0x81664 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfn=(1454) std::_Function_handler<void (VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&), std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_invoke(std::_Any_data const&, VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=541749 0xaaaef 295 
* * 132073297339
+2 * 541745
+1 +1 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(1454)
0xaaaef 295 541749
+1 * 541749
+3 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+2 * 541749
+1 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 * 541749
+4 +2 541749
+4 * 541749
+3 * 541749
cfn=(1456) std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_get_pointer(std::_Any_data const&)
calls=541749 0xab23b 151 
* * 14627223
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1448)
calls=541749 0x74c01 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1450)
calls=541749 0x74cbb 74 
* * 3250494
+5 * 541749
+3 * 541749
+4 * 541749
+3 * 541749
cfi=(13)
cfn=(1452)
calls=541749 0x81664 74 
* * 3250494
+5 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
+3 * 541749
cfi=(11)
cfn=(1460)
calls=541749 0xab522 480 
* * 132013704985
+5 +2 541745
+1 * 541745
+4 * 541745
+1 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+2 * 541745
+1 * 541745

fn=(1648) std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
0xab66b 186 17
+1 * 17
+3 * 17
+4 * 17
+4 +2 17
+4 * 17
+3 * 17
cfn=(1318) std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>*& std::_Any_data::_M_access<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>*>()
calls=17 0xab5f0 -96 
* * 255
+5 * 17
+3 * 17
+5 * 17
+3 * 17
cob=(5)
cfi=(4)
cfn=(1650)
calls=17 0x1208e8 0 
* * 1479
+5 +1 17
+1 * 17
+1 * 17

fn=(54) std::_Function_base::_Base_manager<std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()> >::_M_get_pointer(std::_Any_data const&)
0x8c279 151 248
+1 * 248
+3 * 248
+4 * 248
+4 +3 248
+4 * 248
+3 * 248
cfn=(56) std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()>* const& std::_Any_data::_M_access<std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()>*>() const
calls=248 0x8d0f4 -57 
* * 3720
+5 -1 248
+3 * 248
+4 +3 248
+4 +1 248
+1 * 248

fn=(1224) std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_init_functor(std::_Any_data&, std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&&)
0xaaa9b 219 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1222)
calls=18 0xaa10f 99 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1226) std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_init_functor(std::_Any_data&, std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>&&, std::integral_constant<bool, false>)
calls=18 0xab1cc +28 
* * 11016
+5 * 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(56)
0x8d0f4 97 248
+1 * 248
+3 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfn=(58) std::_Any_data::_M_access() const
calls=248 0x1b03a -10 
* * 1488
+5 * 248
+1 * 248

fn=(58)
0x1b03a 88 541997
+1 * 541997
+3 * 541997
+4 * 541997
+4 * 541997
+1 * 541997

fn=(1216)
0xaa11e 666 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+3 * 18
cfn=(1218) std::_Function_base::_Function_base()
calls=18 0x1b048 252 
* * 144
+5 +4 18
+4 * 18
+3 * 18
cfn=(1220)
calls=18 0xaaa8c 239 
* * 108
+5 * 18
+2 * 18
+2 +2 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1222)
calls=18 -67 99 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1224)
calls=18 0xaaa9b 219 
* * 11520
+5 +1 18
+4 * 18
+7 * 18
+4 +1 18
+4 * 18
+7 * 18
+4 +2 18
jump=18 +28 * 
* * 
+28 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(1226)
0xab1cc 248 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(1222)
calls=18 0xaa10f 99 
* * 108
+5 * 18
+3 * 18
+5 * 18
cob=(5)
cfi=(4)
cfn=(1228)
calls=18 0x1208f0 0 
* * 1080
+5 * 18
+3 * 18
+3 * 18
+3 * 18
cfi=(11)
cfn=(1230)
calls=18 0xabd04 472 
* * 9072
+5 * 18
+4 * 18
+3 * 18
cfn=(1318)
calls=18 0xab5f0 92 
* * 270
+5 * 18
+3 * 18
jump=18 +29 * 
* * 
+29 * 18
+4 * 18
+1 * 18
+2 * 18
+1 * 18

fn=(1642)
0xa9dc6 370 17
+1 * 17
+3 * 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
cfn=(1644) std::_Function_base::~_Function_base()
calls=17 0x1b060 254 
* * 2805
+5 * 17
+1 * 17
+1 * 17

fn=(48)
0x899e8 682 248
+1 * 248
+3 * 248
+4 * 248
+4 +3 248
+4 * 248
+3 * 248
cfn=(50)
calls=248 0x1b096 260 
* * 2232
+5 * 248
+2 * 248
jcnd=248/248 +7 +2 
* * 
+7 +2 248
+4 * 248
+4 * 248
+4 * 248
+3 * 248
cfn=(52) std::_Function_handler<void (), std::_Bind<void (spdlog::details::registry::*(spdlog::details::registry*))()> >::_M_invoke(std::_Any_data const&)
calls=248 0x8b325 295 
* * 534700
+2 * 248
+1 +1 248
+1 * 248

fn=(1320) std::_Any_data::_M_access()
0x1b02c 87 35
+1 * 35
+3 * 35
+4 * 35
+4 * 35
+1 * 35

fn=(1456)
0xab23b 151 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +3 541749
+4 * 541749
+3 * 541749
cfn=(1458) std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>* const& std::_Any_data::_M_access<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)>*>() const
calls=541749 0xabd5e -57 
* * 8126235
+5 -1 541749
+3 * 541749
+4 +3 541749
+4 +1 541749
+1 * 541749

fn=(1318)
0xab5f0 92 35
+1 * 35
+3 * 35
+4 * 35
+4 +1 35
+4 * 35
+3 * 35
cfn=(1320)
calls=35 0x1b02c -6 
* * 210
+5 * 35
+1 * 35

fn=(1458)
0xabd5e 97 541749
+1 * 541749
+3 * 541749
+4 * 541749
+4 +1 541749
+4 * 541749
+3 * 541749
cfn=(58)
calls=541749 0x1b03a -10 
* * 3250494
+5 * 541749
+1 * 541749

fn=(1644)
0x1b060 254 17
+1 * 17
+3 * 17
+4 * 17
+4 +2 17
+4 * 17
+4 * 17
+3 * 17
+2 +1 17
+4 * 17
+4 * 17
+4 * 17
+4 * 17
+5 * 17
+3 * 17
cfn=(1646) std::_Function_base::_Base_manager<std::_Bind<void (MomentSolver::*(MomentSolver*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>))(VectorSpace::Matrix<double>&, VectorSpace::Matrix<double> const&, VectorSpace::Matrix<double> const&, VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
calls=17 0xaab96 -64 
* * 2499
+2 +1 17
+1 * 17
+1 * 17

fn=(50)
0x1b096 260 541997
+1 * 541997
+3 * 541997
+4 * 541997
+4 * 541997
+4 * 541997
+3 * 541997
+3 * 541997
+1 * 541997

fn=(1218)
0x1b048 252 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+8 * 18
+1 * 18
+1 * 18

fn=(1646)
0xaab96 193 17
+1 * 17
+3 * 17
+1 * 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+9 * 17
+4 * 17
+2 +3 17
+3 * 17
+3 * 17
+2 * 17
+3 * 17
jcnd=17/17 +8 * 
* * 
+8 * 17
+3 * 17
+2 * 17
+3 * 17
jcnd=17/17 +84 +16 
* * 
+84 +16 17
+4 * 17
+3 * 17
cfn=(1648)
calls=17 0xab66b -26 
* * 1972
+5 +1 17
+1 +2 17
+5 +1 17
+4 * 17
+9 * 17
jcnd=17/17 +7 * 
* * 
+7 * 17
+4 * 17
+1 * 17
+1 * 17

fn=(52)
0x8b325 295 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+3 * 248
cfn=(54)
calls=248 0x8c279 151 
* * 6696
+5 * 248
+3 * 248
cfi=(11)
cfn=(60)
calls=248 0x8c2a4 480 
* * 525028
+5 +2 248
+1 * 248
+1 * 248

fl=(65)
fn=(1032)
0x23f1d 419 180
+1 * 180
+3 * 180
+4 +1 180
+4 * 180
+1 * 180

fn=(1034)
0x23f2b 420 90
+1 * 90
+3 * 90
+2 * 90
+1 * 90
+4 * 90
+4 * 90
+4 * 90
fi=(64)
+4 +2 90
+4 * 90
+3 * 90
cfn=(972)
calls=90 0x2674e 277 
* * 540
+5 * 90
+3 * 90
+4 * 90
+3 * 90
cfn=(1038)
calls=90 0x26740 277 
* * 540
+5 * 90
+3 * 90
+4 * 90
+3 * 90
cfn=(1038)
calls=90 0x26740 277 
* * 540
+5 * 90
+3 * 90
+3 * 90
+3 * 90
cfn=(1040)
calls=90 0x2675c -47 
* * 4698
+5 +3 90
+4 * 90
+1 * 90
+2 * 90
+1 * 90
fe=(65)

fn=(970)
0x3c192 420 36
+1 * 36
+3 * 36
+2 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
fi=(64)
+4 +2 36
+4 * 36
+3 * 36
cfn=(972)
calls=36 0x2674e 277 
* * 216
+5 * 36
+3 * 36
+4 * 36
+3 * 36
cfn=(972)
calls=36 0x2674e 277 
* * 216
+5 * 36
+3 * 36
+4 * 36
+3 * 36
cfn=(972)
calls=36 0x2674e 277 
* * 216
+5 * 36
+3 * 36
+3 * 36
+3 * 36
cfn=(976)
calls=36 0x3d0df -47 
* * 1836
+5 +3 36
+4 * 36
+1 * 36
+2 * 36
+1 * 36
fe=(65)

fn=(1376)
0x5a29f 419 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+1 * 36

fn=(1378)
0x5a2ad 420 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
fi=(64)
+4 +2 18
+4 * 18
+3 * 18
cfn=(1380)
calls=18 0x5a4c1 277 
* * 108
+5 * 18
+3 * 18
+4 * 18
+3 * 18
cfi=(24)
cfn=(1384)
calls=18 0x5a4a4 987 
* * 288
+5 * 18
+3 * 18
+4 * 18
+3 * 18
cfi=(24)
cfn=(1384)
calls=18 0x5a4a4 987 
* * 288
+5 * 18
+3 * 18
+3 * 18
+3 * 18
cfn=(1388)
calls=18 0x5a4cf -47 
* * 1472184
+5 +3 18
+4 * 18
+1 * 18
+2 * 18
+1 * 18
fe=(65)

fn=(968)
0x3c184 419 72
+1 * 72
+3 * 72
+4 +1 72
+4 * 72
+1 * 72

fl=(19)
fn=(104)
0x6cfc2 341 496
+1 * 496
+3 * 496
+4 * 496
+4 * 496
+4 +1 496
+4 * 496
+4 * 496
+3 * 496
+3 * 496
cfn=(106) std::__detail::_Node_iterator_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>*)
calls=496 0x6ff8e -47 
* * 4960
+5 * 496
+1 * 496
+1 * 496

fn=(114)
0x8a04a 345 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+3 * 496
+3 * 496
cfn=(116) std::__detail::_Hash_node_value_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >::_M_v()
calls=496 0x69f6c 245 
* * 16864
+5 * 496
+1 * 496

fn=(106)
0x6ff8e 295 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+4 * 496
+3 * 496
+1 * 496
+1 * 496

fn=(112)
0x8a00a 312 744
+1 * 744
+3 * 744
+4 * 744
+4 +3 744
+4 * 744
+3 * 744
+4 * 744
+3 * 744
+3 * 744
+3 * 744
+1 * 744

fn=(118) std::__detail::_Hash_node_value_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >::_M_valptr()
0x69e88 237 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+4 * 496
+3 * 496
cfi=(20) /usr/include/c++/8.2.1/ext/aligned_buffer.h
cfn=(120) __gnu_cxx::__aligned_buffer<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >::_M_ptr()
calls=496 0x6cfe8 113 
* * 7440
+5 * 496
+1 * 496

fn=(116)
0x69f6c 245 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+3 * 496
cfn=(118)
calls=496 0x69e88 -9 
* * 12400
+5 * 496
+1 * 496

fn=(182) std::__detail::_Node_iterator_base<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>::_M_incr()
0x8b240 299 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+3 * 496
+3 * 496
cfn=(184) std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> >, true>::_M_next() const
calls=496 0x6d098 -30 
* * 3472
+5 * 496
+3 * 496
+4 * 496
+3 * 496
+1 * 496
+1 * 496

fn=(184)
0x6d098 270 496
+1 * 496
+3 * 496
+4 +1 496
+4 * 496
+3 * 496
+1 * 496

fn=(180)
0x8a02c 353 496
+1 * 496
+3 * 496
+4 * 496
+4 +2 496
+4 * 496
+3 * 496
cfn=(182)
calls=496 0x8b240 -56 
* * 10416
+5 +1 496
+4 +1 496
+1 * 496

fl=(34)
fn=(1394) Settings::GetNStates() const
0xb3018 161 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+6 * 18
+1 * 18

fn=(1392) Settings::GetNQuadPoints() const
0xb32f0 185 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+6 * 18
+1 * 18

fn=(232)
0xb332c 188 215290
+1 * 215290
+3 * 215290
+4 * 215290
+4 * 215290
+8 * 215290
+1 * 215290

fn=(536)
0xb3318 187 38157
+1 * 38157
+3 * 38157
+4 * 38157
+4 * 38157
+6 * 38157
+1 * 38157

fl=(58)
fn=(662) fmt::v5::internal::value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::value(double)
0xaccfc 554 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+4 * 36
+5 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(672)
0x1b85e 279 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
cfn=(674) fmt::v5::internal::length(char const*)
calls=18 0x1b24b -46 
* * 612
+5 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(696)
0x1b266 468 36
+1 * 36
+3 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(744) fmt::v5::basic_format_arg<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::operator bool() const
0x29d6c 761 36
+1 * 36
+3 * 36
+4 +1 36
+4 * 36
+3 * 36
+2 * 36
+3 +1 36
+1 * 36

fn=(1056)
0x4e01a 415 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36

fn=(650)
0xab925 1132 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(652) fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double>::format_arg_store(double const&, double const&)
calls=18 0xac106 -20 
* * 3960
+5 +1 18
+4 * 18
+1 * 18

fn=(664)
0xab964 1239 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
cfi=(13)
cfn=(666)
calls=18 -42 74 
* * 108
+5 * 18
+3 * 18
+3 * 18
cfn=(668) fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::basic_format_args<double, double>(fmt::v5::format_arg_store<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, double> const&)
calls=18 0xac15e -36 
* * 450
+5 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(718)
0x1b84c 295 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+1 * 18

fn=(804)
0x1b281 508 36
+1 * 36
+3 * 36
+4 * 36
+3 +1 36
+4 * 36
jcnd=36/36 +33 +1 
* * 
+33 +1 36
+3 * 36
+2 * 36
+2 * 36
+3 * 36
+3 * 36
jcnd=36/36 +9 * 
* * 
+9 * 36
+5 +1 36
+1 * 36

fn=(874)
0x1ed40 443 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+3 * 90
+1 * 90

fn=(952) fmt::v5::internal::basic_buffer<char>& fmt::v5::internal::get_container<fmt::v5::internal::basic_buffer<char> >(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)::accessor::accessor(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >)
0x266de 970 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+4 * 54
+4 * 54
+3 * 54
+1 * 54
+1 * 54

fn=(640)
0x20f88 388 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 +1 90
+4 * 90
+4 * 90
+4 +1 90
+4 * 90
+4 * 90
+4 +1 90
+1 * 90
+1 * 90

fn=(648)
0xab91a 1350 18
+1 * 18
+3 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(660) fmt::v5::internal::init<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, (fmt::v5::internal::type)8>::operator fmt::v5::internal::value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >() const
0xacc48 604 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfn=(662)
calls=36 0xaccfc -50 
* * 360
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(668)
0xac15e 1204 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+7 +1 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(670) fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::set_data(fmt::v5::internal::value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > const*)
calls=18 0x26ac4 -34 
* * 180
+5 +1 18
+1 * 18
+1 * 18

fn=(736) fmt::v5::internal::context_base<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, char>::do_get_arg(unsigned int)
0x27b5c 930 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
cfn=(738) fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::get(unsigned int) const
calls=36 0x29cd6 1220 
* * 3636
+5 +1 36
+4 * 36
+3 * 36
cfn=(744)
calls=36 0x29d6c 761 
* * 324
+5 * 36
+3 * 36
+2 * 36
jcnd=36/36 +21 +2 
* * 
+21 +2 36
+1 +1 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(756) fmt::v5::basic_string_view<char>::begin() const
0x1e958 297 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+3 * 72
+1 * 72

fn=(812)
0x20c94 956 72
+1 * 72
+3 * 72
+4 * 72
+4 * 72
+4 * 72
+1 * 72

fn=(868)
0x23fce 409 108
+1 * 108
+3 * 108
+4 * 108
+4 * 108
+4 * 108
+1 * 108

fn=(938)
0x1ea5c 406 144
+1 * 144
+3 * 144
+4 * 144
+4 * 144
+4 * 144
+1 * 144

fn=(958)
0x34ab4 402 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36

fn=(988)
0x20f42 400 90
+1 * 90
+3 * 90
+4 * 90
+7 * 90
+4 * 90
+3 * 90
+1 * 90
+1 * 90

fn=(700)
0x22676 1007 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+3 * 18
cfn=(702) fmt::v5::internal::context_base<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, char>::context_base(std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, fmt::v5::basic_string_view<char>, fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >)
calls=18 0x25ac6 -84 
* * 1404
+5 * 18
+4 * 18
+4 * 18
+3 * 18
cfn=(708) fmt::v5::internal::arg_map<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::arg_map()
calls=18 0x25b5c 897 
* * 180
+5 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(742) fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::type(unsigned int) const
0x2ebfe 1163 36
+1 * 36
+3 * 36
+4 * 36
+3 +1 36
+3 * 36
+3 * 36
+3 +1 36
+8 +2 36
+4 * 36
+3 * 36
+3 * 36
+4 * 36
+2 * 36
+3 * 36
+3 * 36
+3 * 36
+3 * 36
+2 * 36
+3 * 36
+3 +1 36
+1 * 36

fn=(768)
0x26278 765 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
+1 * 36

fn=(986)
0x1eb48 412 108
+1 * 108
+3 * 108
+4 * 108
+4 * 108
+4 * 108
+1 * 108

fn=(996)
0x25bb6 960 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+4 * 54
+4 * 54
+4 * 54
+1 * 54
+1 * 54

fn=(1050)
0x1e732 979 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfn=(1052) fmt::v5::internal::arg_map<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::~arg_map()
calls=18 0x20874 -80 
* * 198
+5 * 18
+1 * 18
+1 * 18

fn=(654) std::enable_if<true, fmt::v5::internal::value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> > >::type fmt::v5::internal::make_arg<true, fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double>(double const&)
0xac73f 1055 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
cfn=(656) fmt::v5::internal::init<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, (fmt::v5::internal::type)8> fmt::v5::internal::make_value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >(double)
calls=36 0xac6f5 653 
* * 1044
+5 * 36
+5 * 36
+4 * 36
+5 * 36
+5 * 36
+4 * 36
+3 * 36
cfn=(660)
calls=36 0xacc48 604 
* * 1296
+5 * 36
+3 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 +1 36
+3 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(670)
0x26ac4 1172 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(710)
0x226f0 759 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+5 * 18
+3 * 18
cfn=(712) fmt::v5::internal::value<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::value(int)
calls=18 -48 550 
* * 180
+5 * 18
+4 * 18
+7 * 18
+1 * 18
+1 * 18

fn=(740) fmt::v5::basic_format_args<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char> >::do_get(unsigned int) const
0x2c48a 1175 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+7 * 36
+8 * 36
+8 * 36
+8 +1 36
+4 * 36
+3 * 36
+4 +1 36
+5 * 36
jcnd=36/36 +71 +7 
* * 
+71 +7 36
+4 * 36
+2 +2 36
+3 * 36
+4 * 36
+2 * 36
+3 * 36
cfn=(742)
calls=36 0x2ebfe -24 
* * 792
+5 * 36
+2 * 36
+4 * 36
+3 +1 36
+4 * 36
+3 * 36
+2 * 36
+2 +2 36
+4 * 36
+4 +1 36
+4 * 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
+4 +1 36
+1 * 36
jump=36 +9 +1 
* * 
+9 +1 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(834)
0x25f3d 782 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+3 * 36
+3 * 36
+6 * 36
+2 * 36
+8 * 36
+7 * 36
+3 * 36
+2 * 36
+7 * 36
+3 * 36
jump=36 0x26053 +19 
* * 
0x26053 +19 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(57)
cfn=(836)
calls=36 0x280dc 1503 
* * 138129
+5 * 36
jump=36 0x2613f +14 
* * 
0x2613f +14 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36

fn=(1052)
0x20874 899 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
jcnd=18/18 +17 * 
* * 
+17 * 18
+1 * 18
+1 * 18

fn=(638)
0x20ef8 384 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 * 90
+4 +1 90
+7 * 90
+4 * 90
+3 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+4 * 90
+1 * 90
+1 * 90

fn=(656)
0xac6f5 653 36
+1 * 36
+3 * 36
+4 * 36
+5 * 36
+9 * 36
+4 * 36
+2 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(658) fmt::v5::internal::init<fmt::v5::basic_format_context<std::back_insert_iterator<fmt::v5::internal::basic_buffer<char> >, char>, double, (fmt::v5::internal::type)8>::init(double const&)
calls=36 0xacc28 -50 
* * 396
+5 * 36
+5 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(708)
0x25b5c 897 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+7 * 18
+4 * 18
+7 * 18
+1 * 18
+1 * 18

fn=(734)
0x1b5f3 221 72
+1 * 72
+3 * 72
+4 * 72
+3 +1 72
+4 * 72
jcnd=72/72 +33 +1 
* * 
+33 +1 72
+3 +1 72
+1 * 72

fn=(752)
0x25c48 845 72
+1 * 72
+3 * 72
+1 * 72
+4 * 72
+4 * 72
+4 +1 72
+4 * 72
+4 * 72
+3 * 72
cfn=(754) fmt::v5::basic_parse_context<char, fmt::v5::internal::error_handler>::begin() const
calls=72 0x27bda -9 
* * 1152
+5 * 72
+3 * 72
+4 * 72
+3 * 72
+3 * 72
cfn=(758)
calls=72 0x1e6c5 221 
* * 648
+5 * 72
+3 * 72
+3 * 72
cfn=(760) fmt::v5::basic_string_view<char>::remove_prefix(unsigned long)
calls=72 0x27bf4 300 
* * 1368
+5 +1 72
+1 * 72
+4 * 72
+1 * 72
+1 * 72

fn=(704) fmt::v5::basic_parse_context<char, fmt::v5::internal::error_handler>::basic_parse_context(fmt::v5::basic_string_view<char>, fmt::v5::internal::error_handler)
0x27a86 831 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(706) fmt::v5::internal::error_handler::error_handler(fmt::v5::internal::error_handler const&)
calls=18 0x1b272 469 
* * 126
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+4 * 18
+4 * 18
+7 * 18
+1 * 18
+1 * 18

fn=(716)
0x20992 292 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+3 * 18
+1 * 18

fn=(730)
0x25c3a 945 72
+1 * 72
+3 * 72
+4 +1 72
+4 +1 72
+1 * 72

fn=(934)
0x1e882 420 90
+1 * 90
+3 * 90
+4 * 90
+4 * 90
+4 +1 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90
cfn=(936)
calls=90 0x20ca6 +8 
* * 1080
+5 +1 90
+4 * 90
+4 * 90
+4 +1 90
+1 * 90
+1 * 90

fn=(652)
0xac106 1113 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+3 * 18
cfn=(654)
calls=18 0xac73f -59 
* * 1728
+5 * 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfn=(654)
calls=18 0xac73f -59 
* * 1728
+5 * 18
+3 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(658)
0xacc28 603 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(706)
0x1b272 469 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(712)
0x226d8 550 18
+1 * 18
+3 * 18
+4 * 18
+3 * 18
+4 * 18
+3 * 18
+2 * 18
+1 * 18
+1 * 18

fn=(758)
0x1e6c5 221 162
+1 * 162
+3 * 162
+4 * 162
+4 +1 162
+5 * 162
jcnd=162/162 +33 +1 
* * 
+33 +1 162
+4 +1 162
+1 * 162

fn=(764)
0x25ca8 782 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+3 * 36
+3 * 36
+6 * 36
+2 * 36
+8 * 36
+7 * 36
+3 * 36
+2 * 36
+7 * 36
+3 * 36
jump=36 0x25dbd +19 
* * 
0x25dbd +19 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(57)
cfn=(766)
calls=36 0x27ca4 1631 
* * 252
+5 * 36
jump=36 0x25ea6 +14 
* * 
0x25ea6 +14 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(790)
0x1b2ce 513 36
+1 * 36
+3 * 36
+4 * 36
+3 +1 36
+4 * 36
jcnd=36/36 +33 +1 
* * 
+33 +1 36
+3 * 36
+2 * 36
+2 * 36
+3 * 36
+3 * 36
+2 * 36
+5 * 36
jump=36 +7 +1 
* * 
+7 +1 36
+1 * 36

fn=(674)
0x1b24b 234 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cob=(5)
cfi=(4)
cfn=(676)
calls=18 0x120920 0 
* * 450
+5 * 18
+1 * 18

fn=(702)
0x25ac6 925 18
+1 * 18
+3 * 18
+1 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +2 18
+4 * 18
+4 * 18
+3 * 18
cfn=(696)
calls=18 0x1b266 468 
* * 108
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
cfn=(704)
calls=18 0x27a86 -96 
* * 576
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+4 * 18
+1 * 18
+1 * 18

fn=(728)
0x25bd2 1011 36
+1 * 36
+3 * 36
+1 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+4 * 36
+3 * 36
cfn=(730)
calls=36 +61 -67 
* * 216
+5 * 36
+3 * 36
cfi=(57)
cfn=(732)
calls=36 0x27b10 1245 
* * 972
+5 * 36
+2 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(736)
calls=36 0x27b5c -82 
* * 5004
+5 +1 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+4 * 36
+1 * 36
+1 * 36

fn=(738)
0x29cd6 1220 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+9 * 36
+4 * 36
+2 +1 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(740)
calls=36 0x2c48a -46 
* * 2700
+5 +1 36
+4 * 36
+3 * 36
+3 * 36
jcnd=36/36 +57 +2 
* * 
+57 +2 36
+1 +1 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fn=(754)
0x27bda 837 72
+1 * 72
+3 * 72
+4 * 72
+4 +1 72
+4 * 72
+3 * 72
cfn=(756)
calls=72 0x1e958 297 
* * 504
+5 +1 72
+1 * 72

fn=(760)
0x27bf4 300 72
+1 * 72
+3 * 72
+4 * 72
+4 +1 72
+4 * 72
+3 * 72
+4 * 72
+3 * 72
+4 * 72
+3 +1 72
+4 * 72
+4 * 72
+4 * 72
+3 * 72
+4 * 72
+4 +1 72
+1 * 72
+1 * 72

fn=(936)
0x20ca6 429 162
+1 * 162
+3 * 162
+4 * 162
+4 * 162
+4 +1 162
+4 * 162
+4 * 162
+4 * 162
jcnd=162/162 +28 +2 
* * 
+28 +2 162
+1 * 162
+1 * 162

fn=(950)
0x266f8 967 54
+1 * 54
+3 * 54
+4 * 54
+4 * 54
+9 * 54
+4 * 54
+2 +6 54
+4 * 54
+4 * 54
+3 * 54
+3 * 54
cfn=(952)
calls=54 -67 -3 
* * 540
+5 * 54
+4 +1 54
+4 * 54
+9 * 54
jcnd=54/54 +7 * 
* * 
+7 * 54
+1 * 54

fl=(16)
fn=(588)
0x884e4 125 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+1 * 248

fn=(86)
0x613c0 161 1028
+1 * 1028
+3 * 1028
+4 * 1028
+4 * 1028
+4 * 1028
+4 * 1028
+4 * 1028
+3 +1 1028
+4 * 1028
+3 * 1028
+3 * 1028
cfn=(88) std::mutex::lock()
calls=1028 0x5d34a -61 
* * 67848
+5 * 1028
+1 * 1028
+1 * 1028

fn=(540)
0x89836 194 248
+1 * 248
+3 * 248
+4 * 248
+4 * 248
+4 +1 248
+4 * 248
+3 * 248
cfi=(13)
cfn=(542)
calls=248 0x8ac20 47 
* * 1488
+5 * 248
+3 * 248
+4 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+3 * 248
cfn=(544) std::unique_lock<std::mutex>::lock()
calls=248 0x8ac2e +62 
* * 21576
+5 +1 248
+4 * 248
+4 +1 248
+1 * 248
+1 * 248

fn=(190) std::unique_lock<std::mutex>::unlock()
0x8ac80 317 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+4 * 248
+3 * 248
+2 * 248
jcnd=248/248 +12 +2 
* * 
+12 +2 248
+4 * 248
+3 * 248
+3 * 248
+2 +2 248
+4 * 248
+3 * 248
+3 * 248
cfn=(162) std::mutex::unlock()
calls=248 0x5d378 118 
* * 17856
+5 +1 248
+4 * 248
+4 +2 248
+1 * 248
+1 * 248

fn=(586)
0x8d7e2 352 248
+1 * 248
+3 * 248
+4 +1 248
+4 * 248
+3 * 248
+1 * 248

fn=(88)
0x5d34a 101 1276
+1 * 1276
+3 * 1276
+4 * 1276
+4 +2 1276
+4 * 1276
+3 * 1276
cfi=(2)
cfn=(90)
calls=1276 0x5d01d 746 
* * 67628
+5 * 1276
+3 +3 1276
+4 * 1276
jcnd=1276/1276 +12 +2 
* * 
+12 +2 1276
+1 * 1276
+1 * 1276

fn=(188)
0x8987c 229 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+4 * 248
+2 * 248
+2 +1 248
+4 * 248
+3 * 248
cfn=(190)
calls=248 0x8ac80 +85 
* * 23312
+5 +1 248
+1 * 248
+1 * 248

fn=(544)
0x8ac2e 259 248
+1 * 248
+3 * 248
+4 * 248
+4 +2 248
+4 * 248
+3 * 248
+3 * 248
jcnd=248/248 +12 +2 
* * 
+12 +2 248
+4 * 248
+4 * 248
+2 * 248
jcnd=248/248 +12 +4 
* * 
+12 +4 248
+4 * 248
+3 * 248
+3 * 248
cfn=(88)
calls=248 0x5d34a 101 
* * 16368
+5 +1 248
+4 * 248
+4 +2 248
+1 * 248
+1 * 248

fn=(160)
0x613ee 167 1028
+1 * 1028
+3 * 1028
+4 * 1028
+4 +1 1028
+4 * 1028
+3 * 1028
+3 * 1028
cfn=(162)
calls=1028 0x5d378 -50 
* * 59624
+5 * 1028
+1 * 1028
+1 * 1028

fn=(162)
0x5d378 118 1276
+1 * 1276
+3 * 1276
+4 * 1276
+4 +3 1276
+4 * 1276
+3 * 1276
cfi=(2)
cfn=(164)
calls=1276 0x5d04c 776 
* * 64720
+5 +1 1276
+1 * 1276
+1 * 1276

fl=(71)
fn=(1148) spdlog::details::v_formatter::format(spdlog::details::log_msg const&, tm const&, fmt::v5::basic_memory_buffer<char, 500ul, std::allocator<char> >&)
0x5e5fe 402 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 +2 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(66)
cfn=(1150)
calls=36 0x61541 28 
* * 10008
+5 +1 36
+1 * 36
+1 * 36

fn=(1088)
0x5ede4 562 36
+1 * 36
+3 * 36
+1 * 36
+7 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +3 36
+4 * 36
+4 * 36
+3 * 36
cfi=(8)
cfn=(32)
calls=36 0x5cf76 +74 
* * 252
+5 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(8)
cfn=(568)
calls=36 0x5cf87 193 
* * 2088
+5 * 36
+4 +1 36
+4 * 36
+7 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(8)
cfn=(1090)
calls=36 0x61f05 +5 
* * 2088
+5 * 36
+2 * 36
+2 +2 36
+4 * 36
+7 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfn=(1094) spdlog::pattern_formatter::get_time_(spdlog::details::log_msg const&)
calls=36 0x5efa0 +21 
* * 29556
+5 * 36
+7 * 36
+7 * 36
+4 * 36
+4 * 36
+7 * 36
+7 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+7 +1 36
+4 * 36
+4 * 36
+7 +3 36
+4 * 36
+6 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(23)
cfn=(1122)
calls=36 0x623e6 698 
* * 1044
+5 * 36
+4 * 36
+4 * 36
+3 * 36
cfi=(23)
cfn=(1126)
calls=36 0x6242e 716 
* * 1080
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(24)
cfn=(1128)
calls=36 0x6247a 884 
* * 1152
-14 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(24)
cfn=(1128)
calls=36 0x6247a 884 
* * 1152
+5 * 72
+2 * 72
jcnd=36/72 +82 +5 
* * 
+2 * 36
+4 * 36
+3 * 36
cfi=(24)
cfn=(1132)
calls=36 0x624d6 796 
* * 252
+5 * 36
+4 +2 36
+4 * 36
+3 * 36
cfi=(59)
cfn=(1134)
calls=36 0x624e8 334 
* * 2196
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
cfn=(1148)
calls=36 0x5e5fe 402 
* * 10620
+3 -2 36
+4 * 36
+3 * 36
cfi=(24)
cfn=(1162)
calls=36 0x624b6 804 
* * 396
+5 * 36
jump=36 0x5eeef * 
* * 
+2 +5 36
+4 * 36
+4 * 36
+3 * 36
cfi=(73)
cfn=(1164)
calls=36 0x614d2 807 
* * 2412
+5 * 36
+4 * 36
+3 * 36
+3 * 36
+3 * 36
+3 * 36
+3 * 36
+3 * 36
cfi=(66)
cfn=(1150)
calls=36 0x61541 28 
* * 10188
+5 +1 36
+1 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+7 * 36
+1 * 36
+1 * 36

fn=(1094)
0x5efa0 589 36
+1 * 36
+3 * 36
+4 * 36
+4 * 36
+4 * 36
+4 * 36
+9 * 36
+4 * 36
+2 +2 36
+4 * 36
+3 * 36
+2 * 36
+2 +2 36
+4 * 36
+4 * 36
+3 * 36
cfi=(8)
cfn=(1096)
calls=36 0x5cfa1 836 
* * 3456
+5 * 36
+4 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(69)
cfn=(1098)
calls=36 0x1cd0a 74 
* * 25020
+5 * 36
jump=36 +41 +3 
* * 
+41 +3 36
+4 * 36
+4 * 36
+9 * 36
jcnd=36/36 +7 * 
* * 
+7 * 36
+1 * 36

fl=(77)
fn=(1410)
0x80ac4 13 72
+1 * 72
+3 * 72
+2 * 72
+1 * 72
+7 * 72
+7 * 72
+9 * 72
+4 * 72
+2 * 72
+7 * 72
+3 * 72
cfi=(37)
cfn=(1412)
calls=72 0x656da +38 
* * 864
+5 * 72
+7 * 72
+3 * 72
+6 * 72
+7 * 72
+4 * 72
+7 +1 72
+6 * 72
+2 * 72
jcnd=72/72 +41 -1 
* * 
+2 -1 68
+7 * 68
+3 * 68
cfi=(37)
cfn=(246)
calls=68 0x4b54e +69 
* * 2295
+5 * 68
+4 * 68
+9 * 68
jcnd=68/68 0x81426 * 
* * 
+11 * 72
cob=(3)
cfi=(48)
cfn=(1416)
calls=72 0xe0c0 238 
* * 576
* * 72
+5 * 72
+3 * 72
cob=(3)
cfi=(48)
cfn=(1420)
calls=72 0xe0e0 245 
* * 288
* * 72
+5 * 72
+2 * 72
+2 * 72
+5 * 72
+3 * 72
+2 * 72
+2 * 72
+5 * 72
+3 * 72
+2 * 72
+2 * 72
+6 * 72
+3 * 72
+2 * 72
+2 * 72
+3 * 72
+2 * 72
+2 * 72
+6 +2 72
+6 * 72
+7 * 72
+4 * 72
+3 * 72
+3 * 72
cfi=(23)
cfn=(1422)
calls=72 0x585e4 930 
* * 792
-23 * 181401
+6 * 181401
+7 * 181401
+4 * 181401
+3 * 181401
+3 * 181401
cfi=(23)
cfn=(1422)
calls=181401 0x585e4 930 
* * 1995411
+5 * 181473
+3 * 181473
+7 +1 181473
+4 * 181473
+7 * 181473
+3 * 181473
+3 * 181473
cfi=(40)
cfn=(1424)
calls=181473 0x57ef4 +29 
* * 29398626
+5 +1 181473
+7 * 181473
+3 * 181473
cfi=(40)
cfn=(1428)
calls=181473 0x57e7c +18 
* * 1270311
+5 * 181473
+2 * 181473
jcnd=4489/181473 0x80f2b +1 
* * 
+6 * 176984
jump=176984 +38 +26 
* * 
+2 * 181469
+4 * 181469
+3 * 181469
cfi=(31)
cfn=(1610)
calls=181469 0x583fc +72 
* * 19825093
+5 * 181469
+4 * 181469
+7 * 181469
+6 * 181469
jcnd=181401/181469 0x80b8d -2 
* * 
+2 * 68
jump=68 0x80b23 -4 
* * 
+5 +26 180584
+7 * 180584
+4 * 180584
+5 * 180584
+3 * 180584
cfi=(23)
cfn=(250)
calls=180584 0x65afe 930 
* * 1986424
+5 * 180584
+3 * 180584
cfi=(37)
cfn=(264)
calls=180584 0x20560 203 
* * 1264088
+5 * 180584
+3 * 180584
+7 * 180584
+4 * 180584
+5 * 180584
+3 * 180584
cfi=(23)
cfn=(250)
calls=180584 0x65afe 930 
* * 1986424
+5 * 180584
+3 * 180584
cfi=(37)
cfn=(276)
calls=180584 0x4b468 201 
* * 1264088
+5 * 180584
+2 * 180584
+4 * 180584
+4 * 180584
+3 * 180584
+2 * 180584
+3 * 180584
cfi=(37)
cfn=(282)
calls=180584 0x205d6 +21 
* * 96431856
+5 +1 180584
+10 * 180584
+4 * 180584
+3 * 180584
cfi=(31)
cfn=(1430)
calls=180584 0x5898e 238 
* * 1264088
-7 * 541745
+4 * 541745
+3 * 541745
cfi=(31)
cfn=(1430)
calls=541745 0x5898e 238 
* * 3792215
+5 * 722329
+6 * 722329
+3 * 722329
+2 * 722329
jcnd=541749/722329 0x80d65 +1 
* * 
+6 +8 180580
+7 * 180580
+5 * 180580
+8 * 180580
+7 * 180580
+3 * 180580
cfi=(40)
cfn=(258)
calls=180580 0x57ece -11 
* * 1264060
+5 * 180580
+8 * 180580
+4 * 180580
+4 * 180580
+5 * 180580
+4 * 180580
+4 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
cfi=(45)
cfn=(350)
calls=180580 0x4b96e -20 
* * 313125720
+5 * 180580
+6 * 180580
+7 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
cfi=(23)
cfn=(250)
calls=180580 0x65afe 930 
* * 1986380
+5 * 180580
+3 * 180580
+4 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
cfi=(37)
cfn=(1608)
calls=180580 0x8156e +61 
* * 343463160
+5 * 180580
+6 * 180580
+7 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
cfi=(23)
cfn=(250)
calls=180580 0x65afe 930 
* * 1986380
+5 * 180580
+3 * 180580
+4 * 180580
+3 * 180580
+3 * 180580
cfi=(37)
cfn=(346)
calls=180580 0x4e47a +32 
* * 222474560
+5 * 180580
+4 * 180580
+3 * 180580
cfi=(37)
cfn=(246)
calls=180580 0x4b54e +30 
* * 18826509
+5 * 180580
+4 * 180580
+3 * 180580
cfi=(37)
cfn=(246)
calls=180580 0x4b54e +30 
* * 18826509
+5 -9 180580
+4 * 180580
+3 * 180580
cfi=(37)
cfn=(246)
calls=180580 0x4b54e +39 
* * 18826509
+5 * 180580
+6 * 180580
jump=180580 0x80be2 -26 
* * 
+5 +2 541749
+7 * 541749
+4 * 541749
+6 * 541749
+2 * 541749
+3 * 541749
cfi=(39)
cfn=(1432)
calls=541749 0x91db0 +11 
* * 13543725
+5 * 541749
+2 * 541749
jcnd=541749/541749 0x80f03 * 
* * 
+11 * 541749
+2 * 541749
jcnd=3600/541749 0x80e72 +1 
* * 
+6 * 538149
jump=538149 +14 +4 
* * 
+2 -1 541745
+7 * 541745
jump=541745 0x80c6a * 
* * 
+5 +5 538149
+4 * 538149
+6 * 538149
+7 * 538149
+3 * 538149
+3 * 538149
cfi=(40)
cfn=(1438)
calls=538149 0x580a4 +19 
* * 87180138
+5 * 538149
+4 * 538149
+6 * 538149
+7 * 538149
+3 * 538149
+3 * 538149
cfi=(40)
cfn=(1444)
calls=538149 0x5805e +17 
* * 87180138
+5 * 538149
+6 * 538149
+4 * 538149
+2 * 538149
+3 * 538149
cfi=(31)
cfn=(1436)
calls=538149 0x58604 +73 
* * 5919639
+5 * 538149
+2 * 538149
+2 * 538149
+7 * 538149
+4 * 538149
+3 * 538149
+3 * 538149
cfi=(23)
cfn=(250)
calls=538149 0x65afe 930 
* * 5919639
+5 * 538149
+3 * 538149
+6 * 538149
+7 * 538149
+4 * 538149
+3 * 538149
+3 * 538149
cfi=(23)
cfn=(250)
calls=538149 0x65afe 930 
* * 5919639
+5 * 538149
+3 * 538149
+7 * 538149
+3 * 538149
+4 * 538149
+4 * 538149
+4 * 538149
+3 * 538149
+3 * 538149
+3 * 538149
+3 * 538149
+3 * 538149
cfi=(10)
cfn=(1446)
calls=538149 0x814b8 682 
* * 131249446807
+5 * 538145
+4 * 538145
+3 * 538145
cfi=(31)
cfn=(234)
calls=538145 0x4b340 +40 
* * 58803571
+5 * 538145
+4 * 538145
+3 * 538145
cfi=(31)
cfn=(234)
calls=538145 0x4b340 +40 
* * 58803571
+5 * 538145
jump=538145 0x80d97 -5 
* * 
+5 -3 3600
+4 * 3600
+6 * 3600
+7 * 3600
+3 * 3600
+3 * 3600
cfi=(40)
cfn=(1438)
calls=3600 0x580a4 +22 
* * 583200
+5 * 3600
+4 * 3600
+6 * 3600
+7 * 3600
+3 * 3600
+3 * 3600
cfi=(40)
cfn=(1444)
calls=3600 0x5805e +20 
* * 583200
+5 * 3600
+7 * 3600
+3 * 3600
+4 * 3600
+4 * 3600
+7 * 3600
+7 * 3600
+4 * 3600
+3 * 3600
+3 * 3600
+3 * 3600
cfi=(10)
cfn=(1446)
calls=3600 0x814b8 682 
* * 875858400
+5 * 3600
+4 * 3600
+3 * 3600
cfi=(31)
cfn=(234)
calls=3600 0x4b340 +43 
* * 385200
+5 * 3600
+4 * 3600
+3 * 3600
cfi=(31)
cfn=(234)
calls=3600 0x4b340 +43 
* * 385200
+5 * 3600
jump=3600 0x80d97 -2 
* * 
+5 -1 538149
+5 * 538149
jump=538149 0x80d8d * 
* * 
+5 * 541749
+6 * 541749
+4 * 541749
+2 * 541749
+3 * 541749
cfi=(31)
cfn=(1436)
calls=541749 0x58604 +77 
* * 5959239
+5 * 541749
+2 * 541749
+6 * 541749
jcnd=538149/541749 -38 * 
* * 
+2 * 3600
+5 * 3600
jump=3600 0x80d8d * 
* * 
+5 -27 4489
+7 * 4489
+3 * 4489
cfi=(40)
cfn=(1614)
calls=4489 0x57f3a +31 
* * 31423
+5 * 4489
+3 * 4489
+3 * 4489
+2 * 4489
jcnd=889/4489 0x813c3 +1 
* * 
+6 +4 3600
+7 * 3600
+3 * 3600
cfi=(40)
cfn=(1614)
calls=3600 0x57f3a +27 
* * 25200
+5 * 3600
+2 * 3600
+3 * 3600
+2 * 3600
+6 +1 3600
+6 * 3600
+7 * 3600
+4 * 3600
+3 * 3600
+3 * 3600
cfi=(23)
cfn=(250)
calls=3600 0x65afe 930 
* * 39600
+5 * 3600
+3 * 3600
+7 * 3600
+3 * 3600
+3 * 3600
cfi=(37)
cfn=(346)
calls=3600 0x4e47a +61 
* * 17558748
+5 +1 3600
+4 * 3600
+4 * 3600
+5 * 3600
+3 * 3600
cfi=(31)
cfn=(354)
calls=3600 0x65766 +56 
* * 432000
+5 +1 3600
+10 * 3600
+6 * 3600
+7 * 3600
+4 * 3600
+3 * 3600
+3 * 3600
cfi=(23)
cfn=(250)
calls=3600 0x65afe 930 
* * 39600
-23 * 72000
+6 * 72000
+7 * 72000
+4 * 72000
+3 * 72000
+3 * 72000
cfi=(23)
cfn=(250)
calls=72000 0x65afe 930 
* * 792000
+5 * 75600
+3 * 75600
cfi=(37)
cfn=(264)
calls=75600 0x20560 203 
* * 529200
+5 * 75600
+6 * 75600
+3 * 75600
+2 * 75600
jcnd=72000/75600 +19 +1 
* * 
+2 -1 3600
+4 * 3600
+3 * 3600
cfi=(31)
cfn=(234)
calls=3600 0x4b340 +65 
* * 385200
+5 * 3600
jump=3600 0x80c06 +19 
* * 
+5 +2 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(358)
calls=72000 0x66168 240 
* * 2664000
+5 +1 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +71 
* * 1296000
+5 * 72000
+4 * 72000
+8 * 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +71 
* * 1296000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +95 
* * 792000
+5 * 72000
+8 * 72000
+4 +1 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +70 
* * 1296000
+5 * 72000
+4 * 72000
+8 * 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +70 
* * 1296000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +94 
* * 792000
+5 * 72000
+8 * 72000
+4 +1 72000
+4 * 72000
+7 * 72000
+3 * 72000
+3 * 72000
cfi=(40)
cfn=(1616)
calls=72000 0x57f4c +22 
* * 10368000
+5 +1 72000
+4 * 72000
+4 * 72000
+3 * 72000
+3 * 72000
cfi=(45)
cfn=(1618) double dot<double>(VectorSpace::Vector<double> const&, VectorSpace::Vector<double> const&)
calls=72000 0x81432 +35 
* * 9720000
+5 * 72000
+5 * 72000
+7 +1 72000
+4 * 72000
+4 * 72000
+7 * 72000
+3 * 72000
+3 * 72000
cfi=(45)
cfn=(522)
calls=72000 0x65f76 +83 
* * 18144000
+5 +1 72000
+4 * 72000
+4 * 72000
+3 * 72000
+3 * 72000
cfi=(45)
cfn=(532)
calls=72000 0x65d3c +90 
* * 17784000
+5 * 72000
+4 * 72000
+4 * 72000
+4 * 72000
+3 * 72000
+3 * 72000
cfi=(31)
cfn=(1602)
calls=72000 0x7ae48 +94 
* * 16488000
+5 * 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(234)
calls=72000 0x4b340 +57 
* * 7704000
+5 +1 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +89 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +89 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +89 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +89 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+8 +1 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +88 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +88 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +88 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +88 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+8 +1 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +63 
* * 1296000
+5 * 72000
+4 * 72000
+8 +1 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +86 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +62 
* * 1296000
+5 * 72000
+8 * 72000
+4 +1 72000
+4 * 72000
+5 * 72000
+3 * 72000
cfi=(31)
cfn=(196)
calls=72000 0x20542 +85 
* * 792000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +61 
* * 1296000
+5 * 72000
+8 * 72000
+4 +1 72000
+6 * 72000
+7 * 72000
+5 * 72000
+3 * 72000
cfi=(37)
cfn=(252)
calls=72000 0x205a4 +60 
* * 1296000
+5 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+4 * 72000
+8 * 72000
+8 * 72000
+4 * 72000
+4 * 72000
+4 -6 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(234)
calls=72000 0x4b340 +57 
* * 7704000
+5 -1 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(234)
calls=72000 0x4b340 +58 
* * 7704000
+5 -2 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(234)
calls=72000 0x4b340 +60 
* * 7704000
+5 -4 72000
+7 * 72000
jump=72000 0x80fb4 * 
* * 
+5 -6 889
+6 * 889
+7 * 889
+4 * 889
+3 * 889
+3 * 889
cfi=(23)
cfn=(250)
calls=889 0x65afe 930 
* * 9779
+5 * 889
+3 * 889
+6 * 889
+7 * 889
+4 * 889
+3 * 889
+3 * 889
cfi=(23)
cfn=(250)
calls=889 0x65afe 930 
* * 9779
+5 * 889
+3 * 889
+3 * 889
cfi=(37)
cfn=(346)
calls=889 0x4e47a +65 
* * 1095248
+5 * 889
+6 +1 889
jump=889 0x80be2 -3 
* * 
+23 -7 68
+7 * 68
+1 * 68
+2 * 68
+1 * 68

fn=(1322)
0x80900 8 18
+1 * 18
+3 * 18
+1 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+9 * 18
+4 * 18
+2 +1 18
+7 * 18
+4 * 18
+3 * 18
cfi=(39)
cfn=(1324)
calls=18 0x91a86 +25 
* * 126
+5 * 18
+6 +1 18
+7 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(39)
cfn=(1326)
calls=18 0x91abc +30 
* * 1486080
+5 +1 18
+7 * 18
+4 * 18
+3 * 18
cfi=(34)
cfn=(1392)
calls=18 0xb32f0 185 
* * 126
+5 * 18
+2 * 18
+7 * 18
+4 * 18
+3 * 18
cfi=(34)
cfn=(1394)
calls=18 0xb3018 161 
* * 126
+5 * 18
+2 * 18
+4 * 18
+5 * 18
+2 * 18
+3 * 18
cfi=(37)
cfn=(266)
calls=18 0x4b47a +42 
* * 33192
+5 +2 18
+6 * 18
+3 * 18
+7 * 18
+4 * 18
+7 * 18
+4 * 18
+7 * 18
+4 * 18
+7 * 18
+4 * 18
+7 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+5 * 18
+5 * 18
+3 * 18
+7 * 18
cob=(3)
cfi=(48)
cfn=(607)
calls=18 0xdf60 165 
* * 33229597274
* * 18
+5 -2 17
+4 * 17
+3 * 17
cfi=(37)
cfn=(246)
calls=17 0x4b54e +71 
* * 1734
+5 -1 17
+4 * 17
+3 * 17
cfi=(23)
cfn=(1620)
calls=17 0x5838e 565 
* * 8284
+5 +44 17
+1 * 17
+4 * 17
+9 * 17
jcnd=17/17 +35 * 
* * 
+35 * 17
+7 * 17
+1 * 17
+1 * 17

fl=(45)
fn=(1590) double l2Norm<double>(VectorSpace::Vector<double> const&)
0x7afe8 103 10834958
+1 * 10834958
+3 * 10834958
+4 * 10834958
+4 +1 10834958
+4 * 10834958
+5 +1 10834958
+7 * 10834958
+4 * 10834958
+3 * 10834958
cfi=(31)
cfn=(444)
calls=10834958 0x66156 238 
* * 75844706
-7 * 21669916
+4 * 21669916
+3 * 21669916
cfi=(31)
cfn=(444)
calls=21669916 0x66156 238 
* * 151689412
+5 * 32504874
+3 * 32504874
+3 * 32504874
+2 * 32504874
jcnd=10834958/32504874 +86 +4 
* * 
+2 +1 21669916
+3 * 21669916
+4 * 21669916
+2 * 21669916
+3 * 21669916
cfi=(31)
cfn=(366)
calls=21669916 0x20524 +18 
* * 238369076
+5 * 21669916
+4 * 21669916
+5 +1 21669916
+5 * 21669916
+8 * 21669916
+4 * 21669916
+5 * 21669916
+8 * 21669916
+4 * 21669916
+4 * 21669916
+5 * 21669916
+4 * 21669916
+5 -2 21669916
+4 * 21669916
jump=21669916 0x7b004 * 
* * 
+2 +4 10834958
+5 * 10834958
cob=(9)
cfi=(33)
cfn=(226)
calls=10834958 0x10370 0 
* * 86679664
* * 10834958
+5 * 10834958
+5 * 10834958
+4 * 10834958
+5 +1 10834958
+1 * 10834958

fn=(1618)
0x81432 65 72000
+1 * 72000
+3 * 72000
+4 * 72000
+4 * 72000
+4 +1 72000
+4 * 72000
+5 +1 72000
+7 * 72000
+4 * 72000
+3 * 72000
cfi=(31)
cfn=(444)
calls=72000 0x66156 238 
* * 504000
-7 * 144000
+4 * 144000
+3 * 144000
cfi=(31)
cfn=(444)
calls=144000 0x66156 238 
* * 1008000
+5 * 216000
+3 * 216000
+3 * 216000
+2 * 216000
jcnd=72000/216000 +74 +3 
* * 
+2 +1 144000
+3 * 144000
+4 * 144000
+2 * 144000
+3 * 144000
cfi=(31)
cfn=(366)
calls=144000 0x20524 +56 
* * 1584000
+5 * 144000
+4 * 144000
+5 * 144000
+3 * 144000
+4 * 144000
+2 * 144000
+3 * 144000
cfi=(31)
cfn=(366)
calls=144000 0x20524 +56 
* * 1584000
+5 * 144000
+4 * 144000
+5 * 144000
+5 * 144000
+4 * 144000
+5 -1 144000
+4 * 144000
jump=144000 -92 * 
* * 
+2 +3 72000
+5 +1 72000
+1 * 72000

fn=(1604)
0x4b578 13 10834957
+1 * 10834957
+3 * 10834957
+4 * 10834957
+4 * 10834957
+4 * 10834957
+3 +1 10834957
+4 * 10834957
+3 * 10834957
+4 * 10834957
+3 * 10834957
+4 * 10834957
+2 * 10834957
+4 * 10834957
+3 * 10834957
+4 * 10834957
+3 * 10834957
+4 * 10834957
+2 * 10834957
+3 * 10834957
cfi=(31)
cfn=(1594)
calls=10834957 0x4e322 +73 
* * 173359312
+5 +1 10834957
+4 * 10834957
+1 * 10834957

fn=(1588)
0x7ae20 112 10834958
+1 * 10834958
+3 * 10834958
+4 * 10834958
+4 * 10834958
+4 * 10834958
+3 * 10834958
cfn=(1590)
calls=10834958 0x7afe8 -9 
* * 1354369750
+5 * 10834958
+5 * 10834958
+4 * 10834958
+5 * 10834958
+1 * 10834958

fn=(532)
0x65d3c 122 110157
+1 * 110157
+3 * 110157
+4 * 110157
+4 * 110157
+4 * 110157
+9 * 110157
+4 * 110157
+2 +1 110157
+4 * 110157
+3 * 110157
cfi=(31)
cfn=(444)
calls=110157 0x66156 238 
* * 771099
+5 * 110157
+2 * 110157
+4 * 110157
+5 * 110157
+2 * 110157
+3 * 110157
cfi=(31)
cfn=(364)
calls=110157 0x4b7a4 -52 
* * 10244601
+5 +1 110157
+7 * 110157
+4 * 110157
+3 * 110157
cfi=(31)
cfn=(444)
calls=110157 0x66156 238 
* * 771099
-7 * 907140
+4 * 907140
+3 * 907140
cfi=(31)
cfn=(444)
calls=907140 0x66156 238 
* * 6349980
+5 * 1017297
+3 * 1017297
+3 * 1017297
+2 * 1017297
jcnd=110157/1017297 +72 +3 
* * 
+2 +1 907140
+3 * 907140
+4 * 907140
+2 * 907140
+3 * 907140
cfi=(31)
cfn=(366)
calls=907140 0x20524 -1 
* * 9978540
+5 * 907140
+4 * 907140
+8 * 907140
+4 * 907140
+5 * 907140
+3 * 907140
+4 * 907140
+2 * 907140
+3 * 907140
cfi=(31)
cfn=(196)
calls=907140 0x20542 -3 
* * 9978540
+5 * 907140
+5 * 907140
+4 -1 907140
+4 * 907140
jump=907140 -90 * 
* * 
+2 +3 110157
+1 +1 110157
+4 * 110157
+4 * 110157
+9 * 110157
jcnd=110157/110157 +7 * 
* * 
+7 * 110157
+1 * 110157

fn=(442)
0x65dfa 152 38158
+1 * 38158
+3 * 38158
+1 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+9 * 38158
+4 * 38158
+2 +1 38158
+4 * 38158
+3 * 38158
cfi=(37)
cfn=(276)
calls=38158 0x4b468 +48 
* * 267106
+5 * 38158
+3 +1 38158
+7 +1 38158
+4 * 38158
+3 * 38158
cfi=(37)
cfn=(264)
calls=38158 0x20560 +48 
* * 267106
+5 * 38158
+3 +1 38158
+4 * 38158
+3 * 38158
cfi=(31)
cfn=(444)
calls=38158 0x66156 +82 
* * 267106
+5 * 38158
+3 +1 38158
+7 +1 38158
+4 +2 38158
+3 * 38158
+2 * 38158
+6 +4 38158
+4 * 38158
+3 * 38158
+4 * 38158
+3 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+4 * 38158
+1 * 38158
+4 * 38158
+1 * 38158
+3 * 38158
cob=(7) /usr/lib/liblapack.so.3.8.0
cfi=(46) ???
cfn=(448) dposv_
calls=38158 0x211270 0 
* * 2184306954
* * 38158
+5 * 38158
+4 +2 38158
+3 * 38158
+2 * 38158
jcnd=38158/38158 0x65f5c +5 
* * 
0x65f5c +5 38158
+4 * 38158
+9 * 38158
jcnd=38158/38158 +7 * 
* * 
+7 * 38158
+4 * 38158
+1 * 38158

fn=(1592)
0x4b5c1 17 43339831
+1 * 43339831
+3 * 43339831
+4 * 43339831
+4 * 43339831
+4 * 43339831
+3 +1 43339831
+4 * 43339831
+3 * 43339831
+4 * 43339831
+3 * 43339831
+4 * 43339831
+2 * 43339831
+4 * 43339831
+3 * 43339831
+4 * 43339831
+3 * 43339831
+4 * 43339831
+2 * 43339831
+3 * 43339831
cfi=(31)
cfn=(1594)
calls=43339831 0x4e322 +69 
* * 693437296
+5 +1 43339831
+4 * 43339831
+1 * 43339831

fn=(350)
0x4b96e 32 22569374
+1 * 22569374
+3 * 22569374
+1 * 22569374
+4 * 22569374
+4 * 22569374
+4 * 22569374
+4 * 22569374
+9 * 22569374
+4 * 22569374
+2 +1 22569374
+4 * 22569374
+3 * 22569374
cfi=(37)
cfn=(264)
calls=22569374 0x20560 203 
* * 157985618
+5 * 22569374
+2 * 22569374
+4 * 22569374
+3 * 22569374
cfi=(37)
cfn=(276)
calls=22569374 0x4b468 201 
* * 157985618
+5 * 22569374
+2 * 22569374
+4 * 22569374
+5 * 22569374
+2 * 22569374
+3 * 22569374
cfi=(37)
cfn=(266)
calls=22569374 0x4b47a +20 
* * 2211798652
+5 +1 22569374
+7 * 22569374
+4 * 22569374
+3 * 22569374
cfi=(37)
cfn=(264)
calls=22569374 0x20560 203 
* * 157985618
-7 * 58620310
+4 * 58620310
+3 * 58620310
cfi=(37)
cfn=(264)
calls=58620310 0x20560 203 
* * 410342170
+5 * 81189684
+3 * 81189684
+3 * 81189684
+2 * 81189684
jcnd=22569374/81189684 0x4ba50 +5 
* * 
+2 +1 58620310
+7 * 58620310
+4 * 58620310
+3 * 58620310
cfi=(37)
cfn=(276)
calls=58620310 0x4b468 201 
* * 410342170
-7 * 234481240
+4 * 234481240
+3 * 234481240
cfi=(37)
cfn=(276)
calls=234481240 0x4b468 201 
* * 1641368680
+5 * 293101550
+3 * 293101550
+3 * 293101550
+2 * 293101550
jcnd=58620310/293101550 +78 -1 
* * 
+2 +1 234481240
+3 * 234481240
+3 * 234481240
+4 * 234481240
+2 * 234481240
+3 * 234481240
cfi=(37)
cfn=(278)
calls=234481240 0x20572 +64 
* * 4220662320
+5 * 234481240
+4 * 234481240
+4 * 234481240
+4 * 234481240
+4 * 234481240
+5 * 234481240
+3 * 234481240
+3 * 234481240
+4 * 234481240
+2 * 234481240
+3 * 234481240
cfi=(37)
cfn=(252)
calls=234481240 0x205a4 +62 
* * 4220662320
+5 * 234481240
+5 * 234481240
+4 -1 234481240
+4 * 234481240
jump=234481240 -96 * 
* * 
+2 -1 58620310
+4 * 58620310
jump=58620310 0x4b9c8 * 
* * 
+5 +5 22569374
+1 +1 22569374
+4 * 22569374
+4 * 22569374
+9 * 22569374
jcnd=22569374/22569374 +7 * 
* * 
+7 * 22569374
+4 * 22569374
+1 * 22569374
+1 * 22569374

fn=(522)
0x65f76 114 21780073
+1 * 21780073
+3 * 21780073
+4 * 21780073
+4 * 21780073
+4 * 21780073
+4 * 21780073
+9 * 21780073
+4 * 21780073
+2 +1 21780073
+4 * 21780073
+3 * 21780073
cfi=(31)
cfn=(444)
calls=21780073 0x66156 238 
* * 152460511
+5 * 21780073
+2 * 21780073
+4 * 21780073
+5 * 21780073
+2 * 21780073
+3 * 21780073
cfi=(31)
cfn=(364)
calls=21780073 0x4b7a4 -44 
* * 3187666932
+5 +1 21780073
+7 * 21780073
+4 * 21780073
+3 * 21780073
cfi=(31)
cfn=(444)
calls=21780073 0x66156 238 
* * 152460511
-7 * 87586820
+4 * 87586820
+3 * 87586820
cfi=(31)
cfn=(444)
calls=87586820 0x66156 238 
* * 613107740
+5 * 109366893
+3 * 109366893
+3 * 109366893
+2 * 109366893
jcnd=21780073/109366893 +78 +3 
* * 
+2 +1 87586820
+4 * 87586820
+4 * 87586820
+5 * 87586820
+3 * 87586820
+4 * 87586820
+2 * 87586820
+3 * 87586820
cfi=(31)
cfn=(366)
calls=87586820 0x20524 +7 
* * 963455020
+5 * 87586820
+4 * 87586820
+5 * 87586820
+5 * 87586820
+3 * 87586820
+4 * 87586820
+2 * 87586820
+3 * 87586820
cfi=(31)
cfn=(196)
calls=87586820 0x20542 +5 
* * 963455020
+5 * 87586820
+5 * 87586820
+4 -1 87586820
+4 * 87586820
jump=87586820 -96 * 
* * 
+2 +3 21780073
+1 +1 21780073
+4 * 21780073
+4 * 21780073
+9 * 21780073
jcnd=21780073/21780073 +7 * 
* * 
+7 * 21780073
+1 * 21780073

fl=(38)
fn=(1584)
0xa8a8e 106 541748
+1 * 541748
+3 * 541748
+1 * 541748
+7 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+7 * 541748
+7 * 541748
+9 * 541748
+4 * 541748
+2 +1 541748
+4 * 541748
+4 * 541748
+3 * 541748
cfi=(44) /home/jannick/Projects/UQCreator/code/src/closure.h
cfn=(348) Closure::GetPhiTildeW()
calls=541748 0xa9db4 -30 
* * 3792236
+5 * 541748
+3 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+4 * 541748
+3 * 541748
+4 * 541748
+3 * 541748
+4 * 541748
+7 * 541748
+7 * 541748
+4 * 541748
+4 * 541748
cfi=(83)
cfn=(1586)
calls=541748 0x7ba76 -55 
* * 105599941805
+2 * 541746
+8 * 541746
+5 * 541746
+4 * 541746
+4 * 541746
+4 * 541746
+3 * 541746
+3 * 541746
cfi=(45)
cfn=(350)
calls=541746 0x4b96e -75 
* * 3499137414
+5 * 541746
+4 * 541746
+4 * 541746
+3 * 541746
+3 * 541746
+3 * 541746
cfi=(37)
cfn=(262)
calls=541746 0x4e352 +16 
* * 21372941589
+5 * 541745
+4 * 541745
+4 * 541745
+3 * 541745
+3 * 541745
cfi=(37)
cfn=(1606)
calls=541745 0xaa1dc +78 
* * 676097760
+5 * 541745
+4 * 541745
+3 * 541745
cfi=(37)
cfn=(246)
calls=541745 0x4b54e -25 
* * 56480046
+5 * 541745
+4 * 541745
+3 * 541745
cfi=(37)
cfn=(246)
calls=541745 0x4b54e -25 
* * 56480046
+5 * 541745
+4 * 541745
+3 * 541745
cfi=(37)
cfn=(246)
calls=541745 0x4b54e -25 
* * 56480046
+5 +1 541745
+1 * 541745
+4 * 541745
+9 * 541745
jcnd=541745/541745 +69 * 
* * 
+69 * 541745
+7 * 541745
+1 * 541745
+1 * 541745

fn=(248)
0xa9a74 66 68
+1 * 68
+3 * 68
+2 * 68
+2 * 68
+2 * 68
+1 * 68
+4 * 68
+4 * 68
+9 * 68
+4 * 68
+2 * 68
+4 * 68
+5 * 68
+4 * 68
+3 * 68
+4 +1 68
+4 * 68
+3 * 68
+2 * 68
jcnd=68/68 +63 -1 
* * 
+2 -1 72
+5 * 72
+4 * 72
+4 * 72
+3 * 72
+3 * 72
+4 * 72
+5 * 72
+4 * 72
+5 * 72
+3 * 72
+5 * 72
+3 * 72
+3 * 72
+3 * 72
+2 * 72
jump=72 0xa9d93 * 
* * 
+5 * 68
cob=(3)
cfi=(48)
cfn=(1416)
calls=68 0xe0c0 238 
* * 544
* * 68
+5 * 68
+3 * 68
cob=(3)
cfi=(48)
cfn=(1420)
calls=68 0xe0e0 245 
* * 272
* * 68
+5 * 68
+2 * 68
+2 * 68
+5 * 68
+3 * 68
+2 * 68
+2 * 68
+5 * 68
+3 * 68
+2 * 68
+2 * 68
+6 * 68
+3 * 68
+2 * 68
+2 * 68
+3 * 68
+2 * 68
+2 * 68
+3 +2 68
+4 * 68
+4 * 68
+4 * 68
+4 * 68
+3 * 68
+4 * 68
+3 * 68
+3 * 68
+4 * 68
+4 * 68
+3 * 68
+3 * 68
cfi=(23)
cfn=(250)
calls=68 0x65afe 930 
* * 748
-43 * 177061
+4 * 177061
+4 * 177061
+4 * 177061
+4 * 177061
+3 * 177061
+4 * 177061
+3 * 177061
+3 * 177061
+4 * 177061
+4 * 177061
+3 * 177061
+3 * 177061
cfi=(23)
cfn=(250)
calls=177061 0x65afe 930 
* * 1947671
+5 * 177129
+3 * 177129
+4 * 177129
+4 * 177129
+3 * 177129
+3 * 177129
+3 * 177129
cfi=(23)
cfn=(250)
calls=177129 0x65afe 930 
* * 1948419
+5 * 177129
+3 * 177129
+3 * 177129
+3 * 177129
cfi=(30)
cfn=(230)
calls=177129 0x5bc7c +2 
* * 66862179182
cfi=(30)
cfn=(230)
calls=4 0x5c362 +56 
+2 * 592302
+3 +1 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+5 * 177133
+5 * 177133
+3 * 177133
cfi=(37)
cfn=(252)
calls=177133 0x205a4 +29 
* * 3188394
+5 * 177133
+4 * 177133
+5 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+5 * 177133
+5 * 177133
+3 * 177133
cfi=(37)
cfn=(252)
calls=177133 0x205a4 +29 
* * 3188394
+5 * 177133
+4 * 177133
+5 * 177133
+4 * 177133
+4 * 177133
+8 * 177133
+4 * 177133
+5 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+2 * 177133
+3 * 177133
cfi=(39)
cfn=(254)
calls=177133 0x91aea -27 
* * 6553921
+5 * 177133
+5 * 177133
+4 * 177133
+5 * 177133
+4 * 177133
+5 * 177133
+4 * 177133
+5 +2 177133
+4 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+4 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+3 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(30)
cfn=(260)
calls=177133 0x5c4a0 +70 
* * 7475721132
+5 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(43)
cfn=(280)
calls=177133 0x7f47a -36 
* * 3862916464
+3 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+3 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(37)
cfn=(346)
calls=177133 0x4e47a +13 
* * 863877641
+5 * 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(246)
calls=177133 0x4b54e +11 
* * 18462849
+5 * 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(246)
calls=177133 0x4b54e +11 
* * 18462849
+5 +1 177133
+4 * 177133
+4 * 177133
+3 * 177133
cfi=(44)
cfn=(348)
calls=177133 0xa9db4 +5 
* * 1239931
+5 * 177133
+3 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+3 * 177133
+8 * 177133
+5 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(45)
cfn=(350)
calls=177133 0x4b96e -40 
* * 1144102047
+5 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
+3 * 177133
cfi=(37)
cfn=(262)
calls=177133 0x4e352 +51 
* * 6988251116
+5 * 177133
+3 * 177133
+4 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(23)
cfn=(250)
calls=177133 0x65afe 930 
* * 1948463
+5 * 177133
+3 * 177133
+4 * 177133
+3 * 177133
+3 * 177133
cfi=(37)
cfn=(346)
calls=177133 0x4e47a +12 
* * 218227856
+5 * 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(246)
calls=177133 0x4b54e +10 
* * 18462849
+5 * 177133
+4 * 177133
+3 * 177133
cfi=(37)
cfn=(246)
calls=177133 0x4b54e +10 
* * 18462849
+5 * 177133
+4 * 177133
+3 * 177133
jcnd=177061/177133 0xa9b32 -4 
* * 
+6 * 72
jump=72 0xa9ab5 -6 
* * 
+18 -6 72
+4 * 72
+9 * 72
jcnd=72/72 +7 * 
* * 
+7 * 72
+4 * 72
+1 * 72
+2 * 72
+2 * 72
+2 * 72
+1 * 72

fl=(20)
fn=(120)
0x6cfe8 113 496
+1 * 496
+3 * 496
+4 * 496
+4 +1 496
+4 * 496
+3 * 496
cfn=(122) __gnu_cxx::__aligned_buffer<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<spdlog::logger> > >::_M_addr()
calls=496 0x6ffa8 -13 
* * 2976
+5 * 496
+1 * 496

fn=(122)
0x6ffa8 101 496
+1 * 496
+3 * 496
+4 +2 496
+4 +1 496
+1 * 496

fl=(44)
fn=(348)
0xa9db4 77 718881
+1 * 718881
+3 * 718881
+4 * 718881
+4 * 718881
+4 * 718881
+1 * 718881

fl=(22)
fn=(132) spdlog::logger::flush_()
0x1d2f8 360 496
+1 * 496
+3 * 496
+4 * 496
+4 * 496
+9 * 496
+4 * 496
+2 +1 496
+4 * 496
+4 * 496
+4 * 496
+4 * 496
+3 * 496
cfi=(23)
cfn=(134)
calls=496 0x1f0b0 698 
* * 14384
+5 * 496
+4 * 496
+4 * 496
+3 * 496
cfi=(23)
cfn=(138)
calls=496 0x1f0f8 716 
* * 14880
+5 * 496
+4 * 496
+4 * 496
+4 * 496
+3 * 496
+3 * 496
cfi=(24)
cfn=(140)
calls=496 0x1f144 884 
* * 15872
-14 * 744
+4 * 744
+4 * 744
+3 * 744
+3 * 744
cfi=(24)
cfn=(140)
calls=744 0x1f144 884 
* * 23808
+5 * 1240
+2 * 1240
jcnd=496/1240 +59 +4 
* * 
+2 * 744
+4 * 744
+3 * 744
cfi=(24)
cfn=(144)
calls=744 0x1f1a0 796 
* * 5208
+5 * 744
+4 +2 744
+4 * 744
+3 * 744
cfi=(21)
cfn=(146)
calls=744 0x1f1b2 988 
* * 18600
+5 * 744
+3 * 744
+4 * 744
+3 * 744
+3 * 744
cfi=(29)
cfn=(186)
calls=248 0x78bc4 118 
* * 62248
cfi=(26)
cfn=(174)
calls=248 0x8f804 35 
* * 71436
cfi=(25)
cfn=(152)
calls=248 0x8fbe4 47 
* * 62248
+2 -2 744
+4 * 744
+3 * 744
cfi=(24)
cfn=(172)
calls=744 0x1f180 804 
* * 8184
+5 * 744
jump=744 -78 * 
* * 
+2 +4 496
+1 * 496
+4 * 496
+9 * 496
jcnd=496/496 +7 * 
* * 
+7 * 496
+1 * 496

fn=(620) void spdlog::logger::log<double, double>(spdlog::level::level_enum, char const*, double const&, double const&)
0xaa796 57 18
+1 * 18
+3 * 18
+2 * 18
+1 * 18
+7 * 18
+7 * 18
+6 * 18
+7 * 18
+7 * 18
+7 * 18
+9 * 18
+4 * 18
+2 +2 18
+6 * 18
+7 * 18
+2 * 18
+3 * 18
cfn=(622) spdlog::logger::should_log(spdlog::level::level_enum) const
calls=18 0x46a80 332 
* * 558
+5 * 18
+3 * 18
+2 * 18
+6 +8 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56)
cfn=(630)
calls=18 0xb2d90 +64 
* * 36
* * 18
+5 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(57)
cfn=(632)
calls=18 0x1ea6e 525 
* * 1206
+5 * 18
+7 * 18
+3 * 18
cob=(10)
cfi=(56)
cfn=(644)
calls=18 0xb2db0 +72 
* * 36
* * 18
+5 +1 18
+7 * 18
+7 * 18
+7 * 18
+7 * 18
+3 * 18
cfi=(57)
cfn=(646)
calls=18 0xab123 3464 
* * 238335
+5 +1 18
+7 * 18
+3 * 18
cfi=(66)
cfn=(1054)
calls=18 0x50727 -53 
* * 1044
+5 * 18
+7 * 18
+4 * 18
+3 * 18
+3 * 18
+3 * 18
+6 * 18
+7 * 18
+3 * 18
+3 * 18
cfi=(68)
cfn=(1060)
calls=18 0x469e6 -50 
* * 1746
+5 +1 18
+7 * 18
+3 * 18
+4 * 18
+3 * 18
+7 * 18
+7 * 18
+3 * 18
+3 * 18
cfn=(1066) spdlog::logger::sink_it_(spdlog::details::log_msg&)
calls=18 0x1d1f8 341 
* * 103968
+2 -3 18
+7 * 18
+3 * 18
cfi=(57)
cfn=(982)
calls=18 0x1eada 529 
* * 954
+5 * 18
jump=18 0xaaa6c +6 
* * 
0xaaa6c +6 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+7 * 18
+1 * 18
+2 * 18
+1 * 18

fn=(618)
0xaa0d4 136 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+4 +2 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+5 * 18
+3 * 18
cfn=(620)
calls=18 0xaa796 -81 
* * 349215
+5 +1 18
+1 * 18
+1 * 18

fn=(1212) spdlog::logger::should_flush_(spdlog::details::log_msg const&)
0x1d15a 321 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 +1 18
+4 * 18
+4 * 18
+4 * 18
fi=(55)
+7 +70 18
+3 * 18
+5 * 18
+2 * 18
cfn=(624)
calls=18 0x1ad83 81 
* * 162
+5 * 18
+3 +4 18
+4 * 18
fe=(22)
+2 -74 18
+3 +1 18
+4 * 18
+3 * 18
+3 * 18
jcnd=18/18 +21 * 
* * 
+21 * 18
+5 +1 18
+1 * 18

fn=(1066)
0x1d1f8 341 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+4 * 18
+9 * 18
+4 * 18
+2 +4 18
+4 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(23)
cfn=(134)
calls=18 0x1f0b0 698 
* * 522
+5 * 18
+4 * 18
+4 * 18
+3 * 18
cfi=(23)
cfn=(138)
calls=18 0x1f0f8 716 
* * 540
+5 * 18
+4 * 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfi=(24)
cfn=(140)
calls=18 0x1f144 884 
* * 576
-14 * 36
+4 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(24)
cfn=(140)
calls=36 0x1f144 884 
* * 1152
+5 * 54
+2 * 54
jcnd=18/54 0x1d2be +8 
* * 
+2 * 36
+4 * 36
+3 * 36
cfi=(24)
cfn=(144)
calls=36 0x1f1a0 796 
* * 252
+5 * 36
+4 +2 36
+4 * 36
+3 * 36
cfi=(21)
cfn=(146)
calls=36 0x1f1b2 988 
* * 900
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+2 * 36
+3 * 36
cfi=(70)
cfn=(1068)
calls=36 0x1cd58 35 
* * 1116
+5 * 36
+2 * 36
+2 +2 36
+4 * 36
+3 * 36
cfi=(21)
cfn=(146)
calls=36 0x1f1b2 988 
* * 900
+5 * 36
+3 * 36
+4 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
cfi=(26)
cfn=(1206)
calls=18 0x8f76a 29 
* * 45342
cfi=(25)
cfn=(1072)
calls=18 0x8fa7c 38 
* * 49680
+2 -4 36
+4 * 36
+3 * 36
cfi=(24)
cfn=(172)
calls=36 0x1f180 804 
* * 396
+5 * 36
jump=36 0x1d243 * 
* * 
+2 +8 18
+4 * 18
+4 * 18
+3 * 18
+3 * 18
cfn=(1212)
calls=18 0x1d15a -32 
* * 594
+5 * 18
+2 * 18
jcnd=18/18 +14 +4 
* * 
+14 +4 18
+1 * 18
+4 * 18
+9 * 18
jcnd=18/18 +7 * 
* * 
+7 * 18
+1 * 18

fn=(130)
0x1cf3e 302 496
+1 * 496
+3 * 496
+1 * 496
+4 * 496
+4 * 496
+9 * 496
+4 * 496
+2 +3 496
+4 * 496
+3 * 496
+4 * 496
+3 * 496
+4 * 496
+3 * 496
cfn=(132)
calls=496 0x1d2f8 +55 
* * 329356
+2 +3 496
jump=496 0x1d0bb * 
* * 
0x1d0bb * 496
+4 * 496
+9 * 496
jcnd=496/496 +7 * 
* * 
+7 * 496
+4 * 496
+1 * 496
+1 * 496

fn=(622)
0x46a80 332 18
+1 * 18
+3 * 18
+4 * 18
+4 * 18
+3 +1 18
+4 * 18
+4 * 18
+4 * 18
fi=(55)
+7 +59 18
+3 * 18
+5 * 18
+2 * 18
cfn=(624)
calls=18 0x1ad83 81 
* * 162
+5 * 18
+3 +4 18
+4 * 18
+2 * 18
fe=(22)
+2 -63 18
+3 * 18
+2 * 18
+3 +1 18
+1 * 18

ob=(1)
fl=(6)
fn=(242)
0x85f20 0 140713545
+4 0 140713545
+1 0 140713545
+4 0 140713545
+7 0 140713545
+3 0 140713545
+3 0 140713545
+6 0 140713545
+3 0 140713545
jcnd=35/140713545 0x85fb0 0 
* 0 
+2 0 140713510
+4 0 140713510
+4 0 140713510
+2 0 140713510
+2 0 140713510
+7 0 140713510
+5 0 140713510
+6 0 140713510
+7 0 140713510
+2 0 140713510
jcnd=36469929/140713510 +14 0 
* 0 
+2 0 104243581
+3 0 104243581
+6 0 104243581
+3 0 104243581
+4 0 104243581
+2 0 104243581
+1 0 104243581
cfn=(244) _int_free
calls=104243581 0x82610 0 
* 0 6362612694
-7 0 36469929
+4 0 36469929
+2 0 36469929
+1 0 36469929
cfn=(244)
calls=36469929 0x82610 0 
* 0 2224235506
+51 0 35
+4 0 35
+1 0 35

fn=(900) __parse_one_specmb
0x6f580 0 36
+4 0 36
+2 0 36
+4 0 36
+3 0 36
+2 0 36
+1 0 36
+3 0 36
+1 0 36
+3 0 36
+4 0 36
+7 0 36
+5 0 36
+7 0 36
+6 0 36
+4 0 36
+2 0 36
+3 0 36
+3 0 36
+6 0 36
+7 0 36
+3 0 36
+3 0 36
+2 0 36
+2 0 36
+3 0 36
+4 0 36
+3 0 36
jump=36 +32 0 
* 0 
+32 0 36
+4 0 36
jcnd=36/36 +9 0 
* 0 
+9 0 36
+7 0 36
+7 0 36
+4 0 36
+2 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
+6 0 36
+7 0 36
+6 0 36
+4 0 36
jcnd=36/36 0x6f770 0 
* 0 
+6 0 36
+7 0 36
+7 0 36
+3 0 36
jcnd=36/36 0x6fa90 0 
* 0 
+6 0 36
+4 0 36
+5 0 36
+4 0 36
+3 0 36
+2 0 36
+6 0 36
+7 0 36
+3 0 36
+4 0 36
+3 0 36
jump=36 0x6f9a8 0 
* 0 
0x6f700 0 36
+5 0 36
+3 0 36
+8 0 36
+7 0 36
+3 0 36
jcnd=36/36 0x6fa38 0 
* 0 
+6 0 36
+3 0 36
+8 0 36
+3 0 36
+3 0 36
+6 0 36
+7 0 36
+4 0 36
+3 0 36
jump=36 0x6f940 0 
* 0 
+43 0 36
+4 0 36
+5 0 36
+5 0 36
+2 0 36
jcnd=36/36 0x6f9c8 0 
* 0 
0x6f881 0 36
+4 0 36
+5 0 36
cfn=(894) __strchrnul_avx2
calls=36 0x15f340 0 
* 0 684
+6 0 36
+4 0 36
+4 0 36
+3 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+31 0 36
+5 0 36
+3 0 36
+3 0 36
jump=36 +61 0 
* 0 
+56 0 36
+3 0 36
jcnd=36/36 -70 0 
* 0 
+2 0 36
+5 0 36
+2 0 36
jcnd=36/36 0x6f881 0 
* 0 
+49 0 36
+4 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+5 0 36
+3 0 36
jump=36 -82 0 
* 0 
+83 0 36
+3 0 36
+3 0 36
jump=36 0x6f700 0 
* 0 
+26 0 36
+4 0 36
+5 0 36
+5 0 36
+3 0 36
+3 0 36
+6 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+5 0 36
jump=36 0x6f64e 0 
* 0 
+67 0 36
+7 0 36
+4 0 36
+3 0 36
+6 0 36
+4 0 36
+4 0 36
+5 0 36
+3 0 36
cob=(4)
cfi=(61)
cfn=(902)
calls=36 0x216d0 288 
* 0 216
+2 0 36
+3 0 36
+3 0 36
+4 0 36
+2 0 36
jcnd=36/36 0x6f720 0 
* 0 
+38 0 36
+4 0 36
+5 0 36
jcnd=36/36 0x6f665 0 
* 0 

fn=(904) __libc_scratch_buffer_set_array_size
0x88c40 0 36
+4 0 36
+3 0 36
+2 0 36
+3 0 36
+1 0 36
+3 0 36
+4 0 36
+4 0 36
+1 0 36
+3 0 36
jcnd=36/36 +7 0 
* 0 
+7 0 36
+5 0 36
+4 0 36
jcnd=36/36 +46 0 
* 0 
+46 0 36
+1 0 36
+1 0 36
+2 0 36

fn=(924) __libc_alloca_cutoff
0x108b20 0 36
+4 0 36
+9 0 36
+4 0 36
+5 0 36
+4 0 36
+6 0 36
jcnd=36/36 +31 0 
* 0 
+31 0 36
+2 0 36
+3 0 36
+3 0 36

fn=(1188) __libc_enable_asynccancel
0x109160 0 36
+4 0 36
+8 0 36
+3 0 36
+4 0 36
+3 0 36
+2 0 36
+11 0 36
+2 0 36
+4 0 36
+4 0 36
+2 0 36

fn=(922) __mpn_rshift
0x48e30 0 68
+4 0 68
+2 0 68
+3 0 68
jcnd=68/68 +36 0 
* 0 
+36 0 68
+3 0 68
jcnd=68/68 +42 0 
* 0 
+42 0 68
jcnd=1/68 +54 0 
* 0 
+2 0 67
+3 0 67
+4 0 67
+2 0 67
+4 0 67
+4 0 67
jcnd=67/67 +16 0 
* 0 
+16 0 67
+4 0 67
+3 0 67
+3 0 67
+4 0 67
+5 0 1
+3 0 1
+4 0 1
+2 0 1
+4 0 1
+4 0 1
+4 0 1
+4 0 1
jcnd=1/1 +67 0 
* 0 
+67 0 1
+4 0 1
+3 0 1
+4 0 1
+4 0 1
+3 0 1
+4 0 1

fn=(1110) __tzstring
0xb8610 0 72
+4 0 72
+1 0 72
+3 0 72
cob=(5)
cfi=(4)
cfn=(928)
calls=72 0x78dd2d0 0 
* 0 1296
+5 0 72
+3 0 72
+1 0 72
+3 0 72
cfn=(1112) __tzstring_len
calls=72 0xb7ed0 0 
* 0 6264

fn=(1112)
0xb7ed0 0 72
+2 0 72
+3 0 72
+2 0 72
+3 0 72
+2 0 72
+1 0 72
+1 0 72
+7 0 72
+3 0 72
+6 0 72
+6 0 72
+3 0 72
jump=72 +12 0 
* 0 
+9 0 108
+3 0 108
+4 0 108
+3 0 108
-7 0 72
+4 0 72
+3 0 72
jcnd=36/72 +28 0 
* 0 
+2 0 144
+3 0 144
+3 0 144
+3 0 144
+4 0 144
+3 0 144
cfn=(1114) __memcmp_avx2_movbe
calls=144 0x15bcf0 0 
* 0 2700
+6 0 144
+2 0 144
jcnd=72/144 +70 0 
* 0 
+2 0 108
+3 0 108
+3 0 108
jcnd=108/108 -44 0 
* 0 
+62 0 72
+1 0 72
+3 0 72
+1 0 72
+2 0 72
+2 0 72
+2 0 72

fn=(1174)
0x71b20 0 36
+4 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+3 0 36
+1 0 36
+4 0 36
+4 0 36
+3 0 36
+6 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+5 0 36
+2 0 36
+7 0 36
+9 0 36
+4 0 36
+2 0 36
+5 0 36
+7 0 36
+2 0 36
+5 0 36
+2 0 36
jump=36 +30 0 
* 0 
+30 0 36
+7 0 36
+4 0 36
+5 0 36
+6 0 36
+3 0 36
+2 0 36
jcnd=36/36 0x71c70 0 
* 0 
+16 0 36
+7 0 36
+7 0 36
+7 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
cfn=(1176) _IO_file_xsputn@@GLIBC_2.2.5
calls=36 0x7ce20 0 
* 0 6102
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+6 0 36
+2 0 36
+7 0 36
+4 0 36
+2 0 36
+8 0 36
+7 0 36
+2 0 36
+3 0 36
+2 0 36
jump=36 +28 0 
* 0 
+28 0 36
+3 0 36
jcnd=36/36 +7 0 
* 0 
+7 0 36
+3 0 36
+4 0 36
+3 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+4 0 36
+3 0 36
jcnd=36/36 0x71bc8 0 
* 0 

fn=(1186) write
0xec800 0 36
+4 0 36
+7 0 36
+2 0 36
+2 0 36
jcnd=36/36 +25 0 
* 0 
+25 0 36
+2 0 36
+3 0 36
+1 0 36
+3 0 36
+1 0 36
+2 0 36
+4 0 36
cfn=(1188)
calls=36 0x109160 0 
* 0 432
+5 0 36
+3 0 36
+3 0 36
+2 0 36
+3 0 36
+5 0 36
+2 0 36
+6 0 36
+2 0 36
+3 0 36
+5 0 36
cfn=(1202) __libc_disable_asynccancel
calls=36 0x1091c0 0 
* 0 468
+5 0 36
+5 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36

fn=(1202)
0x1091c0 0 36
+4 0 36
+6 0 36
+2 0 36
+8 0 36
+3 0 36
+4 0 36
+11 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+2 0 36

fn=(244)
0x82610 0 140713510
+2 0 140713510
+2 0 140713510
+2 0 140713510
+2 0 140713510
+1 0 140713510
+1 0 140713510
+4 0 140713510
+9 0 140713510
+5 0 140713510
+2 0 140713510
+4 0 140713510
+3 0 140713510
+4 0 140713510
+3 0 140713510
+3 0 140713510
+3 0 140713510
+6 0 140713510
+3 0 140713510
+4 0 140713510
+6 0 140713510
+4 0 140713510
+6 0 140713510
+2 0 140713510
+6 0 140713510
+7 0 140713510
+3 0 140713510
+4 0 140713510
+3 0 140713510
+2 0 140713510
+4 0 140713510
+3 0 140713510
+4 0 140713510
+7 0 140713510
jcnd=177150/140713510 +23 0 
* 0 
+2 0 140536360
+5 0 140536360
+7 0 140536360
+3 0 140536360
jcnd=129701404/140536360 0x82940 0 
* 0 
+6 0 11012106
+7 0 11012106
jcnd=177150/11012106 0x82760 0 
* 0 
+6 0 10834956
+4 0 10834956
+4 0 10834956
+4 0 10834956
+6 0 10834956
+4 0 10834956
+8 0 10834956
+6 0 10834956
+6 0 10834956
+2 0 10834956
+6 0 10834956
+9 0 10834956
+3 0 10834956
+3 0 10834956
+7 0 10834956
+4 0 10834956
+4 0 10834956
+2 0 10834956
+2 0 10834956
jcnd=10834956/10834956 0x82ac0 0 
* 0 
+23 0 10834956
+3 0 10834956
jcnd=10834956/10834956 +22 0 
* 0 
+22 0 140713510
+5 0 140713510
+9 0 140713510
+6 0 140713510
+4 0 140713510
+1 0 140713510
+1 0 140713510
+2 0 140713510
+2 0 140713510
+2 0 140713510
+2 0 140713510
+10 0 177150
+2 0 177150
+6 0 177150
+7 0 177150
+2 0 177150
+2 0 177150
+2 0 177150
+3 0 177150
jcnd=177150/177150 0x82d45 0 
* 0 
+12 0 177150
+5 0 177150
+4 0 177150
+3 0 177150
+6 0 177150
+6 0 177150
+6 0 177150
+4 0 177150
+2 0 177150
+6 0 177150
+3 0 177150
+4 0 177150
+4 0 177150
+6 0 177150
+8 0 177150
+6 0 177150
+6 0 177150
+2 0 177150
+6 0 177150
+4 0 177150
jcnd=177150/177150 0x82870 0 
* 0 
0x82870 0 177150
+5 0 177150
jcnd=177150/177150 0x82b30 0 
* 0 
0x828e0 0 177150
+7 0 177150
jcnd=177150/177150 0x82b50 0 
* 0 
+6 0 177150
+3 0 177150
+6 0 177150
+7 0 177150
+2 0 177150
+5 0 177150
+2 0 177150
jump=177150 +31 0 
* 0 
+31 0 177150
jump=177150 0x82734 0 
* 0 
+27 0 129701404
+7 0 129701404
+6 0 129701404
+4 0 129701404
+4 0 129701404
+4 0 129701404
+4 0 129701404
+3 0 129701404
+4 0 129701404
+4 0 129701404
jump=129701404 0x82734 0 
* 0 
0x82ac0 0 10834956
+3 0 10834956
+2 0 10834956
+5 0 10834956
+4 0 10834956
+3 0 10834956
+9 0 10834956
+2 0 10834956
+5 0 10834956
+3 0 10834956
+3 0 10834956
+2 0 10834956
jump=10834956 0x8271b 0 
* 0 
+71 0 177150
+3 0 177150
+3 0 177150
+4 0 177150
+4 0 177150
+5 0 177150
jump=177150 0x828e0 0 
* 0 
+13 0 177150
+5 0 177150
+2 0 177150
jcnd=17/177150 0x82c84 0 
* 0 
+6 0 177150
+7 0 177150
+3 0 177150
jcnd=45389/177150 0x82d85 0 
* 0 
+6 0 131761
+5 0 131761
+3 0 131761
+7 0 131761
+3 0 131761
jcnd=131761/131761 0x82c91 0 
* 0 
0x82c84 0 17
+3 0 17
cfn=(1638) malloc_consolidate
calls=17 0x811f0 0 
* 0 2181
+5 0 17
jump=17 0x82b5d 0 
* 0 
+5 0 131761
+7 0 131761
+7 0 131761
+4 0 131761
+4 0 131761
+3 0 131761
jcnd=131761/131761 0x82ffe 0 
* 0 
0x82d45 0 177150
+5 0 177150
+2 0 177150
+7 0 177150
+2 0 177150
+6 0 177150
+2 0 177150
jump=177150 +32 0 
* 0 
+32 0 177150
+3 0 177150
jump=177150 0x82784 0 
* 0 
+5 0 45389
+5 0 45389
+4 0 45389
+4 0 45389
+7 0 45389
+6 0 45389
+7 0 45389
cfn=(526) systrim.isra.1.constprop.10
calls=45389 0x82540 0 
* 0 2723340
+5 0 45389
jump=45389 0x828ed 0 
* 0 
0x82ffe 0 131761
+4 0 131761
+4 0 131761
+7 0 131761
+4 0 131761
jcnd=131761/131761 0x828ed 0 
* 0 

fn=(464)
0x1600e0 0 38194
+4 0 38194
+4 0 38194
+3 0 38194
+5 0 38194
+4 0 38194
jcnd=38194/38194 0x16019e 0 
* 0 
0x16019e 0 38194
+3 0 38194
+2 0 38194
+5 0 38194
+3 0 38194
jcnd=38194/38194 +34 0 
* 0 
+34 0 38194
+5 0 38194
+3 0 38194
+3 0 38194

fn=(530) sbrk
0xf2740 0 45389
+4 0 45389
+2 0 45389
+7 0 45389
+1 0 45389
+3 0 45389
+1 0 45389
+4 0 45389
+3 0 45389
+2 0 45389
+6 0 45389
+2 0 45389
+2 0 45389
+3 0 45389
jcnd=45389/45389 +38 0 
* 0 
+38 0 45389
+3 0 45389
+1 0 45389
+1 0 45389
+2 0 45389

fn=(884) _IO_no_init
0x7f1f0 0 36
+4 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+1 0 36
+3 0 36
+1 0 36
+3 0 36
+4 0 36
cfn=(886) _IO_old_init
calls=36 0x7f130 0 
* 0 972
+6 0 36
+7 0 36
+3 0 36
jcnd=36/36 0x7f2a0 0 
* 0 
0x7f285 0 36
+11 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+6 0 36
+11 0 36
jump=36 -38 0 
* 0 

fn=(892) vfprintf
0x50750 0 36
+4 0 36
+1 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 36
+3 0 36
+7 0 36
+7 0 36
+9 0 36
+4 0 36
+2 0 36
+7 0 36
+3 0 36
+6 0 36
+6 0 36
+2 0 36
jcnd=36/36 0x509c0 0 
* 0 
+16 0 36
+3 0 36
+4 0 36
+6 0 36
+8 0 36
+6 0 36
+3 0 36
+4 0 36
+6 0 36
+6 0 36
+4 0 36
+5 0 36
+7 0 36
+7 0 36
+7 0 36
cfn=(894)
calls=36 0x15f340 0 
* 0 684
+6 0 36
+7 0 36
+10 0 36
+7 0 36
+7 0 36
+6 0 36
+7 0 36
+7 0 36
+7 0 36
+3 0 36
+7 0 36
+3 0 36
+3 0 36
+3 0 36
+7 0 36
+3 0 36
+6 0 36
+7 0 36
+7 0 36
+3 0 36
+3 0 36
+3 0 36
cfn=(896) _IO_default_xsputn
calls=36 0x7eca0 0 
* 0 720
+4 0 36
+3 0 36
+6 0 36
+7 0 36
+6 0 36
+7 0 36
+3 0 36
+6 0 36
+8 0 36
jcnd=36/36 0x50c60 0 
* 0 
0x509c0 0 36
+3 0 36
jcnd=36/36 0x507ac 0 
* 0 
+99 0 36
+6 0 36
jcnd=36/36 +19 0 
* 0 
+19 0 36
+6 0 36
+2 0 36
jcnd=36/36 +33 0 
* 0 
+33 0 36
+4 0 36
+9 0 36
+3 0 36
+6 0 36
+4 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
0x50c60 0 36
+10 0 36
+7 0 36
+11 0 36
+11 0 36
+6 0 36
+6 0 36
+7 0 36
+3 0 36
+6 0 36
+6 0 36
+3 0 36
+7 0 36
+1 0 36
+2 0 36
+3 0 36
+6 0 36
+2 0 36
cfn=(898) printf_positional
calls=36 0x4dfd0 0 
* 0 84813
+5 0 36
+4 0 36
+3 0 36
jump=36 0x50a26 0 
* 0 

fn=(894)
0x15f340 0 72
+4 0 72
+2 0 72
+4 0 72
+5 0 72
+5 0 72
+3 0 72
+3 0 72
+2 0 72
+4 0 72
+5 0 72
+5 0 72
+4 0 72
+4 0 72
+2 0 72
jcnd=72/72 0x15f4d0 0 
* 0 
0x15f4d0 0 72
+4 0 72
+3 0 72
+3 0 72

fn=(898)
0x4dfd0 0 36
+1 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+7 0 36
+4 0 36
+4 0 36
+7 0 36
+7 0 36
+4 0 36
+7 0 36
+4 0 36
+6 0 36
+7 0 36
+7 0 36
+7 0 36
+7 0 36
+9 0 36
+4 0 36
+2 0 36
+7 0 36
+11 0 36
+7 0 36
+4 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+7 0 36
+11 0 36
+11 0 36
+4 0 36
jcnd=36/36 0x4ea00 0 
* 0 
+6 0 36
+2 0 36
+3 0 36
+4 0 36
+6 0 36
+7 0 36
+6 0 36
+4 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+7 0 36
+4 0 36
+7 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
cfn=(900)
calls=36 0x6f580 0 
* 0 5868
+5 0 36
+4 0 36
+3 0 36
+4 0 36
jcnd=36/36 +77 0 
* 0 
+77 0 36
+7 0 36
+8 0 36
+7 0 36
+5 0 36
+3 0 36
cfn=(904)
calls=36 0x88c40 0 
* 0 648
+5 0 36
+2 0 36
+6 0 36
+7 0 36
+3 0 36
+8 0 36
+4 0 36
+3 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
+3 0 36
+2 0 36
+6 0 36
+3 0 36
+3 0 36
cob=(5)
cfi=(4)
cfn=(906)
calls=36 0x78dd370 0 
* 0 612
+5 0 36
+3 0 36
+6 0 36
+7 0 36
+4 0 36
+7 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
jump=36 +41 0 
* 0 
+9 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
jcnd=36/36 +93 0 
* 0 
+2 0 36
+4 0 36
+3 0 36
jcnd=36/36 +10 0 
* 0 
+10 0 36
+4 0 36
+3 0 36
+2 0 36
+8 0 36
+4 0 36
+3 0 36
+2 0 36
+4 0 36
jcnd=36/36 -79 0 
* 0 
+44 0 36
+3 0 36
+7 0 36
+3 0 36
+6 0 36
+7 0 36
+7 0 36
+3 0 36
+1 0 36
+4 0 36
+3 0 36
-7 0 36
+4 0 36
+3 0 36
jcnd=36/36 +73 0 
* 0 
+2 0 36
+3 0 36
+6 0 36
+3 0 36
+6 0 36
+2 0 36
jcnd=36/36 0x4e8c0 0 
* 0 
+51 0 36
+5 0 36
+6 0 36
jcnd=36/36 0x4e808 0 
* 0 
+77 0 72
+4 0 72
+3 0 72
jcnd=36/72 0x4e290 0 
* 0 
+6 0 36
+4 0 36
+7 0 36
+3 0 36
+6 0 36
+7 0 36
+7 0 36
+7 0 36
+7 0 36
+6 0 36
+7 0 36
+7 0 36
+4 0 36
+4 0 36
+7 0 36
+7 0 36
+3 0 36
+7 0 36
+5 0 36
+4 0 36
+2 0 36
+2 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+7 0 36
+3 0 36
+3 0 36
+2 0 36
+5 0 36
+6 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+6 0 36
+3 0 36
+3 0 36
+2 0 36
+3 0 36
+6 0 36
+2 0 36
+3 0 36
+4 0 36
+3 0 36
+6 0 36
+4 0 36
+4 0 36
+3 0 36
+6 0 36
+4 0 36
+3 0 36
+6 0 36
+4 0 36
+7 0 36
+6 0 36
+3 0 36
jcnd=36/36 0x4ea48 0 
* 0 
+34 0 36
+4 0 36
+3 0 36
+2 0 36
+7 0 36
+4 0 36
+4 0 36
+2 0 36
+6 0 36
+3 0 36
+3 0 36
+2 0 36
+4 0 36
+5 0 36
jcnd=36/36 0x4e9e0 0 
* 0 
0x4e52d 0 36
+7 0 36
+3 0 36
+2 0 36
+8 0 36
+4 0 36
+3 0 36
jcnd=36/36 0x4ea58 0 
* 0 
+6 0 36
+4 0 36
+2 0 36
jcnd=36/36 0x4e980 0 
* 0 
0x4e7a5 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
jcnd=36/36 +8 0 
* 0 
+8 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
jcnd=36/36 +8 0 
* 0 
+8 0 36
+2 0 36
+4 0 36
+9 0 36
+6 0 36
+4 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+6 0 36
+3 0 36
+2 0 36
+3 0 36
+5 0 36
+6 0 36
+2 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+5 0 36
jump=36 0x4e338 0 
* 0 
0x4e8c0 0 36
+2 0 36
+3 0 36
+2 0 36
+2 0 36
+3 0 36
+4 0 36
+2 0 36
+2 0 36
+3 0 36
+4 0 36
+3 0 36
jump=36 0x4e338 0 
* 0 
0x4e980 0 36
+7 0 36
+7 0 36
+7 0 36
+8 0 36
+7 0 36
+4 0 36
+4 0 36
+6 0 36
+7 0 36
+6 0 36
+4 0 36
+3 0 36
+2 0 36
+4 0 36
+7 0 36
+4 0 36
+3 0 36
jump=36 0x4f21d 0 
* 0 
+6 0 36
+7 0 36
+11 0 36
+7 0 36
jump=36 0x4e52d 0 
* 0 
+7 0 36
+7 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+7 0 36
+3 0 36
+7 0 36
+2 0 36
jcnd=36/36 +10 0 
* 0 
+10 0 36
+11 0 36
jump=36 0x4e097 0 
* 0 
+9 0 36
+4 0 36
jump=36 0x4e469 0 
* 0 
+12 0 36
+4 0 36
+8 0 36
+4 0 36
+3 0 36
+5 0 36
+4 0 36
+3 0 36
+2 0 36
+7 0 36
+4 0 36
+2 0 36
+2 0 36
+7 0 36
+1 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+2 0 36
+7 0 36
+7 0 36
+4 0 36
+7 0 36
+3 0 36
+7 0 36
+7 0 36
cob=(4)
cfi=(61)
cfn=(908)
calls=36 0x217e0 364 
* 0 720
+2 0 36
+7 0 36
+7 0 36
+3 0 36
jcnd=36/36 0x4e54e 0 
* 0 
+27 0 36
+5 0 36
+3 0 36
+2 0 36
+6 0 36
+3 0 36
+8 0 36
+6 0 36
+3 0 36
+6 0 36
+7 0 36
+7 0 36
+7 0 36
+3 0 36
+3 0 36
+7 0 36
+6 0 36
+4 0 36
+4 0 36
+7 0 36
+3 0 36
cfn=(896)
calls=36 0x7eca0 0 
* 0 720
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+6 0 36
+5 0 36
+3 0 36
+2 0 36
+3 0 36
+6 0 36
+8 0 36
+3 0 36
+7 0 36
+4 0 36
+7 0 36
+6 0 36
+3 0 36
jump=36 0x4e7a5 0 
* 0 
0x4f21d 0 36
+4 0 36
+4 0 36
+7 0 36
+4 0 36
+7 0 36
+7 0 36
+5 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+4 0 36
cfn=(910) __printf_fp
calls=36 0x565c0 0 
* 0 61845
+5 0 36
+2 0 36
+6 0 36
+7 0 36
jcnd=36/36 0x4eb02 0 
* 0 

fn=(932)
0x15fc60 0 198
+4 0 198
+3 0 198
+4 0 198
jcnd=180/198 +75 0 
* 0 
+2 0 18
+4 0 18
jcnd=18/18 0x15fd16 0 
* 0 
+30 0 18
+7 0 18
+6 0 18
+3 0 18
+2 0 18
+2 0 18
+4 0 18
+3 0 18
+6 0 18
+3 0 18
jcnd=18/18 * 0 
* 0 
* 0 1471104
jcnd=1471086/1471104 * 0 
* 0 
+2 0 18
+1 0 180
+3 0 180
jcnd=90/180 +25 0 
* 0 
+2 0 90
+3 0 90
jcnd=36/90 +41 0 
* 0 
+2 0 54
+3 0 54
+2 0 54
+3 0 54
jcnd=18/54 +61 0 
* 0 
+2 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 90
+4 0 90
+6 0 90
+4 0 90
+6 0 90
+1 0 36
+5 0 36
+3 0 36
+5 0 36
+3 0 36
+14 0 18
+5 0 18
+3 0 18
+5 0 18
+3 0 18
+1 0 18
+7 0 18
jcnd=18/18 0x15fc8f 0 
* 0 

fn=(1046) __mpn_divrem
0x48910 0 126
+4 0 126
+2 0 126
+3 0 126
+2 0 126
+2 0 126
+2 0 126
+1 0 126
+1 0 126
+4 0 126
+4 0 126
jcnd=126/126 0x48aa0 0 
* 0 
0x48aa0 0 126
+3 0 126
+5 0 126
+9 0 126
+3 0 126
jcnd=121/126 +14 0 
* 0 
+2 0 5
+9 0 5
+3 0 5
+8 0 5
+3 0 5
+4 0 5
jcnd=5/5 +36 0 
* 0 
-15 0 121
+8 0 121
+3 0 121
+4 0 121
jcnd=11/121 +36 0 
* 0 
+2 0 110
+4 0 110
+9 0 110
+4 0 110
+3 0 110
+4 0 110
+4 0 110
+4 0 110
+2 0 126
+3 0 126
jcnd=126/126 +43 0 
* 0 
+43 0 126
+3 0 126
+5 0 126
+4 0 126
+1 0 126
+1 0 126
+2 0 126
+2 0 126
+2 0 126
+2 0 126

fn=(1184) _IO_file_write@@GLIBC_2.2.5
0x7c830 0 36
+4 0 36
+2 0 36
+2 0 36
+3 0 36
+1 0 36
+1 0 36
+4 0 36
+3 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
jump=36 +26 0 
* 0 
+5 0 36
cfn=(1186)
calls=36 0xec800 0 
* 0 1980
+5 0 36
+3 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
jcnd=36/36 +85 0 
* 0 
+2 0 36
+5 0 36
+3 0 36
+3 0 36
+6 0 36
jcnd=36/36 -38 0 
* 0 
+29 0 36
+8 0 36
+3 0 36
jcnd=36/36 +13 0 
* 0 
+13 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
jump=36 -43 0 
* 0 

fn=(352) _int_malloc
0x83a30 0 11012104
+2 0 11012104
+4 0 11012104
+2 0 11012104
+2 0 11012104
+2 0 11012104
+1 0 11012104
+1 0 11012104
+7 0 11012104
+4 0 11012104
+6 0 11012104
+4 0 11012104
+4 0 11012104
+3 0 11012104
+3 0 11012104
+3 0 11012104
+6 0 11012104
+2 0 11012104
+6 0 11012104
+4 0 11012104
+3 0 11012104
+3 0 11012104
+6 0 11012104
+3 0 11012104
+4 0 11012104
+7 0 11012104
jcnd=177147/11012104 0x83ba0 0 
* 0 
+6 0 10834957
+4 0 10834957
+4 0 10834957
+4 0 10834957
+3 0 10834957
jcnd=72/10834957 0x83e30 0 
* 0 
+6 0 10834885
+7 0 10834885
+5 0 10834885
+4 0 10834885
+3 0 10834885
+2 0 10834885
jcnd=10834885/10834885 0x83e0f 0 
* 0 
+10 0 10834885
+3 0 10834885
+3 0 10834885
+3 0 10834885
+6 0 10834885
+7 0 10834885
+5 0 10834885
+3 0 10834885
+6 0 10834885
+4 0 10834885
+4 0 10834885
+7 0 10834885
+6 0 10834885
+5 0 10834885
+7 0 10834885
+6 0 10834885
+4 0 10834885
+3 0 10834885
jcnd=10834885/10834885 0x83ed0 0 
* 0 
0x83ba0 0 177147
+7 0 177147
+6 0 177147
+3 0 177147
+3 0 177147
+3 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
+4 0 177147
+5 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
+5 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
+5 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
+5 0 177147
+5 0 177147
+3 0 177147
+5 0 177147
+5 0 177147
+5 0 177147
+5 0 177147
+4 0 177147
+5 0 177147
+4 0 177147
+2 0 177147
+5 0 177147
+4 0 177147
jcnd=177129/177147 +24 0 
* 0 
+2 0 18
+5 0 18
+4 0 18
jcnd=18/18 0x84270 0 
* 0 
+13 0 177147
+4 0 177147
+2 0 177147
jcnd=51/177147 0x83f50 0 
* 0 
+6 0 177201
+7 0 177201
+4 0 177201
+5 0 177201
+3 0 177201
+2 0 177201
+5 0 177201
+4 0 177201
+5 0 177201
+3 0 177201
+2 0 177201
+7 0 177201
+4 0 177201
+5 0 177201
+5 0 177201
+4 0 177201
+3 0 177201
+5 0 177201
+4 0 177201
+7 0 177201
+7 0 177201
+8 0 177201
+5 0 177201
+4 0 177201
+5 0 177201
+3 0 177201
+5 0 177201
+4 0 177201
+5 0 177201
+3 0 177201
+3 0 177201
jcnd=177133/177201 0x844e0 0 
* 0 
-3 0 84
+3 0 84
jcnd=68/84 0x844e0 0 
* 0 
+6 0 84
+4 0 84
+4 0 84
+6 0 84
+7 0 84
+6 0 84
+4 0 84
+4 0 84
+7 0 84
jcnd=84/84 +11 0 
* 0 
+11 0 84
+4 0 84
+6 0 84
+4 0 84
+4 0 84
+3 0 84
+6 0 84
+7 0 84
jcnd=33/84 0x83f00 0 
* 0 
+6 0 51
+3 0 51
+4 0 51
+4 0 51
+6 0 51
+3 0 51
+4 0 51
+3 0 51
+5 0 51
+3 0 51
+4 0 51
+3 0 51
jcnd=51/51 0x84250 0 
* 0 
+59 0 84
+3 0 84
+5 0 84
+4 0 84
+3 0 84
+2 0 84
+8 0 84
+4 0 84
+4 0 84
+4 0 84
+4 0 84
+4 0 84
+2 0 84
jcnd=84/84 0x84058 0 
* 0 
+39 0 84
+4 0 84
jump=84 0x83cd9 0 
* 0 
+17 0 10834885
+3 0 10834885
+9 0 10834885
+2 0 10834885
+5 0 10834885
+3 0 10834885
jcnd=10834885/10834885 0x83ac6 0 
* 0 
+11 0 72
+7 0 72
+2 0 72
+5 0 72
+4 0 72
+4 0 72
+3 0 72
jcnd=54/72 0x83f60 0 
* 0 
+6 0 18
+4 0 18
+4 0 18
+6 0 18
+7 0 18
+6 0 18
+4 0 18
+4 0 18
+3 0 18
jcnd=9/18 +7 0 
* 0 
+2 0 9
+5 0 9
+7 0 9
+4 0 9
+3 0 9
-14 0 9
+7 0 9
+4 0 9
+3 0 9
+2 0 18
+4 0 18
+4 0 18
+7 0 18
+2 0 18
+7 0 18
+5 0 18
+4 0 18
+4 0 18
jump=18 +25 0 
* 0 
+7 0 18
+4 0 18
+3 0 18
jcnd=18/18 +17 0 
* 0 
+11 0 18
+3 0 18
jcnd=18/18 -21 0 
* 0 
+3 0 10834903
+6 0 10834903
+4 0 10834903
+2 0 10834903
+6 0 11012104
+7 0 11012104
+3 0 11012104
+1 0 11012104
+1 0 11012104
+2 0 11012104
+2 0 11012104
+2 0 11012104
+2 0 11012104
+10 0 33
+3 0 33
+4 0 33
+2 0 33
+3 0 33
+5 0 33
+4 0 33
+3 0 33
jump=33 0x83da4 0 
* 0 
+56 0 51
+3 0 51
cfn=(1638)
calls=51 0x811f0 0 
* 0 7060
+5 0 51
jump=51 0x83c54 0 
* 0 
+8 0 54
+3 0 54
+3 0 54
+3 0 54
+3 0 54
+4 0 54
+4 0 54
+5 0 54
+5 0 54
+5 0 54
+4 0 54
+3 0 54
+4 0 54
+4 0 54
+2 0 54
+3 0 54
+5 0 54
+4 0 54
+2 0 54
+3 0 54
+5 0 54
+4 0 54
+2 0 54
+3 0 54
+5 0 54
+4 0 54
+3 0 54
+4 0 54
+4 0 54
+4 0 54
+3 0 54
+4 0 54
jump=54 0x83c54 0 
* 0 
0x84058 0 84
+4 0 84
+7 0 84
jcnd=84/84 0x83dfa 0 
* 0 
+6 0 177201
+7 0 177201
jcnd=54/177201 +40 0 
* 0 
+2 0 177147
+4 0 177147
+5 0 177147
+2 0 177147
+5 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
jcnd=177147/177147 +12 0 
* 0 
+12 0 177201
+4 0 177201
+3 0 177201
+2 0 177201
+2 0 177201
+5 0 177201
+5 0 177201
+3 0 177201
+2 0 177201
+3 0 177201
+8 0 177201
+3 0 177201
+2 0 177201
jcnd=177192/177201 0x842a3 0 
* 0 
-2 0 9
+2 0 9
+6 0 18
+2 0 18
+6 0 198
+2 0 198
jcnd=63/198 0x84350 0 
* 0 
+6 0 135
+4 0 135
+2 0 135
jcnd=135/135 -14 0 
* 0 
0x84250 0 51
+4 0 51
+2 0 51
+3 0 51
+4 0 51
jump=51 0x83da4 0 
* 0 
+19 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x83c48 0 
* 0 
+20 0 90
+3 0 90
+8 0 90
+2 0 90
jcnd=45/90 0x844c0 0 
* 0 
+6 0 177237
+3 0 177237
+3 0 177237
jcnd=90/177237 -25 0 
* 0 
+2 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
+3 0 177147
jcnd=177147/177147 0x84735 0 
* 0 
0x84350 0 63
+4 0 63
+3 0 63
jcnd=54/63 0x8457f 0 
* 0 
+6 0 9
+2 0 9
+4 0 9
+2 0 9
+2 0 9
+2 0 9
+8 0 9
jump=9 0x840c0 0 
* 0 
0x844c0 0 45
+2 0 45
+3 0 45
+3 0 45
+5 0 45
+5 0 45
jump=45 0x840d0 0 
* 0 
+14 0 177201
+4 0 177201
+2 0 177201
jcnd=177201/177201 0x84069 0 
* 0 
0x8457f 0 54
+4 0 54
+3 0 54
+4 0 54
+3 0 54
+6 0 54
+4 0 54
+3 0 54
+6 0 54
+4 0 54
+4 0 54
+4 0 54
+6 0 54
+4 0 54
+6 0 54
+4 0 54
+4 0 54
+7 0 54
jcnd=9/54 +15 0 
* 0 
+2 0 45
+4 0 45
+3 0 45
jcnd=45/45 0x84879 0 
* 0 
+6 0 54
+3 0 54
+4 0 54
+6 0 54
+4 0 54
+4 0 54
+4 0 54
+6 0 54
+4 0 54
+4 0 54
+4 0 54
+4 0 54
+7 0 54
+2 0 54
+4 0 54
+6 0 54
jcnd=9/54 +18 0 
* 0 
+2 0 45
+8 0 45
+8 0 45
+7 0 45
+3 0 45
+3 0 45
+3 0 45
+4 0 45
+3 0 45
+4 0 45
+4 0 45
+3 0 45
+4 0 45
+4 0 45
+3 0 45
+6 0 45
+4 0 45
+2 0 45
jcnd=45/45 0x83ee2 0 
* 0 
-57 0 9
+7 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+4 0 9
+3 0 9
+4 0 9
+4 0 9
+3 0 9
+6 0 9
+4 0 9
+2 0 9
jcnd=9/9 0x83ee2 0 
* 0 
-12 0 177147
+6 0 177147
+4 0 177147
+2 0 177147
jcnd=177147/177147 0x83ee2 0 
* 0 
0x84735 0 177147
+7 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
+4 0 177147
+3 0 177147
+4 0 177147
+4 0 177147
+4 0 177147
jump=177147 0x8465b 0 
* 0 
0x84879 0 45
+4 0 45
+2 0 45
+4 0 45
+4 0 45
+2 0 45
+5 0 45
+2 0 45
+4 0 45
+4 0 45
+4 0 45
jump=45 0x845da 0 
* 0 

fn=(896)
0x7eca0 0 72
+4 0 72
+2 0 72
+2 0 72
+2 0 72
+2 0 72
+2 0 72
+1 0 72
+1 0 72
+4 0 72
+4 0 72
+3 0 72
jcnd=72/72 0x7ed58 0 
* 0 
0x7ed58 0 72
+4 0 72
+1 0 72
+1 0 72
+2 0 72
+2 0 72
+2 0 72
+2 0 72

fn=(1638)
0x811f0 0 68
+2 0 68
+4 0 68
+4 0 68
+2 0 68
+1 0 68
+1 0 68
+2 0 68
+4 0 68
+7 0 68
+3 0 68
+3 0 68
+3 0 68
-9 0 612
+3 0 612
+3 0 612
+3 0 612
jcnd=68/612 0x812b8 0 
* 0 
+6 0 680
+4 0 680
+3 0 680
jcnd=612/680 -22 0 
* 0 
+2 0 68
+4 0 68
+1 0 68
+1 0 68
+2 0 68
+2 0 68
+3 0 43
+4 0 43
+3 0 43
jcnd=34/43 +57 0 
* 0 
+2 0 9
+4 0 9
+6 0 9
+4 0 9
+4 0 9
+6 0 9
+5 0 9
+6 0 9
+4 0 9
+4 0 9
+4 0 9
+8 0 9
+4 0 9
+4 0 9
+4 0 9
+7 0 9
-19 0 59
+4 0 59
+4 0 59
+4 0 59
+7 0 59
jcnd=25/59 +18 0 
* 0 
+2 0 43
+8 0 43
+8 0 43
+3 0 43
+4 0 43
+4 0 43
+4 0 43
+4 0 43
+4 0 43
+3 0 43
+3 0 43
jcnd=43/43 0x8121a 0 
* 0 
-29 0 25
+3 0 25
+4 0 25
+4 0 25
+4 0 25
+4 0 25
+4 0 25
+3 0 25
+3 0 25
jcnd=25/25 0x8121a 0 
* 0 
+6 0 68
+4 0 68
+2 0 68
+3 0 68
+3 0 68
+5 0 68
+3 0 68
+6 0 68
+3 0 68
+4 0 68
+4 0 68
+4 0 68
+4 0 68
+3 0 68
+4 0 68
+3 0 68
jcnd=68/68 +97 0 
* 0 
+97 0 68
+4 0 68
+2 0 68
+4 0 68
+4 0 68
jcnd=16/68 +66 0 
* 0 
+2 0 52
+3 0 52
+3 0 52
+2 0 52
+4 0 52
+4 0 52
+4 0 52
+2 0 52
+4 0 52
+2 0 52
+4 0 52
+4 0 52
+7 0 52
jcnd=9/52 0x81270 0 
* 0 
+6 0 43
jump=43 0x81230 0 
* 0 
+15 0 16
+4 0 16
+4 0 16
jump=16 0x81270 0 
* 0 

fn=(882) vsnprintf
0x79a30 0 36
+4 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 36
+1 0 36
+7 0 36
+9 0 36
+8 0 36
+2 0 36
+12 0 36
+3 0 36
+6 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+2 0 36
+5 0 36
+5 0 36
cfn=(884)
calls=36 0x7f1f0 0 
* 0 1800
+6 0 36
+3 0 36
+3 0 36
+3 0 36
+7 0 36
+3 0 36
+8 0 36
+4 0 36
cfn=(888) _IO_str_init_static_internal
calls=36 0x806c0 0 
* 0 1980
+6 0 36
+3 0 36
+3 0 36
+3 0 36
cfn=(892)
calls=36 0x50750 0 
* 0 90069
+5 0 36
+7 0 36
+5 0 36
+2 0 36
+5 0 36
+3 0 36
+8 0 36
+9 0 36
+2 0 36
+7 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36

fn=(926) hack_digit
0x53860 0 288
+1 0 288
+1 0 288
+4 0 288
+2 0 288
+2 0 288
jcnd=126/288 +12 0 
* 0 
+2 0 162
+4 0 162
jcnd=162/162 0x53970 0 
* 0 
+6 0 196
+4 0 196
+3 0 196
+4 0 196
+4 0 196
+3 0 196
jcnd=70/196 0x53948 0 
* 0 
+6 0 126
+3 0 126
+2 0 126
+3 0 126
+4 0 126
+3 0 126
+4 0 126
+2 0 126
cfn=(1046)
calls=126 0x48910 0 
* 0 4922
+5 0 126
+4 0 126
+4 0 126
+4 0 126
+4 0 126
+4 0 126
+3 0 126
+4 0 126
+3 0 126
+6 0 126
+4 0 126
+3 0 126
+6 0 126
jcnd=126/126 +60 0 
* 0 
+60 0 126
+5 0 126
+3 0 126
cfn=(920) __mpn_mul_1
calls=126 0x49370 0 
* 0 2646
+5 0 126
+3 0 126
jcnd=17/126 +22 0 
* 0 
+2 0 109
+4 0 109
+4 0 109
+4 0 109
+4 0 109
+4 0 109
+4 0 109
+2 0 109
+1 0 109
+1 0 109
-8 0 17
+4 0 17
+2 0 17
+1 0 17
+1 0 17
+5 0 70
+5 0 70
+5 0 70
+4 0 70
+3 0 70
+3 0 70
cfn=(920)
calls=70 0x49370 0 
* 0 1746
+5 0 70
+3 0 70
+3 0 70
+4 0 70
+2 0 70
+1 0 70
+1 0 70
+1 0 162
+3 0 162
+5 0 162
+3 0 162
+3 0 162
+2 0 162
jcnd=70/162 0x53876 0 
* 0 
+6 0 92
+4 0 92
+2 0 92
+1 0 92
+1 0 92

fn=(24) clock_gettime
0x1099c0 0 514
+4 0 514
+4 0 514
+4 0 514
+1 0 514
+3 0 514
+1 0 514
+2 0 514
+4 0 514
+7 0 514
+4 0 514
+9 0 514
+3 0 514
+2 0 514
cfn=(26) __syscall_clock_gettime
calls=514 0xfc340 0 
* 0 2056
+2 0 514
+6 0 514
jcnd=514/514 +29 0 
* 0 
+29 0 514
+4 0 514
+1 0 514
+1 0 514

fn=(880)
0x59470 0 36
+4 0 36
+7 0 36
+5 0 36
+5 0 36
+5 0 36
+2 0 36
+2 0 36
+5 0 36
+5 0 36
+5 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+9 0 36
+5 0 36
+2 0 36
+8 0 36
+3 0 36
+7 0 36
+5 0 36
+5 0 36
+8 0 36
+5 0 36
cfn=(882)
calls=36 0x79a30 0 
* 0 95685
+6 0 36
+5 0 36
+9 0 36
+2 0 36
+7 0 36

fn=(912) __printf_fp_l
0x53c90 0 36
+4 0 36
+1 0 36
+3 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+7 0 36
+7 0 36
+3 0 36
+7 0 36
+5 0 36
+7 0 36
+9 0 36
+4 0 36
+2 0 36
+4 0 36
+10 0 36
+10 0 36
+2 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+3 0 36
+6 0 36
+2 0 36
+6 0 36
+4 0 36
+4 0 36
+7 0 36
+3 0 36
+6 0 36
+3 0 36
+6 0 36
+11 0 36
+10 0 36
+11 0 36
+3 0 36
+2 0 36
jcnd=36/36 0x53f88 0 
* 0 
0x53f88 0 36
+4 0 36
jcnd=36/36 0x54908 0 
* 0 
0x53ff2 0 36
+6 0 36
+8 0 36
+2 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+8 0 36
+4 0 36
+4 0 36
+3 0 36
+5 0 36
+3 0 36
+5 0 36
+3 0 36
+4 0 36
+5 0 36
+4 0 36
+7 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
jcnd=18/36 0x54fa8 0 
* 0 
+6 0 18
+3 0 18
+2 0 18
+3 0 18
+3 0 18
+3 0 18
+4 0 18
jcnd=18/18 0x55c78 0 
* 0 
+51 0 18
+3 0 18
jcnd=18/18 +37 0 
* 0 
+37 0 18
+6 0 18
+3 0 18
+2 0 18
+4 0 18
+7 0 18
+7 0 18
+3 0 18
+3 0 18
+7 0 18
+3 0 18
jump=18 +98 0 
* 0 
+3 0 36
+7 0 36
+4 0 36
+6 0 36
+4 0 36
+3 0 36
+7 0 36
+4 0 36
+4 0 36
+4 0 36
cfn=(932)
calls=36 0x15fc60 0 
* 0 396
+6 0 36
+4 0 36
+7 0 36
+6 0 36
jcnd=36/36 0x55030 0 
* 0 
+6 0 18
+4 0 18
+4 0 18
+3 0 18
-7 0 198
+4 0 198
+3 0 198
+6 0 216
+6 0 216
+4 0 216
+4 0 216
+3 0 216
+3 0 216
+2 0 216
jcnd=180/216 -35 0 
* 0 
-16 0 18
+4 0 18
+4 0 18
+3 0 18
+3 0 18
+2 0 18
jcnd=18/18 -35 0 
* 0 
+2 0 36
+4 0 36
+3 0 36
jcnd=36/36 0x54100 0 
* 0 
+72 0 18
+4 0 18
+4 0 18
+4 0 18
+4 0 18
cfn=(932)
calls=18 0x15fc60 0 
* 0 198
+6 0 18
+4 0 18
+4 0 18
+6 0 18
+2 0 18
+3 0 18
+7 0 18
+3 0 18
+4 0 18
+4 0 18
+3 0 18
+5 0 18
+2 0 18
+3 0 18
+3 0 18
+3 0 18
+6 0 18
+7 0 18
+7 0 18
+3 0 18
+6 0 18
+4 0 18
+6 0 18
+3 0 18
+4 0 18
+3 0 18
+3 0 18
+6 0 18
+7 0 18
+3 0 18
+3 0 18
jcnd=18/18 0x564c4 0 
* 0 
0x542d4 0 18
+11 0 18
+2 0 18
+3 0 18
+6 0 18
+7 0 18
+3 0 18
+3 0 18
+3 0 18
+3 0 18
cfn=(922)
calls=18 0x48e30 0 
* 0 324
+5 0 18
+7 0 18
+3 0 18
+4 0 18
+7 0 18
+4 0 18
+3 0 18
cfn=(922)
calls=18 0x48e30 0 
* 0 324
+5 0 18
+7 0 18
+7 0 18
+3 0 18
+3 0 18
+6 0 18
jcnd=18/18 +8 0 
* 0 
+8 0 18
+7 0 18
+4 0 18
+7 0 18
+7 0 18
+3 0 18
+4 0 18
+2 0 18
+6 0 18
+4 0 18
+3 0 18
+6 0 18
+3 0 18
+6 0 18
+3 0 18
jcnd=18/18 0x550e0 0 
* 0 
-54 0 18
+7 0 18
+7 0 18
+3 0 18
+4 0 18
+2 0 18
+6 0 18
+4 0 18
+3 0 18
+6 0 18
+3 0 18
+6 0 18
+3 0 18
+6 0 18
+7 0 18
jcnd=18/18 0x551f8 0 
* 0 
0x54425 0 36
+8 0 36
jcnd=36/36 0x55170 0 
* 0 
+85 0 36
+7 0 36
+7 0 36
+3 0 36
+6 0 36
+8 0 36
+3 0 36
cfn=(924)
calls=36 0x108b20 0 
* 0 396
+5 0 36
+2 0 36
jcnd=36/36 +15 0 
* 0 
+15 0 36
+10 0 36
+4 0 36
+4 0 36
+3 0 36
+5 0 36
+4 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
jcnd=18/36 +15 0 
* 0 
+2 0 18
+7 0 18
jcnd=18/18 0x55d54 0 
* 0 
+6 0 18
+7 0 18
+3 0 18
+6 0 18
+6 0 18
+3 0 18
+4 0 18
+7 0 18
+5 0 18
+4 0 18
+3 0 18
+4 0 18
cfn=(926)
calls=18 0x53860 0 
* 0 1962
+5 0 18
+4 0 18
+3 0 18
+2 0 18
+6 0 18
+5 0 18
+6 0 18
+7 0 18
+4 0 18
+2 0 18
+7 0 18
+3 0 18
+6 0 18
+6 0 18
+4 0 18
+5 0 18
+2 0 18
+6 0 18
+3 0 18
+10 0 18
+6 0 18
+7 0 18
jcnd=18/18 +25 0 
* 0 
-32 0 18
+6 0 18
+3 0 18
+10 0 18
+6 0 18
+7 0 18
jcnd=18/18 +25 0 
* 0 
+25 0 234
+3 0 234
+4 0 234
+4 0 234
cfn=(926)
calls=234 0x53860 0 
* 0 14392
+5 0 234
+4 0 234
+2 0 234
jcnd=234/234 +11 0 
* 0 
+11 0 234
+5 0 234
+7 0 234
jcnd=198/234 -45 0 
* 0 
+2 0 36
+7 0 36
+2 0 36
+4 0 36
+6 0 36
jcnd=36/36 +6 0 
* 0 
+6 0 36
+3 0 36
cfn=(926)
calls=36 0x53860 0 
* 0 2981
+5 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
jcnd=32/36 +69 0 
* 0 
+2 0 4
+7 0 4
+4 0 4
+6 0 4
+5 0 4
jcnd=1/4 +40 0 
* 0 
+2 0 3
+3 0 3
+3 0 3
+2 0 3
+7 0 3
+6 0 3
jcnd=3/3 +17 0 
* 0 
+17 0 4
+5 0 4
+6 0 4
+7 0 4
+5 0 4
+5 0 4
-23 0 32
+6 0 32
+7 0 32
+5 0 32
+5 0 32
+6 0 36
jcnd=36/36 0x54ec0 0 
* 0 
+32 0 20
+6 0 20
+6 0 20
+3 0 20
jcnd=20/20 +39 0 
* 0 
+39 0 20
+3 0 20
jcnd=20/20 +39 0 
* 0 
+39 0 36
+7 0 36
+3 0 36
jcnd=36/36 0x5481c 0 
* 0 
0x5481c 0 36
+6 0 36
+3 0 36
jcnd=18/36 0x548b2 0 
* 0 
+6 0 18
+6 0 18
+6 0 18
+2 0 18
+6 0 18
+3 0 18
+5 0 18
+4 0 18
+4 0 18
+3 0 18
jcnd=18/18 0x5515c 0 
* 0 
+86 0 18
+3 0 18
+4 0 18
+3 0 18
+7 0 18
+6 0 18
+3 0 18
+3 0 18
+5 0 18
+2 0 18
-26 0 18
+7 0 18
+6 0 18
+3 0 18
+3 0 18
+5 0 18
+2 0 18
+6 0 36
+4 0 36
+6 0 36
+3 0 36
+6 0 36
+4 0 36
+2 0 36
+6 0 36
+4 0 36
jcnd=36/36 0x55afc 0 
* 0 
+6 0 36
+3 0 36
jump=36 0x5518c 0 
* 0 
+10 0 36
+4 0 36
+4 0 36
+6 0 36
+4 0 36
+8 0 36
+8 0 36
jcnd=36/36 0x54be0 0 
* 0 
0x54b02 0 36
+4 0 36
+9 0 36
+3 0 36
+6 0 36
+4 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
0x54be0 0 36
+7 0 36
+4 0 36
+5 0 36
+7 0 36
+5 0 36
+3 0 36
cfn=(914) __mpn_extract_double
calls=36 0x4a0c0 0 
* 0 720
+5 0 36
+2 0 36
+7 0 36
+3 0 36
+3 0 36
jump=36 0x53ff2 0 
* 0 
0x54db3 0 11
+3 0 11
+6 0 16
+4 0 16
+4 0 16
+3 0 16
+3 0 16
+6 0 16
+6 0 16
+3 0 16
+2 0 16
jcnd=16/16 +37 0 
* 0 
+13 0 1
+6 0 1
+4 0 1
+2 0 1
+4 0 1
+2 0 1
+6 0 17
+3 0 17
jcnd=1/17 -27 0 
* 0 
+2 0 16
+7 0 16
jcnd=16/16 +31 0 
* 0 
+31 0 16
+3 0 16
+2 0 16
+6 0 16
+6 0 16
+6 0 16
+6 0 16
+3 0 16
jcnd=16/16 0x54700 0 
* 0 
0x54ec0 0 36
+3 0 36
+2 0 36
+3 0 36
jcnd=20/36 0x546a0 0 
* 0 
+6 0 16
+3 0 16
jcnd=11/16 0x54db3 0 
* 0 
+6 0 5
jump=5 0x54dbc 0 
* 0 
0x54fa8 0 18
+2 0 18
jcnd=18/18 0x552c0 0 
* 0 
0x55030 0 36
+4 0 36
+7 0 36
cfn=(1044) __mpn_cmp
calls=36 0x48870 0 
* 0 432
+5 0 36
+2 0 36
jcnd=18/36 0x54148 0 
* 0 
+6 0 18
+4 0 18
jump=18 0x541c0 0 
* 0 
0x550e0 0 18
+6 0 18
+3 0 18
+2 0 18
+6 0 18
+4 0 18
+7 0 18
+6 0 18
+5 0 18
+10 0 18
+10 0 18
+6 0 18
jump=18 0x54425 0 
* 0 
-37 0 18
+6 0 18
+5 0 18
+10 0 18
+10 0 18
+6 0 18
jump=18 0x54425 0 
* 0 
+59 0 18
+4 0 18
+8 0 18
jump=18 0x548a8 0 
* 0 
+8 0 36
+10 0 36
jump=36 0x54482 0 
* 0 
+18 0 36
+3 0 36
+4 0 36
jcnd=36/36 0x55990 0 
* 0 
0x551f8 0 18
+10 0 18
+6 0 18
+3 0 18
+2 0 18
+6 0 18
+6 0 18
+6 0 18
+2 0 18
jcnd=18/18 0x55ac0 0 
* 0 
0x552c0 0 18
+2 0 18
+3 0 18
+3 0 18
+6 0 18
cfn=(916) __mpn_lshift
calls=18 0x48d10 0 
* 0 288
+5 0 18
+7 0 18
+6 0 18
+7 0 18
+10 0 18
+4 0 18
+2 0 18
+7 0 18
+7 0 18
+7 0 18
+4 0 18
+4 0 18
+10 0 18
+6 0 18
+7 0 18
jump=18 0x553d3 0 
* 0 
+24 0 36
+7 0 36
+4 0 36
+3 0 36
+3 0 36
jcnd=36/36 0x55420 0 
* 0 
+14 0 36
+4 0 36
+8 0 36
+3 0 36
+7 0 36
+3 0 36
+5 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+6 0 36
+4 0 36
+3 0 36
jcnd=36/36 0x55438 0 
* 0 
+6 0 216
+7 0 216
+4 0 216
+3 0 216
jcnd=18/216 0x55d8f 0 
* 0 
+6 0 198
+2 0 198
+6 0 216
+4 0 216
+3 0 216
jcnd=180/216 -35 0 
* 0 
+2 0 36
+4 0 36
+4 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
+3 0 36
+6 0 36
+5 0 36
+3 0 36
+3 0 36
cfn=(918) __mpn_mul
calls=36 0x48f90 0 
* 0 2736
+5 0 36
jump=36 0x55343 0 
* 0 
+7 0 36
+4 0 36
+4 0 36
jump=36 0x55362 0 
* 0 
+16 0 36
+3 0 36
+5 0 36
+3 0 36
+3 0 36
+2 0 36
+6 0 36
+3 0 36
+2 0 36
+2 0 36
+6 0 36
+4 0 36
+3 0 36
+3 0 36
jcnd=36/36 0x562e9 0 
* 0 
0x55576 0 36
+2 0 36
+2 0 36
+7 0 36
+4 0 36
jcnd=36/36 +16 0 
* 0 
+16 0 36
+7 0 36
+7 0 36
+3 0 36
+6 0 36
+4 0 36
jcnd=36/36 +33 0 
* 0 
+33 0 36
+7 0 36
+7 0 36
cob=(5)
cfi=(4)
cfn=(928)
calls=36 0x78dd2d0 0 
* 0 792
+5 0 36
+7 0 36
+7 0 36
+3 0 36
+3 0 36
jcnd=36/36 0x55f50 0 
* 0 
+43 0 36
+7 0 36
+6 0 36
+5 0 36
+3 0 36
+7 0 36
+2 0 36
+6 0 36
+7 0 36
+4 0 36
+4 0 36
+3 0 36
+5 0 36
+4 0 36
+3 0 36
+6 0 36
+3 0 36
+7 0 36
+7 0 36
+3 0 36
+7 0 36
+3 0 36
+7 0 36
+7 0 36
jump=36 +33 0 
* 0 
+9 0 342
+3 0 342
+6 0 342
+2 0 342
+4 0 342
+4 0 342
+3 0 342
jcnd=36/342 +39 0 
* 0 
+2 0 378
+4 0 378
+3 0 378
jcnd=342/378 -31 0 
* 0 
+2 0 36
+4 0 36
+3 0 36
+7 0 36
+3 0 36
cfn=(930) __mempcpy_avx_unaligned_erms
calls=36 0x15fc40 0 
* 0 648
+6 0 36
+3 0 36
jcnd=36/36 -35 0 
* 0 
+2 0 36
+7 0 36
+7 0 36
+7 0 36
+7 0 36
+4 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
jcnd=36/36 0x558f8 0 
* 0 
0x55784 0 36
+7 0 36
+3 0 36
+6 0 36
+7 0 36
+4 0 36
jcnd=36/36 0x54b02 0 
* 0 
0x558f8 0 36
+3 0 36
+3 0 36
+6 0 36
+7 0 36
+3 0 36
+3 0 36
+7 0 36
jump=36 +42 0 
* 0 
+8 0 378
+4 0 378
+5 0 378
+3 0 378
+3 0 378
+4 0 378
+3 0 378
+3 0 378
+3 0 378
jcnd=36/378 0x55a00 0 
* 0 
+6 0 378
+4 0 378
+5 0 378
+5 0 378
+5 0 378
jcnd=378/378 -53 0 
* 0 
+59 0 36
+4 0 36
jcnd=36/36 0x55576 0 
* 0 
0x55a00 0 36
+7 0 36
+3 0 36
jump=36 0x55784 0 
* 0 
0x55aa2 0 30
cfn=(922)
calls=30 0x48e30 0 
* 0 540
+5 0 30
+4 0 30
+6 0 30
+3 0 30
+7 0 30
jump=30 0x553b7 0 
* 0 
+5 0 18
+4 0 18
+7 0 18
jump=18 0x550fc 0 
* 0 
+49 0 36
+7 0 36
+3 0 36
+6 0 36
+2 0 36
jcnd=36/36 0x548fb 0 
* 0 
0x55c78 0 18
+3 0 18
+3 0 18
+4 0 18
+4 0 18
+3 0 18
+4 0 18
+4 0 18
+3 0 18
+3 0 18
+3 0 18
cfn=(916)
calls=18 0x48d10 0 
* 0 288
+5 0 18
+6 0 18
+7 0 18
+2 0 18
+3 0 18
+3 0 18
+3 0 18
+3 0 18
+3 0 18
+7 0 18
+3 0 18
+6 0 18
+4 0 18
+7 0 18
+7 0 18
+4 0 18
jump=18 0x540a8 0 
* 0 
0x55d54 0 18
+7 0 18
+6 0 18
+10 0 18
+7 0 18
+7 0 18
+4 0 18
+3 0 18
jump=18 0x54584 0 
* 0 
+15 0 18
+7 0 18
+2 0 18
jcnd=16/18 0x55e2e 0 
* 0 
+6 0 2
+7 0 2
+4 0 2
+5 0 2
+7 0 2
cfn=(920)
calls=2 0x49370 0 
* 0 73
+5 0 2
+4 0 2
+2 0 2
+5 0 2
+7 0 2
+4 0 2
+5 0 2
+7 0 2
+7 0 2
+2 0 2
jcnd=2/2 0x5620a 0 
* 0 
+55 0 2
+4 0 2
+7 0 2
+7 0 2
+6 0 2
+6 0 2
jump=2 0x54350 0 
* 0 
-12 0 16
+6 0 16
+6 0 16
jump=16 0x54350 0 
* 0 
0x55f50 0 36
+11 0 36
+3 0 36
jump=36 0x55623 0 
* 0 
0x5620a 0 2
+7 0 2
cfn=(922)
calls=2 0x48e30 0 
* 0 40
+5 0 2
jump=2 0x55e1c 0 
* 0 
0x562e9 0 36
+4 0 36
+6 0 36
+2 0 36
+7 0 36
+5 0 36
+5 0 36
+3 0 36
+2 0 36
jcnd=6/36 +12 0 
* 0 
+2 0 30
+3 0 30
+2 0 30
jump=30 0x55aa2 0 
* 0 
+5 0 6
+5 0 6
cfn=(916)
calls=6 0x48d10 0 
* 0 120
+5 0 6
+4 0 6
+7 0 6
+4 0 6
+6 0 6
+7 0 6
+5 0 6
jump=6 0x553b7 0 
* 0 
0x564c4 0 18
+3 0 18
+6 0 18
+2 0 18
+6 0 18
+3 0 18
+3 0 18
+5 0 18
+3 0 18
jump=18 0x542d4 0 
* 0 

fn=(918)
0x48f90 0 36
+4 0 36
+1 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+2 0 36
+1 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+9 0 36
+4 0 36
+2 0 36
+4 0 36
+2 0 36
+3 0 36
jcnd=36/36 +42 0 
* 0 
+2 0 36
+4 0 36
+9 0 36
+6 0 36
+4 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+7 0 36
+3 0 36
+4 0 36
jcnd=36/36 0x49180 0 
* 0 
0x49180 0 36
+4 0 36
cfn=(920)
calls=36 0x49370 0 
* 0 1188
+5 0 36
+4 0 36
+8 0 36
+4 0 36
+4 0 36
+4 0 36
jcnd=36/36 0x48fd0 0 
* 0 

fn=(1044)
0x48870 0 36
+4 0 36
+4 0 36
jcnd=36/36 +18 0 
* 0 
+18 0 36
+4 0 36
+4 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+3 0 36

fn=(1102)
0xb70d0 0 36
+4 0 36
+3 0 36
+5 0 36
cfn=(1104) __tz_convert
calls=36 0xb8b20 0 
* 0 24120

fn=(1118)
0x15ac00 0 36
+4 0 36
+2 0 36
+2 0 36
+4 0 36
+2 0 36
+5 0 36
+5 0 36
+6 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+2 0 36
+2 0 36
+4 0 36
+4 0 36
+4 0 36
+2 0 36
+3 0 36

fn=(26)
0xfc340 0 514
+4 0 514
+5 0 514
+2 0 514

fn=(678)
0x15f700 0 126
+4 0 126
+2 0 126
+3 0 126
+4 0 126
+3 0 126
+3 0 126
jcnd=54/126 +45 0 
* 0 
+2 0 72
+4 0 72
+4 0 72
+2 0 72
jcnd=72/72 0x15f810 0 
* 0 
+33 0 54
+3 0 54
+4 0 54
+4 0 54
+4 0 54
+2 0 54
+2 0 54
jcnd=18/54 +29 0 
* 0 
+2 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+11 0 18
+4 0 18
+4 0 18
+4 0 18
+2 0 18
jcnd=18/18 0x15f810 0 
* 0 
0x15f810 0 90
+4 0 90
+3 0 90
+3 0 90
+3 0 90

fn=(888)
0x806c0 0 36
+4 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 36
+3 0 36
+1 0 36
+3 0 36
+4 0 36
+3 0 36
jcnd=36/36 +86 0 
* 0 
+15 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
cfn=(890) _IO_setb
calls=36 0x7eb00 0 
* 0 684
+5 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+2 0 36
+4 0 36
+4 0 36
+4 0 36
+11 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+5 0 36
+3 0 36
+7 0 36
+3 0 36
+4 0 36
jump=36 -88 0 
* 0 

fn=(890)
0x7eb00 0 36
+4 0 36
+1 0 36
+3 0 36
+4 0 36
+4 0 36
+2 0 36
+3 0 36
jcnd=36/36 +6 0 
* 0 
+6 0 36
+4 0 36
+2 0 36
+3 0 36
+3 0 36
+2 0 36
+4 0 36
+3 0 36
+2 0 36
+4 0 36
+1 0 36

fn=(916)
0x48d10 0 42
+4 0 42
+5 0 42
+5 0 42
+2 0 42
+3 0 42
jcnd=42/42 +32 0 
* 0 
+32 0 42
+3 0 42
jcnd=6/42 +42 0 
* 0 
+2 0 36
+3 0 36
+2 0 36
+4 0 36
+4 0 36
jcnd=36/36 +20 0 
* 0 
+20 0 36
+3 0 36
+3 0 36
+1 0 6
+2 0 6
+3 0 6
+4 0 6
+2 0 6
+4 0 6
+4 0 6
jcnd=6/6 +16 0 
* 0 
+16 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6

fn=(920)
0x49370 0 234
+4 0 234
+1 0 234
+3 0 234
+3 0 234
+3 0 234
+3 0 234
+3 0 234
+3 0 234
+4 0 234
+3 0 234
+2 0 234
+3 0 234
jcnd=60/234 +91 0 
* 0 
+2 0 174
jcnd=1/174 +68 0 
* 0 
+2 0 173
+3 0 173
+2 0 173
+3 0 173
jump=173 0x49484 0 
* 0 
+58 0 1
+5 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +89 0 
* 0 
+2 0 60
+5 0 60
+5 0 60
+3 0 60
+3 0 60
+2 0 60
+3 0 60
+5 0 60
+3 0 60
jump=60 +94 0 
* 0 
+58 0 1
+5 0 1
+3 0 1
+5 0 1
+6 0 1
+3 0 1
+3 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
-7 0 60
+3 0 60
+4 0 60
+2 0 61
+4 0 61
+3 0 61
+3 0 61
+5 0 61
+3 0 61
+3 0 61
+1 0 61
-4 0 173
+3 0 173
+1 0 173

fn=(1178) _IO_file_overflow@@GLIBC_2.2.5
0x7dcb0 0 18
+4 0 18
+2 0 18
+3 0 18
+6 0 18
+2 0 18
+1 0 18
+2 0 18
+1 0 18
+3 0 18
+4 0 18
+3 0 18
+2 0 18
+3 0 18
+6 0 18
+4 0 18
+3 0 18
jcnd=18/18 0x7dd89 0 
* 0 
0x7dd89 0 18
+4 0 18
+3 0 18
+1 0 18
+1 0 18
+2 0 18
+3 0 18
cfn=(1180) _IO_do_write@@GLIBC_2.2.5
calls=18 0x7d9c0 0 
* 0 2826

fn=(1182) new_do_write
0x7bb60 0 36
+2 0 36
+3 0 36
+2 0 36
+7 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 36
+7 0 36
+1 0 36
+3 0 36
+3 0 36
+4 0 36
+7 0 36
+3 0 36
+3 0 36
+6 0 36
jcnd=18/36 0x7bc18 0 
* 0 
+2 0 18
+11 0 18
+3 0 18
-3 0 18
+3 0 18
+6 0 36
+3 0 36
+3 0 36
+3 0 36
cfn=(1184)
calls=36 0x7c830 0 
* 0 3312
+5 0 36
+7 0 36
+3 0 36
+3 0 36
jcnd=36/36 +11 0 
* 0 
+11 0 36
+4 0 36
+6 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+2 0 36
jcnd=36/36 0x7bc60 0 
* 0 
+2 0 18
+4 0 18
+4 0 18
+4 0 18
+3 0 18
+1 0 18
+1 0 18
+2 0 18
+2 0 18
+2 0 18
+2 0 18
-21 0 18
+4 0 18
+4 0 18
+3 0 18
+1 0 18
+1 0 18
+2 0 18
+2 0 18
+2 0 18
+2 0 18
+6 0 18
+4 0 18
+4 0 18
+3 0 18
jcnd=18/18 0x7bba8 0 
* 0 
+61 0 36
+6 0 36
jcnd=18/36 0x7bbfd 0 
* 0 
+2 0 18
jump=18 0x7bbf9 0 
* 0 

fn=(156)
0x70d10 0 762
+4 0 762
+3 0 762
+6 0 762
+1 0 762
+1 0 762
+3 0 762
+4 0 762
+2 0 762
+5 0 762
+2 0 762
+7 0 762
+9 0 762
+4 0 762
+2 0 762
+5 0 762
+7 0 762
+2 0 762
+5 0 762
+2 0 762
jump=762 +30 0 
* 0 
+30 0 762
+7 0 762
+4 0 762
+5 0 762
+7 0 762
+7 0 762
+7 0 762
+3 0 762
+3 0 762
+3 0 762
+3 0 762
+2 0 762
+3 0 762
cfn=(158) _IO_file_sync@@GLIBC_2.2.5
calls=762 0x7b9b0 0 
* 0 16704
+3 0 762
+2 0 762
+2 0 762
+3 0 762
+2 0 762
+6 0 762
+2 0 762
+7 0 762
+4 0 762
+2 0 762
+8 0 762
+7 0 762
+2 0 762
+3 0 762
+2 0 762
jump=762 +28 0 
* 0 
+28 0 762
+4 0 762
+2 0 762
+1 0 762
+1 0 762

fn=(274) malloc
0x858d0 0 140713532
+4 0 140713532
+2 0 140713532
+2 0 140713532
+1 0 140713532
+1 0 140713532
+4 0 140713532
+7 0 140713532
+3 0 140713532
+3 0 140713532
+6 0 140713532
+4 0 140713532
+4 0 140713532
jcnd=140713532/140713532 0x859c0 0 
* 0 
+13 0 140713532
+3 0 140713532
+6 0 140713532
+2 0 140713532
+6 0 140713532
+7 0 140713532
+4 0 140713532
+3 0 140713532
+3 0 140713532
+5 0 140713532
+4 0 140713532
+3 0 140713532
+6 0 140713532
+7 0 140713532
jcnd=140536385/140713532 0x85a08 0 
* 0 
+6 0 11012104
+7 0 11012104
+2 0 11012104
+2 0 11012104
jcnd=11012104/11012104 0x85a88 0 
* 0 
0x859c0 0 140713532
+4 0 140713532
+4 0 140713532
+3 0 140713532
jump=140713532 0x85906 0 
* 0 
+61 0 140536385
+4 0 140536385
+4 0 140536385
+3 0 140536385
jcnd=10834957/140536385 0x85947 0 
* 0 
+6 0 129701428
+7 0 129701428
+6 0 129701428
+3 0 129701428
+4 0 129701428
+5 0 129701428
+4 0 129701428
+3 0 129701428
+1 0 129701428
+1 0 129701428
+2 0 129701428
+2 0 129701428
-13 0 11012104
+4 0 11012104
+3 0 11012104
+1 0 11012104
+1 0 11012104
+2 0 11012104
+2 0 11012104
+73 0 11012104
+7 0 11012104
+4 0 11012104
+3 0 11012104
+6 0 11012104
+5 0 11012104
+2 0 11012104
+7 0 11012104
+2 0 11012104
+4 0 11012104
+2 0 11012104
jump=11012104 +29 0 
* 0 
+29 0 11012104
+3 0 11012104
+3 0 11012104
cfn=(352)
calls=11012104 0x83a30 0 
* 0 829618899
+5 0 11012104
+3 0 11012104
+3 0 11012104
+6 0 11012104
+7 0 11012104
+2 0 11012104
+3 0 11012104
+2 0 11012104
jump=11012104 +28 0 
* 0 
+28 0 11012104
+3 0 11012104
+6 0 11012104
+4 0 11012104
+2 0 11012104
+6 0 11012104
+7 0 11012104
+2 0 11012104
jcnd=2733268/11012104 +15 0 
* 0 
+2 0 8278836
+4 0 8278836
+6 0 8278836
+3 0 8278836
+3 0 8278836
jcnd=8278836/8278836 0x85a32 0 
* 0 
-3 0 2733268
+3 0 2733268
jcnd=2733268/2733268 0x85a32 0 
* 0 

fn=(886)
0x7f130 0 36
+4 0 36
+6 0 36
+6 0 36
+7 0 36
+2 0 36
+2 0 36
+2 0 36
+7 0 36
+2 0 36
+8 0 36
+7 0 36
+7 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+8 0 36
+3 0 36
jcnd=36/36 +17 0 
* 0 
+17 0 36

fn=(914)
0x4a0c0 0 36
+4 0 36
+5 0 36
+5 0 36
+4 0 36
+2 0 36
+5 0 36
+10 0 36
+4 0 36
+3 0 36
+4 0 36
+6 0 36
+6 0 36
+2 0 36
+3 0 36
+5 0 36
jcnd=36/36 +60 0 
* 0 
+60 0 36
+5 0 36
+5 0 36
+3 0 36

fn=(930)
0x15fc40 0 72
+4 0 72
+3 0 72
+3 0 72
jump=72 +29 0 
* 0 
+29 0 72
+4 0 72
jcnd=72/72 +75 0 
* 0 
+75 0 72
+3 0 72
jcnd=36/72 +25 0 
* 0 
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+2 0 36
+3 0 36
+2 0 36
+1 0 36
+4 0 36
+6 0 36
+4 0 36
+6 0 36

fn=(1120) __offtime
0xb6a60 0 36
+4 0 36
+2 0 36
+3 0 36
+10 0 36
+2 0 36
+1 0 36
+1 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+7 0 36
+3 0 36
+3 0 36
jcnd=36/36 0xb6d7b 0 
* 0 
+23 0 36
+10 0 36
+3 0 36
+10 0 36
+10 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+7 0 36
+3 0 36
+10 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+10 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+8 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+5 0 36
+3 0 36
+4 0 36
jump=36 0xb6cc6 0 
* 0 
+9 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
+3 0 36
-3 0 36
+3 0 36
+6 0 72
+3 0 72
+5 0 72
+3 0 72
jcnd=72/72 +84 0 
* 0 
+84 0 72
+3 0 72
jcnd=36/72 0xb6b68 0 
* 0 
+6 0 36
+6 0 36
+7 0 36
+4 0 36
+2 0 36
+3 0 36
jcnd=36/36 +67 0 
* 0 
+46 0 36
+7 0 36
+2 0 36
jump=36 0xb6ab5 0 
* 0 
+12 0 36
+4 0 36
+7 0 36
+3 0 36
jcnd=36/36 +59 0 
* 0 
+59 0 36
+5 0 36
+5 0 36
+3 0 36
jcnd=36/36 +73 0 
* 0 
+2 0 36
+3 0 36
+1 0 36
+1 0 36
+4 0 36
+3 0 36
+5 0 36
+2 0 36
+2 0 36
+4 0 36
+46 0 36
+5 0 36
+4 0 36
+5 0 36
+3 0 36
jcnd=36/36 -88 0 
* 0 

fn=(1176)
0x7ce20 0 36
+4 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+3 0 36
+1 0 36
+1 0 36
+4 0 36
+3 0 36
+2 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+2 0 36
+5 0 36
+5 0 36
jcnd=18/36 0x7ceb8 0 
* 0 
+2 0 18
+4 0 18
+3 0 18
+6 0 18
+3 0 18
+3 0 18
+3 0 18
+3 0 18
+6 0 36
+3 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
cfn=(930)
calls=36 0x15fc40 0 
* 0 468
+6 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
jcnd=18/36 0x7cf03 0 
* 0 
+2 0 18
+3 0 18
+3 0 18
+4 0 18
+3 0 18
+1 0 18
+1 0 18
+2 0 18
+2 0 18
+2 0 18
+2 0 18
-17 0 18
+4 0 18
+3 0 18
+1 0 18
+1 0 18
+2 0 18
+2 0 18
+2 0 18
+2 0 18
+8 0 18
+4 0 18
+3 0 18
+3 0 18
+2 0 18
+4 0 18
+3 0 18
+2 0 18
+4 0 18
+4 0 18
+2 0 18
jump=18 0x7cfc0 0 
* 0 
+44 0 18
+7 0 18
+7 0 18
+7 0 18
+3 0 18
+3 0 18
+3 0 18
+3 0 18
+6 0 18
+5 0 18
+3 0 18
cfn=(1178)
calls=18 0x7dcb0 0 
* 0 3258
+5 0 18
+3 0 18
+2 0 18
+4 0 18
+4 0 18
+3 0 18
+4 0 18
+2 0 18
+3 0 18
+2 0 18
+3 0 18
+3 0 18
+3 0 18
+2 0 18
+3 0 18
+3 0 18
jcnd=18/18 0x7ce9f 0 
* 0 
+93 0 18
+3 0 18
+4 0 18
+3 0 18
jcnd=18/18 +51 0 
* 0 
+51 0 18
+6 0 18
jump=18 0x7ce74 0 
* 0 

fn=(158)
0x7b9b0 0 762
+4 0 762
+1 0 762
+1 0 762
+3 0 762
+4 0 762
+4 0 762
+4 0 762
+3 0 762
jcnd=744/762 +56 0 
* 0 
+2 0 18
+6 0 18
+2 0 18
jcnd=18/18 0x7ba60 0 
* 0 
+38 0 18
+2 0 18
+6 0 762
+4 0 762
+4 0 762
jcnd=762/762 +65 0 
* 0 
+65 0 762
+11 0 762
+2 0 762
+4 0 762
+1 0 762
+1 0 762
+4 0 18
+3 0 18
cfn=(1180)
calls=18 0x7d9c0 0 
* 0 2808
+5 0 18
+2 0 18
+3 0 18
jump=18 0x7b9f8 0 
* 0 

fn=(526)
0x82540 0 45389
+2 0 45389
+2 0 45389
+1 0 45389
+1 0 45389
+4 0 45389
+7 0 45389
+4 0 45389
+4 0 45389
+4 0 45389
+3 0 45389
+2 0 45389
+7 0 45389
+3 0 45389
+4 0 45389
+3 0 45389
+3 0 45389
+3 0 45389
+2 0 45389
+7 0 45389
+2 0 45389
cfn=(528) __default_morecore
calls=45389 0x873e0 0 
* 0 1225503
+4 0 45389
+3 0 45389
+7 0 45389
+3 0 45389
+3 0 45389
+2 0 45389
+2 0 45389
+4 0 45389
+1 0 45389
+1 0 45389
+2 0 45389
+2 0 45389

fn=(528)
0x873e0 0 45389
+4 0 45389
+4 0 45389
cfn=(530)
calls=45389 0xf2740 0 
* 0 862391
+5 0 45389
+5 0 45389
+4 0 45389
+4 0 45389
+4 0 45389

fn=(910)
0x565c0 0 36
+4 0 36
+7 0 36
+3 0 36
+4 0 36
+3 0 36
+3 0 36
cfn=(912)
calls=36 0x53c90 0 
* 0 61593

fn=(1020)
0x15b560 0 36
+4 0 36
+3 0 36
+6 0 36
+2 0 36
+4 0 36
+5 0 36
+3 0 36
+3 0 36
jcnd=36/36 +66 0 
* 0 
+66 0 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
+2 0 36
+2 0 36
jcnd=18/36 +29 0 
* 0 
+2 0 18
+4 0 18
+3 0 18
+6 0 18
+3 0 18
+3 0 18
+3 0 18
+5 0 18
+3 0 18
+4 0 18
+3 0 18
jcnd=18/18 0x15b7c0 0 
* 0 
0x15b7c0 0 18
+3 0 18
+2 0 18

fn=(1104)
0xb8b20 0 36
+4 0 36
+2 0 36
+1 0 36
+1 0 36
+4 0 36
+9 0 36
+5 0 36
+2 0 36
+3 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
+5 0 36
+2 0 36
+7 0 36
+2 0 36
+8 0 36
+2 0 36
jump=36 +37 0 
* 0 
+37 0 36
+7 0 36
+3 0 36
+3 0 36
+2 0 36
+3 0 36
+4 0 36
+2 0 36
cfn=(1106) tzset_internal
calls=36 0xb87c0 0 
* 0 216
+5 0 36
+6 0 36
+2 0 36
jcnd=36/36 0xb8c60 0 
* 0 
+46 0 36
+7 0 36
+2 0 36
+7 0 36
+2 0 36
jump=36 +36 0 
* 0 
+36 0 36
+3 0 36
+2 0 36
+3 0 36
+2 0 36
+4 0 36
+5 0 36
+3 0 36
+3 0 36
cfn=(1120)
calls=36 0xb6a60 0 
* 0 7452
+5 0 36
+2 0 36
+2 0 36
+4 0 36
+2 0 36
+3 0 36
+5 0 36
+9 0 36
+6 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36
+3 0 36
+4 0 36
+5 0 36
+3 0 36
+3 0 36
+5 0 36
cfn=(1108) __tzfile_compute
calls=36 0xb9cb0 0 
* 0 14112
+5 0 36
jump=36 0xb8be0 0 
* 0 

fn=(1106)
0xb87c0 0 36
+6 0 36
+2 0 36
+2 0 36
+3 0 36
jcnd=36/36 0xb8910 0 
* 0 
0xb8910 0 36

fn=(1108)
0xb9cb0 0 36
+4 0 36
+2 0 36
+3 0 36
+2 0 36
+2 0 36
+2 0 36
+1 0 36
+3 0 36
+1 0 36
+4 0 36
+5 0 36
+5 0 36
+9 0 36
+5 0 36
+2 0 36
+2 0 36
+6 0 36
+7 0 36
+7 0 36
+8 0 36
+8 0 36
+3 0 36
+6 0 36
+7 0 36
+3 0 36
+6 0 36
+5 0 36
+3 0 36
+6 0 36
+3 0 36
+4 0 36
+10 0 36
+4 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
jcnd=36/36 0xb9f80 0 
* 0 
+44 0 36
+7 0 36
+5 0 36
+4 0 36
+7 0 36
+5 0 36
+4 0 36
+7 0 36
cfn=(1110)
calls=36 0xb8610 0 
* 0 5076
+5 0 36
+7 0 36
+7 0 36
+5 0 36
+7 0 36
jcnd=36/36 +26 0 
* 0 
+26 0 36
+5 0 36
+4 0 36
+3 0 36
+5 0 36
+6 0 36
+3 0 36
+2 0 36
+4 0 36
+7 0 36
+5 0 36
cfn=(1110)
calls=36 0xb8610 0 
* 0 3060
+5 0 36
+5 0 36
+7 0 36
+7 0 36
+5 0 36
+5 0 36
+3 0 36
+2 0 36
+6 0 36
+2 0 36
+8 0 36
+4 0 36
+3 0 36
+6 0 36
+5 0 36
+4 0 36
+3 0 36
+7 0 36
+2 0 36
+7 0 36
+7 0 36
+4 0 36
+3 0 36
+2 0 36
+7 0 36
+3 0 36
+3 0 36
+6 0 36
+5 0 36
+6 0 36
+4 0 36
+5 0 36
+5 0 36
+3 0 36
+4 0 36
+7 0 36
+3 0 36
cob=(5)
cfi=(4)
cfn=(1116)
calls=36 0x78dd380 0 
* 0 828
+5 0 36
+2 0 36
+6 0 36
+5 0 36
+3 0 36
+4 0 36
+4 0 36
+7 0 36
+7 0 36
+5 0 36
+8 0 36
+6 0 36
+4 0 36
+4 0 36
+5 0 36
jump=36 +33 0 
* 0 
+33 0 36
+4 0 36
+2 0 36
+5 0 36
+9 0 36
+6 0 36
+4 0 36
+1 0 36
+1 0 36
+2 0 36
+2 0 36
+2 0 36
+2 0 36
+54 0 36
+3 0 36
+3 0 36
+4 0 36
+3 0 36
+8 0 36
+4 0 36
+6 0 36
+4 0 36
+6 0 36
+5 0 36
jcnd=36/36 0xba04d 0 
* 0 
0xba04d 0 36
+5 0 36
+2 0 36
+3 0 36
+4 0 36
jump=36 0xb9d7d 0 
* 0 

fn=(1114)
0x15bcf0 0 144
+4 0 144
+4 0 144
jcnd=144/144 0x15bea0 0 
* 0 
0x15be20 0 36
+4 0 36
+4 0 36
+4 0 36
+4 0 36
+6 0 36
+6 0 36
+3 0 36
+3 0 36
+3 0 36
jcnd=36/36 +11 0 
* 0 
+11 0 36
+16 0 108
+3 0 108
+3 0 108
+3 0 108
+3 0 108
+2 0 108
+2 0 108
+4 0 108
+4 0 108
+2 0 108
+38 0 144
+3 0 144
+2 0 144
+2 0 144
+3 0 144
jcnd=108/144 -74 0 
* 0 
+2 0 36
+3 0 36
jcnd=36/36 0x15be20 0 
* 0 

fn=(1180)
0x7d9c0 0 36
+4 0 36
+3 0 36
jcnd=36/36 +9 0 
* 0 
+9 0 36
+1 0 36
+3 0 36
cfn=(1182)
calls=36 0x7bb60 0 
* 0 5202
+5 0 36
+3 0 36
+1 0 36
+3 0 36
+3 0 36
+2 0 36

ob=(10)
fl=(85)
fn=(1652)
0x8e620 32 17
+4 +1 17
cfi=(36)
cfn=(240)
calls=17 -20 +15 
* * 1428

fl=(36)
fn=(240)
0x8e610 48 140713510
+4 +1 140713510
cob=(1)
cfi=(6)
cfn=(242)
calls=140713510 0x85f20 -49 
* * 12135989673

fl=(42)
fn=(272)
0x905e0 43 140713532
+4 * 140713532
+1 +5 140713532
+3 -5 140713532
+3 +5 140713532
+5 * 140713532
+4 +2 140713532
+3 * 140713532
cob=(1)
cfi=(6)
cfn=(274)
calls=140713532 0x858d0 -50 
* * 7808658047
+6 * 140713532
+3 * 140713532
+2 +9 140713532
+1 * 140713532

fl=(35)
fn=(238)
0x8e640 34 140713477
+4 +1 140713477
cfi=(36)
cfn=(240)
calls=140713477 -52 +13 
* * 12417409616

fl=(56)
fn=(644)
0xb2db0 139 180
+4 * 180

fn=(630)
0xb2d90 131 90
+4 * 90

fn=(636)
0xb2da0 133 90
+4 +1 90

fl=(5)
fn=(22)
0xb3650 55 514
+4 * 514
+4 +7 514
+2 -7 514
+9 * 514
+5 * 514
+2 +7 514
+3 * 514
cob=(1)
cfi=(6)
cfn=(24)
calls=514 0x1099c0 -62 
* * 12336
fi=(7) /build/gcc/src/gcc-build/x86_64-pc-linux-gnu/libstdc++-v3/include/chrono
+6 168 514
+8 458 514
fe=(5)
+5 76 514
+5 * 514
+9 * 514
+2 * 514
+4 * 514

fl=(41)
fn=(270)
0x906a0 31 140713496
+4 +1 140713496
cfi=(42)
cfn=(272)
calls=140713496 0x905e0 +11 
* * 9497214869

ob=(9)
fl=(33)
fn=(404) 0x0000000000079c80
0x79c80 0 3869667
+5 0 3869667
+5 0 3869667
+2 0 3869667
+4 0 3869667
+2 0 3869667
+6 0 3869667
+6 0 3869667
+2 0 3869667
+5 0 3869667
+6 0 3869667
+2 0 3869667
+2 0 3869667
+6 0 3869667
+2 0 3869667
+3 0 3869667
+4 0 3869667
+7 0 3869667
+3 0 3869667
+2 0 3869667
+3 0 3869667
+2 0 3869667
+2 0 3869667
+2 0 3869667
+3 0 3869667
+2 0 3869667
+7 0 3869667
+2 0 3869667
+2 0 3869667
+2 0 3869667
+2 0 3869667
+7 0 3869667
+2 0 3869667
+3 0 3869667
+2 0 3869667
+3 0 3869667
+3 0 3869667

fn=(202)
0xff80 0 162732423
+4 0 162732423
+4 0 162732423
+6 0 162732423
+5 0 162732423
cfn=(204) 0x0000000000079d50
calls=162732423 0x79d50 0 
* 0 9447613165
+6 0 162732423
+5 0 162732423
+8 0 162732423
+4 0 162732423
+8 0 162732423
+6 0 162732423
+4 0 162732423
+4 0 162732423
+2 0 162732423
+4 0 162732423
+4 0 162732423
jcnd=162732423/162732423 0x10050 0 
* 0 
+6 0 162732423
+4 0 162732423
0x10050 0 162732423
jcnd=162727788/162732423 0xffd0 0 
* 0 
+6 0 4635
+4 0 4635
+4 0 4635
+4 0 4635
+6 0 4635
+4 0 4635
+4 0 4635
+2 0 4635
jcnd=4635/4635 0xffd0 0 
* 0 

fn=(326) 0x0000000000079580
0x79580 0 14247263
+4 0 14247263
+5 0 14247263
+4 0 14247263
+9 0 14247263
+5 0 14247263
+2 0 14247263
+4 0 14247263
+2 0 14247263
+5 0 14247263
+6 0 14247263
+6 0 14247263
jcnd=14247263/14247263 0x79618 0 
* 0 
+68 0 14247263
+5 0 14247263
+9 0 14247263
+4 0 14247263
+6 0 14247263
+4 0 14247263
+4 0 14247263
+8 0 14247263
+4 0 14247263
+9 0 14247263
+7 0 14247263
+8 0 14247263
+4 0 14247263
+5 0 14247263
+9 0 14247263
+5 0 14247263
+9 0 14247263
+3 0 14247263
+8 0 14247263
+4 0 14247263
+5 0 14247263
+4 0 14247263
+4 0 14247263
+4 0 14247263
+5 0 14247263
+3 0 14247263
+2 0 14247263
+3 0 14247263
+5 0 14247263
+4 0 14247263
+6 0 14247263
+6 0 14247263
+3 0 14247263
+3 0 14247263
+3 0 14247263
+3 0 14247263
+2 0 14247263
+4 0 14247263
+9 0 14247263
+4 0 14247263
+5 0 14247263
+5 0 14247263
+5 0 14247263
+7 0 14247263
+5 0 14247263
+5 0 14247263
+4 0 14247263
+4 0 14247263
+5 0 14247263
+5 0 14247263
+5 0 14247263
+5 0 14247263
+4 0 14247263
+6 0 14247263
jump=14247263 0x795f8 0 
* 0 

fn=(204)
0x79d50 0 162732423
+4 0 162732423
+2 0 162732423
+4 0 162732423
+2 0 162732423
+1 0 162732423
+5 0 162732423
+1 0 162732423
+5 0 162732423
+4 0 162732423
+3 0 162732423
+4 0 162732423
+9 0 162732423
+5 0 162732423
+2 0 162732423
+2 0 162732423
jcnd=8905241/162732423 0x79e48 0 
* 0 
+6 0 153827182
+2 0 153827182
+6 0 153827182
+6 0 153827182
+2 0 153827182
jcnd=153827182/153827182 0x79e09 0 
* 0 
+61 0 162732423
+5 0 162732423
+9 0 162732423
+6 0 162732423
+4 0 162732423
+1 0 162732423
+1 0 162732423
+2 0 162732423
+2 0 162732423
+19 0 153827182
+8 0 153827182
+4 0 153827182
jcnd=153827182/153827182 0x7a230 0 
* 0 
+6 0 153827182
+8 0 153827182
jcnd=153827182/153827182 0x7a050 0 
* 0 
+6 0 5342022
+8 0 5342022
jcnd=5342022/5342022 0x7a438 0 
* 0 
+6 0 5342022
+8 0 5342022
jcnd=5342022/5342022 0x7a528 0 
* 0 
+9 0 14247263
+5 0 14247263
+3 0 14247263
+4 0 14247263
+3 0 14247263
+7 0 14247263
+5 0 14247263
jcnd=3869667/14247263 0x79f10 0 
* 0 
+6 0 10377596
+7 0 10377596
jcnd=10377596/10377596 0x7a088 0 
* 0 
+6 0 3869667
+4 0 3869667
+4 0 3869667
+6 0 3869667
jcnd=3869667/3869667 0x79fb0 0 
* 0 
0x79f10 0 3869667
+2 0 3869667
jcnd=3869667/3869667 0x79e76 0 
* 0 
0x79fb0 0 3869667
+3 0 3869667
+7 0 3869667
+7 0 3869667
jcnd=3869667/3869667 0x7a240 0 
* 0 
0x7a050 0 153827182
jcnd=5342022/153827182 0x79e29 0 
* 0 
+6 0 148485160
+4 0 148485160
jump=148485160 0x79dd8 0 
* 0 
+46 0 10377596
+6 0 10377596
+4 0 10377596
+3 0 10377596
+2 0 10377596
+3 0 10377596
+4 0 10377596
+2 0 10377596
+6 0 10377596
+8 0 10377596
+4 0 10377596
+8 0 10377596
+4 0 10377596
+4 0 10377596
+6 0 10377596
+8 0 10377596
+4 0 10377596
+4 0 10377596
+4 0 10377596
+4 0 10377596
+5 0 10377596
+5 0 10377596
+6 0 10377596
jcnd=10377596/10377596 +35 0 
* 0 
+35 0 10377596
+3 0 10377596
+4 0 10377596
+5 0 10377596
+5 0 10377596
jcnd=4745915/10377596 0x7a3e0 0 
* 0 
+6 0 5631681
+5 0 5631681
+2 0 5631681
+10 0 5631681
+4 0 5631681
+3 0 5631681
+3 0 5631681
+3 0 5631681
+8 0 5631681
+5 0 5631681
+6 0 5631681
+4 0 5631681
+5 0 5631681
+4 0 5631681
+3 0 5631681
+5 0 5631681
+7 0 5631681
jcnd=5631681/5631681 0x7a2b0 0 
* 0 
-47 0 4745915
+8 0 4745915
+5 0 4745915
+6 0 4745915
+4 0 4745915
+5 0 4745915
+4 0 4745915
+3 0 4745915
+5 0 4745915
+7 0 4745915
jcnd=440115/4745915 0x7a2b0 0 
* 0 
+6 0 4305800
+6 0 4305800
+3 0 4305800
jcnd=4305800/4305800 0x7a538 0 
* 0 
0x7a230 0 153827182
jcnd=153827182/153827182 0x79e1b 0 
* 0 
+16 0 3869667
+7 0 3869667
jcnd=3869667/3869667 0x7a450 0 
* 0 
0x7a2b0 0 6071796
+2 0 6071796
+5 0 6071796
+7 0 6071796
+4 0 6071796
+5 0 6071796
+3 0 6071796
+6 0 6071796
+5 0 6071796
+8 0 6071796
+3 0 6071796
+3 0 6071796
+5 0 6071796
+8 0 6071796
+5 0 6071796
+8 0 6071796
+5 0 6071796
+4 0 6071796
+4 0 6071796
+5 0 6071796
+4 0 6071796
+5 0 6071796
+5 0 6071796
+5 0 6071796
+4 0 6071796
+8 0 6071796
+8 0 6071796
+5 0 6071796
+8 0 6071796
+5 0 6071796
+8 0 6071796
+5 0 6071796
+5 0 6071796
+8 0 6071796
+5 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
+4 0 6071796
cfn=(326)
calls=6071796 0x79580 0 
* 0 400738536
-87 0 4305800
+5 0 4305800
+5 0 4305800
+8 0 4305800
+5 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
+4 0 4305800
cfn=(326)
calls=4305800 0x79580 0 
* 0 284182800
+6 0 10377596
+3 0 10377596
+8 0 10377596
+6 0 10377596
+4 0 10377596
+8 0 10377596
jcnd=10377596/10377596 +70 0 
* 0 
+22 0 4745915
+5 0 4745915
+2 0 4745915
+10 0 4745915
+4 0 4745915
+3 0 4745915
+5 0 4745915
+3 0 4745915
+3 0 4745915
jump=4745915 0x7a148 0 
* 0 
+13 0 10377596
+8 0 10377596
+6 0 10377596
jcnd=10377596/10377596 0x7a600 0 
* 0 
+26 0 5342022
jcnd=5342022/5342022 0x79e37 0 
* 0 
+24 0 3869667
+2 0 3869667
+6 0 3869667
+4 0 3869667
+6 0 3869667
+6 0 3869667
+6 0 3869667
cfn=(404)
calls=3869667 0x79c80 0 
* 0 143177679
+5 0 3869667
+6 0 3869667
+6 0 3869667
+2 0 3869667
+6 0 3869667
+6 0 3869667
+7 0 3869667
+6 0 3869667
+8 0 3869667
+4 0 3869667
+4 0 3869667
+3 0 3869667
jcnd=817083/3869667 0x7a7e0 0 
* 0 
+6 0 3052584
+6 0 3052584
+4 0 3052584
+6 0 3052584
+2 0 3052584
+3 0 3052584
+4 0 3052584
+2 0 3052584
+6 0 3052584
cfn=(205) 0x0000000000079d50'2
calls=3052584 0x79d50 0 
* 0 692946864
+5 0 3052584
+8 0 3052584
+6 0 3052584
+4 0 3052584
+4 0 3052584
+4 0 3052584
+4 0 3052584
+8 0 3052584
+8 0 3052584
jcnd=3052584/3052584 0x7a78d 0 
* 0 
+33 0 5342022
+6 0 5342022
jump=5342022 0x79e48 0 
* 0 
+10 0 4305800
+7 0 4305800
+2 0 4305800
+4 0 4305800
+8 0 4305800
+5 0 4305800
+3 0 4305800
+7 0 4305800
+3 0 4305800
+5 0 4305800
+5 0 4305800
+4 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+6 0 4305800
+3 0 4305800
+4 0 4305800
+3 0 4305800
+5 0 4305800
+3 0 4305800
+3 0 4305800
+4 0 4305800
+5 0 4305800
+5 0 4305800
+6 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
+4 0 4305800
+5 0 4305800
+8 0 4305800
+8 0 4305800
+5 0 4305800
+5 0 4305800
+5 0 4305800
jump=4305800 0x7a350 0 
* 0 
+10 0 10377596
+8 0 10377596
+4 0 10377596
jcnd=10377596/10377596 0x79dd8 0 
* 0 
0x7a78d 0 3052584
+4 0 3052584
+6 0 3052584
jcnd=3052584/3052584 0x79dd8 0 
* 0 
+73 0 817083
cfn=(205)
calls=817083 0x79d50 0 
* 0 185534315
+5 0 817083
jump=817083 0x79dd8 0 
* 0 

fn=(205)
0x79d50 0 3869667
+4 0 3869667
+2 0 3869667
+4 0 3869667
+2 0 3869667
+1 0 3869667
+5 0 3869667
+1 0 3869667
+5 0 3869667
+4 0 3869667
+3 0 3869667
+4 0 3869667
+9 0 3869667
+5 0 3869667
+2 0 3869667
+2 0 3869667
+6 0 3869667
+2 0 3869667
+6 0 3869667
+6 0 3869667
+2 0 3869667
jcnd=3869667/3869667 0x79e09 0 
* 0 
+61 0 3869667
+5 0 3869667
+9 0 3869667
+6 0 3869667
+4 0 3869667
+1 0 3869667
+1 0 3869667
+2 0 3869667
+2 0 3869667
+19 0 3869667
+8 0 3869667
+4 0 3869667
jcnd=3869667/3869667 0x7a230 0 
* 0 
+6 0 3869667
+8 0 3869667
jcnd=3869667/3869667 0x7a050 0 
* 0 
+6 0 3869667
+8 0 3869667
jcnd=3869667/3869667 0x7a438 0 
* 0 
+6 0 3869667
+8 0 3869667
jcnd=3869667/3869667 0x7a528 0 
* 0 
+9 0 3869667
+5 0 3869667
+3 0 3869667
+4 0 3869667
+3 0 3869667
+7 0 3869667
+5 0 3869667
+6 0 3869667
+7 0 3869667
jcnd=3869667/3869667 0x7a088 0 
* 0 
0x7a050 0 3869667
jcnd=3869667/3869667 0x79e29 0 
* 0 
+56 0 3869667
+6 0 3869667
+4 0 3869667
+3 0 3869667
+2 0 3869667
+3 0 3869667
+4 0 3869667
+2 0 3869667
+6 0 3869667
+8 0 3869667
+4 0 3869667
+8 0 3869667
+4 0 3869667
+4 0 3869667
+6 0 3869667
+8 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+5 0 3869667
+5 0 3869667
+6 0 3869667
jcnd=3869667/3869667 +35 0 
* 0 
+35 0 3869667
+3 0 3869667
+4 0 3869667
+5 0 3869667
+5 0 3869667
jcnd=33385/3869667 0x7a3e0 0 
* 0 
+6 0 3836282
+5 0 3836282
+2 0 3836282
+10 0 3836282
+4 0 3836282
+3 0 3836282
+3 0 3836282
+3 0 3836282
+8 0 3836282
+5 0 3836282
+6 0 3836282
+4 0 3836282
+5 0 3836282
+4 0 3836282
+3 0 3836282
+5 0 3836282
+7 0 3836282
jcnd=3836282/3836282 0x7a2b0 0 
* 0 
-47 0 33385
+8 0 33385
+5 0 33385
+6 0 33385
+4 0 33385
+5 0 33385
+4 0 33385
+3 0 33385
+5 0 33385
+7 0 33385
jcnd=33385/33385 0x7a2b0 0 
* 0 
0x7a230 0 3869667
jcnd=3869667/3869667 0x79e1b 0 
* 0 
0x7a2b0 0 3869667
+2 0 3869667
+5 0 3869667
+7 0 3869667
+4 0 3869667
+5 0 3869667
+3 0 3869667
+6 0 3869667
+5 0 3869667
+8 0 3869667
+3 0 3869667
+3 0 3869667
+5 0 3869667
+8 0 3869667
+5 0 3869667
+8 0 3869667
+5 0 3869667
+4 0 3869667
+4 0 3869667
+5 0 3869667
+4 0 3869667
+5 0 3869667
+5 0 3869667
+5 0 3869667
+4 0 3869667
+8 0 3869667
+8 0 3869667
+5 0 3869667
+8 0 3869667
+5 0 3869667
+8 0 3869667
+5 0 3869667
+5 0 3869667
+8 0 3869667
+5 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
+4 0 3869667
cfn=(326)
calls=3869667 0x79580 0 
* 0 255398022
+6 0 3869667
+3 0 3869667
+8 0 3869667
+6 0 3869667
+4 0 3869667
+8 0 3869667
jcnd=3869667/3869667 +70 0 
* 0 
+22 0 33385
+5 0 33385
+2 0 33385
+10 0 33385
+4 0 33385
+3 0 33385
+5 0 33385
+3 0 33385
+3 0 33385
jump=33385 0x7a148 0 
* 0 
+13 0 3869667
+8 0 3869667
+6 0 3869667
jcnd=3869667/3869667 0x7a600 0 
* 0 
+26 0 3869667
jcnd=3869667/3869667 0x79e37 0 
* 0 
0x7a528 0 3869667
+6 0 3869667
jump=3869667 0x79e48 0 
* 0 
0x7a600 0 3869667
+8 0 3869667
+4 0 3869667
jcnd=3869667/3869667 0x79dd8 0 
* 0 

fn=(286)
0x106e0 0 8905241
+4 0 8905241
+4 0 8905241
+6 0 8905241
cfn=(288) 0x0000000000078fb0
calls=8905241 0x78fb0 0 
* 0 685703557
+6 0 8905241
+8 0 8905241
+8 0 8905241
+4 0 8905241
+6 0 8905241
+4 0 8905241
+4 0 8905241
+2 0 8905241
+8 0 8905241
jcnd=8905241/8905241 +16 0 
* 0 
+2 0 8905241
+4 0 8905241
+10 0 8905241
jcnd=8905241/8905241 -14 0 
* 0 

fn=(288)
0x78fb0 0 8905241
+4 0 8905241
+4 0 8905241
+4 0 8905241
+2 0 8905241
+9 0 8905241
+5 0 8905241
+2 0 8905241
+6 0 8905241
+4 0 8905241
+2 0 8905241
+3 0 8905241
+4 0 8905241
+2 0 8905241
+6 0 8905241
+5 0 8905241
+5 0 8905241
+4 0 8905241
+3 0 8905241
+5 0 8905241
+5 0 8905241
jcnd=8905241/8905241 +44 0 
* 0 
+44 0 8905241
+5 0 8905241
jcnd=8905241/8905241 0x79280 0 
* 0 
0x79110 0 8905241
+3 0 8905241
+6 0 8905241
+5 0 8905241
+9 0 8905241
+6 0 8905241
+4 0 8905241
0x79280 0 8905241
+8 0 8905241
+4 0 8905241
+9 0 8905241
+7 0 8905241
+8 0 8905241
+4 0 8905241
+5 0 8905241
+9 0 8905241
+5 0 8905241
+3 0 8905241
+4 0 8905241
+5 0 8905241
+4 0 8905241
+4 0 8905241
+4 0 8905241
+5 0 8905241
+3 0 8905241
+2 0 8905241
+3 0 8905241
+5 0 8905241
+4 0 8905241
+8 0 8905241
+6 0 8905241
+3 0 8905241
+9 0 8905241
+3 0 8905241
+6 0 8905241
+3 0 8905241
+9 0 8905241
+6 0 8905241
+3 0 8905241
+2 0 8905241
+7 0 8905241
+5 0 8905241
+4 0 8905241
+5 0 8905241
+6 0 8905241
+6 0 8905241
+4 0 8905241
+4 0 8905241
+5 0 8905241
+5 0 8905241
+5 0 8905241
+5 0 8905241
+4 0 8905241
+6 0 8905241
jump=8905241 0x79110 0 
* 0 

fn=(226)
0x10370 0 33671295
+4 0 33671295
+4 0 33671295
+4 0 33671295
+2 0 33671295
cfn=(228) __sqrt_finite
calls=33671295 0x2e020 0 
* 0 101013885

fn=(228)
0x2e020 0 33671295
+4 0 33671295
+4 0 33671295

ob=(8) /usr/lib/libopenblasp-r0.3.3.so
fl=(47) ???
fn=(504) dgemm_incopy_HASWELL
0xd09c10 0 725002
+2 0 725002
+3 0 725002
+2 0 725002
+4 0 725002
+2 0 725002
+2 0 725002
+1 0 725002
+1 0 725002
+5 0 725002
+5 0 725002
+5 0 725002
+5 0 725002
+3 0 725002
jcnd=610528/725002 0xd09e3c 0 
* 0 
+6 0 114474
+3 0 114474
+4 0 114474
+3 0 114474
+3 0 114474
+4 0 114474
+3 0 114474
+3 0 114474
+4 0 114474
+8 0 114474
+3 0 114474
+3 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+5 0 114474
+8 0 114474
+5 0 114474
+8 0 114474
+3 0 114474
+3 0 114474
+5 0 114474
+3 0 114474
+4 0 114474
+5 0 114474
+5 0 114474
jump=114474 +32 0 
* 0 
+32 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+2 0 152632
+3 0 152632
+3 0 152632
+7 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+6 0 152632
+6 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
jcnd=76316/152632 0xd09cf0 0 
* 0 
0xd09cf0 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 152632
+4 0 152632
+3 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+6 0 152632
+5 0 152632
+2 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+7 0 152632
+7 0 152632
+7 0 152632
+4 0 152632
+3 0 152632
jcnd=76316/152632 -54 0 
* 0 
-54 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+7 0 76316
+7 0 76316
+7 0 76316
+4 0 76316
+3 0 76316
+2 0 152632
+5 0 152632
+3 0 152632
+3 0 152632
+4 0 152632
jcnd=38158/152632 0xd09cc9 0 
* 0 
+6 0 114474
+6 0 114474
+5 0 114474
+3 0 114474
+5 0 114474
jcnd=76316/114474 0xd09f37 0 
* 0 
-5 0 610528
+5 0 610528
jcnd=305264/610528 0xd09f37 0 
* 0 
+6 0 343422
+5 0 343422
+5 0 343422
+4 0 343422
+4 0 343422
+4 0 343422
+4 0 343422
+3 0 343422
jcnd=305264/343422 0xd09ef4 0 
* 0 
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+10 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
jcnd=38158/38158 -94 0 
* 0 
-94 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+2 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
-8 0 305264
+5 0 305264
+3 0 305264
+6 0 343422
+8 0 343422
+2 0 343422
+5 0 343422
+6 0 343422
+6 0 343422
+7 0 343422
+4 0 343422
+3 0 343422
jcnd=190790/343422 -31 0 
* 0 
-31 0 190790
+5 0 190790
+6 0 190790
+6 0 190790
+7 0 190790
+4 0 190790
+3 0 190790
+2 0 343422
+4 0 343422
+3 0 343422
+3 0 343422
+5 0 343422
jcnd=190790/343422 0xd09fb7 0 
* 0 
-5 0 381580
+5 0 381580
+2 0 534212
+5 0 534212
+4 0 534212
+3 0 534212
jcnd=457896/534212 +77 0 
* 0 
+2 0 76316
+3 0 76316
+3 0 76316
+3 0 76316
+3 0 76316
+4 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+2 0 76316
+4 0 76316
+3 0 76316
+3 0 76316
+5 0 76316
+3 0 76316
-8 0 457896
+5 0 457896
+3 0 457896
+2 0 534212
+2 0 534212
+5 0 534212
+6 0 534212
+4 0 534212
+3 0 534212
jcnd=152632/534212 -18 0 
* 0 
-18 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+3 0 152632
+2 0 725002
+1 0 725002
+2 0 725002
+1 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002

fn=(490) dgemm_oncopy_HASWELL
0xd0a4a0 0 1564478
+2 0 1564478
+3 0 1564478
+2 0 1564478
+4 0 1564478
+2 0 1564478
+2 0 1564478
+1 0 1564478
+1 0 1564478
+7 0 1564478
+8 0 1564478
+8 0 1564478
+8 0 1564478
+8 0 1564478
+3 0 1564478
jcnd=1488162/1564478 0xd0ad84 0 
* 0 
+6 0 76316
+3 0 76316
+3 0 76316
+3 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+3 0 76316
+8 0 76316
+8 0 76316
+3 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+3 0 76316
+3 0 76316
+8 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
+8 0 76316
+8 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+8 0 76316
+3 0 76316
+4 0 76316
+8 0 76316
+3 0 76316
+8 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+8 0 76316
+3 0 76316
+8 0 76316
jump=76316 +49 0 
* 0 
+23 0 76316
+8 0 76316
+3 0 76316
+9 0 76316
jcnd=76316/76316 0xd0ad68 0 
* 0 
+6 0 76316
+8 0 76316
+4 0 76316
+9 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+8 0 76316
+4 0 76316
+6 0 76316
+8 0 76316
+3 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+7 0 76316
+7 0 76316
+7 0 76316
+7 0 76316
+7 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+7 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+6 0 76316
+7 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+7 0 76316
+7 0 76316
+6 0 76316
+7 0 76316
+7 0 76316
+7 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+10 0 76316
+6 0 76316
+6 0 76316
+10 0 76316
+9 0 76316
+6 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+5 0 76316
+10 0 76316
+6 0 76316
+5 0 76316
+9 0 76316
+6 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+6 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+7 0 76316
+10 0 76316
+9 0 76316
+7 0 76316
+7 0 76316
+8 0 76316
+6 0 76316
+7 0 76316
+9 0 76316
+7 0 76316
+10 0 76316
+8 0 76316
+6 0 76316
+9 0 76316
+7 0 76316
+9 0 76316
+10 0 76316
+8 0 76316
+6 0 76316
+9 0 76316
+8 0 76316
+9 0 76316
+8 0 76316
+8 0 76316
+9 0 76316
+8 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+8 0 76316
+9 0 76316
+8 0 76316
+6 0 76316
+7 0 76316
+6 0 76316
+8 0 76316
+6 0 76316
+8 0 76316
+6 0 76316
+7 0 76316
+9 0 76316
+10 0 76316
+10 0 76316
+8 0 76316
+7 0 76316
+9 0 76316
+8 0 76316
+6 0 76316
+10 0 76316
+8 0 76316
+7 0 76316
+9 0 76316
+10 0 76316
+8 0 76316
+8 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+9 0 76316
+8 0 76316
+9 0 76316
+5 0 76316
+6 0 76316
+9 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+9 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+9 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+8 0 76316
+3 0 76316
+9 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+3 0 76316
+2 0 76316
+2 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+3 0 76316
jcnd=76316/76316 0xd0acf0 0 
* 0 
0xd0acf0 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+3 0 76316
+2 0 76316
+8 0 76316
jump=76316 0xd0a5cf 0 
* 0 
+8 0 76316
+8 0 76316
+8 0 76316
+9 0 76316
+3 0 76316
+8 0 76316
jcnd=76316/76316 0xd0af28 0 
* 0 
-8 0 1488162
+8 0 1488162
jcnd=1335530/1488162 0xd0af28 0 
* 0 
+6 0 152632
+8 0 152632
+8 0 152632
+8 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+6 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+2 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+6 0 152632
+6 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+6 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+8 0 152632
+3 0 152632
+6 0 152632
+8 0 152632
+2 0 152632
+5 0 152632
+5 0 152632
+6 0 152632
+6 0 152632
+6 0 152632
+7 0 152632
+7 0 152632
+7 0 152632
+4 0 152632
+3 0 152632
+2 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+8 0 152632
jcnd=152632/152632 0xd0afe2 0 
* 0 
-8 0 1411846
+8 0 1411846
jcnd=725002/1411846 0xd0afe2 0 
* 0 
+6 0 686844
+8 0 686844
+8 0 686844
+4 0 686844
+3 0 686844
+4 0 686844
+4 0 686844
+3 0 686844
jcnd=305264/686844 0xd0afbc 0 
* 0 
+2 0 381580
+3 0 381580
+3 0 381580
+3 0 381580
+3 0 381580
+10 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+5 0 381580
+5 0 381580
+4 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+4 0 381580
jcnd=76316/381580 -54 0 
* 0 
-54 0 305264
+4 0 305264
+4 0 305264
+4 0 305264
+4 0 305264
+5 0 305264
+5 0 305264
+4 0 305264
+5 0 305264
+5 0 305264
+5 0 305264
+5 0 305264
+4 0 305264
jcnd=228948/305264 -54 0 
* 0 
+2 0 381580
+3 0 381580
+4 0 381580
+4 0 381580
+3 0 381580
+3 0 381580
+3 0 381580
+8 0 381580
jcnd=381580/381580 0xd0b030 0 
* 0 
-8 0 305264
+8 0 305264
+2 0 305264
+4 0 305264
+5 0 305264
+4 0 305264
+3 0 305264
+6 0 305264
+6 0 305264
+8 0 305264
+3 0 305264
-11 0 1259214
+8 0 1259214
+3 0 1259214
+2 0 1564478
+8 0 1564478
jcnd=1144740/1564478 +25 0 
* 0 
+2 0 1564478
+7 0 1564478
+2 0 1564478
+1 0 1564478
+1 0 1564478
+2 0 1564478
+2 0 1564478
+2 0 1564478
+2 0 1564478
+4 0 1144740
+2 0 1144740
+6 0 1144740
+5 0 1144740
+6 0 1144740
+4 0 1144740
+3 0 1144740
jcnd=534212/1144740 -18 0 
* 0 
-18 0 2365796
+5 0 2365796
+6 0 2365796
+4 0 2365796
+3 0 2365796
jcnd=1831584/2365796 -18 0 
* 0 
+2 0 1144740
jump=1144740 -51 0 
* 0 
+4 0 381580
+3 0 381580
jump=381580 -81 0 
* 0 

fn=(520) dtrsm_kernel_LN_HASWELL
0xd11ab0 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+7 0 38158
+7 0 38158
+5 0 38158
+8 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+8 0 38158
+3 0 38158
jcnd=38158/38158 0xd11fb5 0 
* 0 
0xd11fb5 0 38158
+7 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+8 0 38158
+6 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+5 0 38158
+2 0 38158
+6 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+5 0 38158
jump=38158 +71 0 
* 0 
+6 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
jcnd=38158/38158 0xd12280 0 
* 0 
-5 0 76316
+5 0 76316
+6 0 114474
+5 0 114474
+8 0 114474
jcnd=76316/114474 -24 0 
* 0 
+2 0 38158
+7 0 38158
+5 0 38158
+8 0 38158
+3 0 38158
+3 0 38158
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+6 0 38158
+6 0 38158
+6 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+8 0 38158
+7 0 38158
+5 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+7 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
jcnd=38158/38158 0xd1217f 0 
* 0 
-11 0 152632
+5 0 152632
+3 0 152632
+3 0 152632
+2 0 152632
+5 0 152632
+5 0 152632
+3 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+8 0 152632
+3 0 152632
+7 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
cfn=(508) dgemm_kernel_HASWELL
calls=152632 0xd03000 0 
* 0 19307948
+6 0 152632
+7 0 152632
+3 0 152632
+7 0 152632
+5 0 152632
+4 0 152632
+1 0 152632
+1 0 152632
+4 0 152632
+3 0 152632
+5 0 152632
+8 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
-64 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+6 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+6 0 190790
+2 0 190790
+7 0 190790
+3 0 190790
+4 0 190790
+3 0 190790
+5 0 190790
+3 0 190790
+4 0 190790
+4 0 190790
+8 0 190790
+5 0 190790
+4 0 190790
+2 0 190790
+4 0 190790
+5 0 190790
+5 0 190790
+2 0 190790
jcnd=190790/190790 +8 0 
* 0 
-51 0 572370
+5 0 572370
+3 0 572370
+4 0 572370
+4 0 572370
+8 0 572370
+5 0 572370
+4 0 572370
+2 0 572370
+4 0 572370
+5 0 572370
+5 0 572370
+2 0 572370
jcnd=381580/572370 +8 0 
* 0 
+2 0 190790
jump=190790 +39 0 
* 0 
+3 0 572370
+3 0 572370
+6 0 572370
+5 0 572370
+4 0 572370
+4 0 572370
+4 0 572370
+5 0 572370
+3 0 572370
jcnd=190790/572370 -34 0 
* 0 
-31 0 572370
+6 0 572370
+5 0 572370
+4 0 572370
+4 0 572370
+4 0 572370
+5 0 572370
+3 0 572370
jcnd=381580/572370 -34 0 
* 0 
+2 0 763160
+5 0 763160
+3 0 763160
+2 0 763160
+4 0 763160
+3 0 763160
+5 0 763160
+3 0 763160
+2 0 763160
jcnd=572370/763160 0xd121d8 0 
* 0 
+2 0 190790
+5 0 190790
+3 0 190790
+4 0 190790
+4 0 190790
+5 0 190790
+6 0 190790
jcnd=152632/190790 0xd12110 0 
* 0 
+6 0 38158
jump=38158 0xd12010 0 
* 0 
+14 0 38158
+7 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158

fn=(482) blas_memory_alloc
0x1e80e0 0 1526320
+1 0 1526320
+1 0 1526320
+4 0 1526320
+9 0 1526320
+5 0 1526320
+2 0 1526320
+7 0 1526320
+9 0 1526320
+4 0 1526320
+7 0 1526320
+5 0 1526320
+6 0 1526320
+2 0 1526320
+6 0 1526320
+7 0 1526320
cob=(6)
cfi=(1)
cfn=(96)
calls=1526320 0xa240 0 
* 0 44263304
+6 0 1526320
+7 0 1526320
+6 0 1526320
+7 0 1526320
+2 0 1526320
cob=(6)
cfi=(1)
cfn=(168)
calls=1526320 0xba70 0 
* 0 36631708
+6 0 1526320
+2 0 1526320
+2 0 1526320
+6 0 1526320
+6 0 1526320
cob=(6)
cfi=(1)
cfn=(484) pthread_getspecific
calls=1526320 0xee50 0 
* 0 27473760
+6 0 1526320
+7 0 1526320
+3 0 1526320
cob=(6)
cfi=(1)
cfn=(96)
calls=1526320 0xa240 0 
* 0 44263280
+6 0 1526320
+6 0 1526320
+7 0 1526320
+2 0 1526320
cob=(6)
cfi=(1)
cfn=(168)
calls=1526320 0xba70 0 
* 0 36631680
+6 0 1526320
+2 0 1526320
+2 0 1526320
+2 0 1526320
+3 0 1526320
+6 0 1526320
+7 0 1526320
jump=1526320 +21 0 
* 0 
+2 0 7015760
+2 0 7015760
+2 0 7015760
jcnd=1526320/7015760 +77 0 
* 0 
+2 0 5489440
+4 0 5489440
+3 0 5489440
+6 0 7015760
+4 0 7015760
+3 0 7015760
jcnd=7015760/7015760 -26 0 
* 0 
+55 0 1526320
+6 0 1526320
+4 0 1526320
+5 0 1526320
+9 0 1526320
+6 0 1526320
+4 0 1526320
+1 0 1526320
+1 0 1526320

fn=(508)
0xd03000 0 2060532
+4 0 2060532
+4 0 2060532
+5 0 2060532
+5 0 2060532
+5 0 2060532
+5 0 2060532
+5 0 2060532
+3 0 2060532
+5 0 2060532
+3 0 2060532
+7 0 2060532
+7 0 2060532
+4 0 2060532
jcnd=725002/2060532 0xd09be4 0 
* 0 
+6 0 1335530
+4 0 1335530
+6 0 1335530
+4 0 1335530
+6 0 1335530
+3 0 1335530
+5 0 1335530
+3 0 1335530
+6 0 1335530
+4 0 1335530
+5 0 1335530
+3 0 1335530
+7 0 1335530
+3 0 1335530
+5 0 1335530
+5 0 1335530
+5 0 1335530
+4 0 1335530
jcnd=1335530/1335530 0xd06e19 0 
* 0 
0xd06e19 0 1335530
+6 0 1335530
+6 0 1335530
+5 0 1335530
+4 0 1335530
jcnd=1221056/1335530 0xd08454 0 
* 0 
+6 0 114474
+3 0 114474
+4 0 114474
+3 0 114474
+7 0 114474
+3 0 114474
+4 0 114474
jcnd=38158/114474 0xd07b80 0 
* 0 
+6 0 76316
+11 0 76316
+3 0 76316
+3 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
jcnd=76316/76316 0xd076ca 0 
* 0 
-18 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
jcnd=38158/38158 0xd076ca 0 
* 0 
0xd076ca 0 114474
+6 0 114474
jcnd=38158/114474 0xd07981 0 
* 0 
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+5 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+7 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+7 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+7 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+7 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
jump=76316 +38 0 
* 0 
+2 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
-7 0 76316
+3 0 76316
+4 0 76316
+2 0 114474
+2 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+6 0 114474
+5 0 114474
+5 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+5 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+5 0 114474
+3 0 114474
jcnd=114474/114474 -84 0 
* 0 
-84 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+3 0 190790
jcnd=76316/190790 -84 0 
* 0 
+2 0 114474
+10 0 114474
+7 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+4 0 114474
+5 0 114474
+6 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+6 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+6 0 114474
+4 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+6 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+7 0 114474
+4 0 114474
+6 0 114474
+5 0 114474
+7 0 114474
+4 0 114474
+6 0 114474
+4 0 114474
+6 0 114474
+4 0 114474
+3 0 114474
jcnd=38158/114474 0xd06e60 0 
* 0 
+6 0 76316
+9 0 76316
+7 0 76316
jcnd=38158/76316 0xd08440 0 
* 0 
-7 0 38158
+7 0 38158
+6 0 76316
+7 0 76316
+6 0 76316
+6 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+3 0 76316
+4 0 76316
+6 0 76316
+8 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+6 0 76316
+11 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
jcnd=38158/76316 0xd07f52 0 
* 0 
+2 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
jcnd=38158/38158 -96 0 
* 0 
-96 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+2 0 76316
+6 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+7 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+7 0 76316
+4 0 76316
+7 0 76316
jcnd=76316/76316 0xd08440 0 
* 0 
0xd08440 0 114474
+3 0 114474
+4 0 114474
+4 0 114474
+3 0 114474
+6 0 1335530
+6 0 1335530
+6 0 1335530
+5 0 1335530
+7 0 1335530
jcnd=1182898/1335530 0xd0922b 0 
* 0 
+6 0 152632
+3 0 152632
+4 0 152632
+3 0 152632
+7 0 152632
+3 0 152632
+4 0 152632
jcnd=76316/152632 0xd08ce0 0 
* 0 
+6 0 76316
+3 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
jcnd=76316/76316 0xd08a01 0 
* 0 
0xd08a01 0 76316
+6 0 76316
jcnd=76316/76316 0xd08bcb 0 
* 0 
0xd08bcb 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
+2 0 76316
+11 0 76316
+1 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+6 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+3 0 76316
jcnd=76316/76316 -59 0 
* 0 
-59 0 305264
+5 0 305264
+5 0 305264
+5 0 305264
+6 0 305264
+5 0 305264
+4 0 305264
+6 0 305264
+5 0 305264
+4 0 305264
+6 0 305264
+5 0 305264
+3 0 305264
jcnd=228948/305264 -59 0 
* 0 
+2 0 76316
+3 0 76316
+7 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+4 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
+3 0 76316
+6 0 76316
+10 0 76316
+7 0 76316
-7 0 76316
+7 0 76316
+6 0 152632
+7 0 152632
jcnd=152632/152632 0xd08f82 0 
* 0 
0xd08f82 0 152632
+7 0 152632
+6 0 152632
+1 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
jcnd=152632/152632 0xd09180 0 
* 0 
0xd09180 0 152632
+3 0 152632
+4 0 152632
+2 0 152632
+7 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+5 0 152632
+4 0 152632
+3 0 152632
jcnd=152632/152632 -56 0 
* 0 
-56 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+5 0 534212
+4 0 534212
+5 0 534212
+4 0 534212
+3 0 534212
jcnd=381580/534212 -56 0 
* 0 
+2 0 152632
+6 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+6 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+6 0 152632
+4 0 152632
+8 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+7 0 152632
jcnd=152632/152632 0xd09838 0 
* 0 
-12 0 1182898
+5 0 1182898
+7 0 1182898
jcnd=763160/1182898 0xd09838 0 
* 0 
+6 0 419738
+3 0 419738
+4 0 419738
+3 0 419738
+7 0 419738
+3 0 419738
+4 0 419738
jcnd=343422/419738 0xd094e0 0 
* 0 
+6 0 76316
+5 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
jcnd=38158/76316 0xd09429 0 
* 0 
-30 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+6 0 76316
+11 0 76316
+11 0 76316
+6 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+6 0 114474
+3 0 114474
+4 0 114474
+2 0 114474
+11 0 114474
+3 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+5 0 114474
+4 0 114474
+4 0 114474
+3 0 114474
jcnd=114474/114474 -51 0 
* 0 
-51 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
jcnd=76316/190790 -51 0 
* 0 
+2 0 114474
+11 0 114474
+6 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+4 0 114474
+5 0 114474
+6 0 114474
+6 0 114474
+7 0 114474
+5 0 114474
+6 0 114474
+6 0 114474
+7 0 114474
+4 0 114474
+3 0 114474
jcnd=38158/114474 0xd09260 0 
* 0 
+6 0 76316
+11 0 76316
+2 0 76316
+7 0 76316
jcnd=38158/76316 0xd0982e 0 
* 0 
-7 0 343422
+7 0 343422
+6 0 381580
+7 0 381580
+6 0 381580
+6 0 381580
+3 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+3 0 381580
+4 0 381580
jcnd=305264/381580 0xd09631 0 
* 0 
+6 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+5 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+6 0 381580
+3 0 381580
+4 0 381580
jcnd=38158/381580 +46 0 
* 0 
+2 0 343422
+6 0 343422
+5 0 343422
+5 0 343422
+5 0 343422
+5 0 343422
+5 0 343422
+4 0 343422
+4 0 343422
+3 0 343422
jcnd=190790/343422 -36 0 
* 0 
-36 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+2 0 381580
+6 0 381580
+4 0 381580
+4 0 381580
+5 0 381580
+6 0 381580
+5 0 381580
+6 0 381580
+4 0 381580
+7 0 381580
jcnd=228948/381580 0xd0982e 0 
* 0 
+6 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
jcnd=152632/152632 0xd097d1 0 
* 0 
0xd097d1 0 152632
+3 0 152632
+4 0 152632
+2 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
jcnd=152632/152632 -36 0 
* 0 
-36 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+2 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+6 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+4 0 152632
+5 0 152632
+7 0 152632
-22 0 267106
+3 0 267106
+3 0 267106
+4 0 267106
+5 0 267106
+7 0 267106
jcnd=267106/267106 0xd09be4 0 
* 0 
-12 0 915792
+5 0 915792
+7 0 915792
jcnd=152632/915792 0xd09be4 0 
* 0 
+6 0 915792
+3 0 915792
+4 0 915792
+3 0 915792
+7 0 915792
+3 0 915792
+4 0 915792
jcnd=534212/915792 0xd0996e 0 
* 0 
+6 0 381580
+8 0 381580
+3 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+4 0 381580
+3 0 381580
+4 0 381580
jcnd=152632/381580 0xd0990f 0 
* 0 
+2 0 228948
+11 0 228948
+5 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+5 0 228948
+6 0 228948
+6 0 228948
+6 0 228948
+4 0 228948
+7 0 228948
+3 0 228948
jcnd=76316/228948 0xd098a0 0 
* 0 
0xd098a0 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+5 0 76316
+6 0 76316
+6 0 76316
+6 0 76316
+4 0 76316
+7 0 76316
+3 0 76316
+2 0 381580
+3 0 381580
+4 0 381580
jcnd=152632/381580 +42 0 
* 0 
+2 0 228948
+8 0 228948
+6 0 228948
+5 0 228948
+5 0 228948
+4 0 228948
+4 0 228948
+3 0 228948
jcnd=228948/228948 -27 0 
* 0 
-27 0 763160
+6 0 763160
+5 0 763160
+5 0 763160
+4 0 763160
+4 0 763160
+3 0 763160
jcnd=534212/763160 -27 0 
* 0 
+2 0 228948
+3 0 228948
+7 0 228948
+4 0 228948
+4 0 228948
+4 0 228948
+4 0 228948
+5 0 228948
+5 0 228948
+4 0 228948
+3 0 228948
-40 0 152632
+7 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+3 0 152632
+6 0 915792
+7 0 915792
jcnd=305264/915792 0xd09be4 0 
* 0 
+6 0 610528
+7 0 610528
jcnd=457896/610528 0xd09ab4 0 
* 0 
+6 0 152632
+8 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+4 0 152632
jcnd=152632/152632 0xd09a71 0 
* 0 
0xd09a71 0 152632
+3 0 152632
+4 0 152632
+2 0 152632
+6 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
jcnd=152632/152632 -26 0 
* 0 
-26 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+2 0 152632
+6 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+7 0 152632
-7 0 457896
+7 0 457896
+6 0 610528
+3 0 610528
+4 0 610528
+4 0 610528
+3 0 610528
+4 0 610528
jcnd=610528/610528 0xd09ba1 0 
* 0 
0xd09ba1 0 610528
+3 0 610528
+4 0 610528
+2 0 610528
+6 0 610528
+5 0 610528
+5 0 610528
+5 0 610528
+4 0 610528
+4 0 610528
+3 0 610528
jcnd=305264/610528 -26 0 
* 0 
-26 0 686844
+5 0 686844
+5 0 686844
+5 0 686844
+4 0 686844
+4 0 686844
+3 0 686844
jcnd=381580/686844 -26 0 
* 0 
+2 0 610528
+6 0 610528
+4 0 610528
+5 0 610528
+5 0 610528
+4 0 610528
+3 0 610528
+3 0 610528
+4 0 610528
+5 0 610528
+5 0 610528
+5 0 610528
+5 0 610528
+5 0 610528
+4 0 610528
-39 0 1450004
+3 0 1450004
+3 0 1450004
+4 0 1450004
+5 0 1450004
+5 0 1450004
+5 0 1450004
+5 0 1450004
+5 0 1450004
+4 0 1450004

fn=(486) dtrsm_LTUN
0x151740 0 763160
+2 0 763160
+3 0 763160
+2 0 763160
+2 0 763160
+2 0 763160
+1 0 763160
+1 0 763160
+7 0 763160
+4 0 763160
+4 0 763160
+4 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+5 0 763160
+4 0 763160
+5 0 763160
+3 0 763160
jcnd=763160/763160 +30 0 
* 0 
+30 0 763160
+3 0 763160
+2 0 763160
+4 0 763160
+8 0 763160
+6 0 763160
+6 0 763160
+6 0 763160
+6 0 763160
+7 0 763160
+5 0 763160
+9 0 763160
+4 0 763160
+7 0 763160
+9 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+3 0 763160
+4 0 763160
+6 0 763160
+5 0 763160
+6 0 763160
+5 0 763160
+3 0 763160
+9 0 763160
+5 0 763160
+7 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+5 0 763160
+3 0 763160
+3 0 763160
+4 0 763160
+7 0 763160
+3 0 763160
+3 0 763160
+3 0 763160
+4 0 763160
+4 0 763160
+3 0 763160
+5 0 763160
+3 0 763160
+5 0 763160
+4 0 763160
+3 0 763160
cfn=(488) dtrsm_iunncopy_HASWELL
calls=763160 0xd27070 0 
* 0 84901550
+6 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+6 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+7 0 763160
+4 0 763160
+5 0 763160
+6 0 763160
+3 0 763160
+3 0 763160
+3 0 763160
+3 0 763160
-27 0 38158
+4 0 38158
+5 0 38158
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+2 0 801318
+3 0 801318
+3 0 801318
+4 0 801318
+3 0 801318
+5 0 801318
+5 0 801318
+3 0 801318
+4 0 801318
+3 0 801318
+4 0 801318
+5 0 801318
+3 0 801318
+4 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+4 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
cfn=(490)
calls=801318 0xd0a4a0 0 
* 0 68493610
+6 0 801318
+4 0 801318
+3 0 801318
+2 0 801318
+8 0 801318
+2 0 801318
+3 0 801318
+3 0 801318
+5 0 801318
+5 0 801318
+5 0 801318
cfn=(492) dtrsm_kernel_LT_HASWELL
calls=801318 0xd12470 0 
* 0 412907718
+6 0 801318
+2 0 801318
+2 0 801318
+5 0 801318
jcnd=38158/801318 0x1518c8 0 
* 0 
+6 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
+4 0 763160
+4 0 763160
+3 0 763160
+3 0 763160
jcnd=763160/763160 0x151a54 0 
* 0 
0x151a54 0 763160
+5 0 763160
jcnd=763160/763160 0x151b03 0 
* 0 
0x151b03 0 763160
+7 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+6 0 763160
+7 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+6 0 763160
+7 0 763160
+2 0 763160
+1 0 763160
+1 0 763160
+2 0 763160
+2 0 763160
+2 0 763160
+2 0 763160

fn=(502) dsyrk_UT
0x157e70 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+1 0 725002
+1 0 725002
+7 0 725002
+7 0 725002
+5 0 725002
+3 0 725002
+5 0 725002
+8 0 725002
+6 0 725002
+6 0 725002
jcnd=725002/725002 +18 0 
* 0 
+18 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+5 0 725002
+3 0 725002
+5 0 725002
+4 0 725002
+5 0 725002
+4 0 725002
+5 0 725002
+4 0 725002
+4 0 725002
+5 0 725002
+8 0 725002
+3 0 725002
jcnd=725002/725002 0x15876d 0 
* 0 
+29 0 725002
+9 0 725002
+3 0 725002
jcnd=725002/725002 +22 0 
* 0 
+22 0 725002
+3 0 725002
+2 0 725002
+5 0 725002
+8 0 725002
+6 0 725002
+6 0 725002
+6 0 725002
+6 0 725002
+5 0 725002
+3 0 725002
+6 0 725002
+4 0 725002
+4 0 725002
jcnd=725002/725002 0x158147 0 
* 0 
+6 0 725002
+8 0 725002
+5 0 725002
+6 0 725002
+8 0 725002
+4 0 725002
+8 0 725002
+7 0 725002
+3 0 725002
+7 0 725002
+3 0 725002
+3 0 725002
+7 0 725002
+5 0 725002
+8 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+5 0 725002
+8 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+6 0 725002
+8 0 725002
+6 0 725002
+8 0 725002
+9 0 725002
+3 0 725002
+8 0 725002
+4 0 725002
+3 0 725002
+3 0 725002
+8 0 725002
+5 0 725002
+4 0 725002
+5 0 725002
jump=725002 0x1580f1 0 
* 0 
+30 0 725002
+7 0 725002
+8 0 725002
+3 0 725002
+2 0 725002
+2 0 725002
+3 0 725002
+2 0 725002
+3 0 725002
jcnd=725002/725002 0x158608 0 
* 0 
+38 0 725002
+8 0 725002
+5 0 725002
jcnd=725002/725002 0x158250 0 
* 0 
+25 0 725002
+8 0 725002
+5 0 725002
+5 0 725002
jcnd=725002/725002 0x158618 0 
* 0 
+6 0 725002
+7 0 725002
+5 0 725002
+5 0 725002
+3 0 725002
+2 0 725002
+3 0 725002
+2 0 725002
+3 0 725002
+6 0 725002
+5 0 725002
+8 0 725002
+3 0 725002
jcnd=725002/725002 0x15806f 0 
* 0 
+34 0 725002
jcnd=725002/725002 0x157f83 0 
* 0 
+6 0 725002
+7 0 725002
+2 0 725002
+1 0 725002
+1 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
0x158250 0 725002
+5 0 725002
+4 0 725002
+5 0 725002
+2 0 725002
jcnd=725002/725002 +42 0 
* 0 
+42 0 725002
+8 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+8 0 725002
+5 0 725002
+6 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
jump=725002 +14 0 
* 0 
+14 0 725002
+5 0 725002
+7 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+4 0 725002
+5 0 725002
+4 0 725002
+4 0 725002
+8 0 725002
+2 0 725002
+2 0 725002
+3 0 725002
+3 0 725002
+5 0 725002
+2 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+8 0 725002
+4 0 725002
+3 0 725002
cfn=(504)
calls=725002 0xd09c10 0 
* 0 57694896
+6 0 725002
+7 0 725002
+8 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
cfn=(490)
calls=725002 0xd0a4a0 0 
* 0 62044908
+6 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+1 0 725002
+3 0 725002
+4 0 725002
+1 0 725002
+5 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+5 0 725002
+8 0 725002
+4 0 725002
cfn=(506) dsyrk_kernel_U
calls=725002 0x15cdd0 0 
* 0 374635244
+6 0 725002
+1 0 725002
+1 0 725002
+5 0 725002
+6 0 725002
+7 0 725002
+5 0 725002
+3 0 725002
+8 0 725002
+3 0 725002
+8 0 725002
+3 0 725002
jcnd=725002/725002 0x1584f0 0 
* 0 
0x1584f0 0 725002
+8 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
jcnd=725002/725002 0x1580d9 0 
* 0 
0x158608 0 725002
+8 0 725002
jump=725002 0x1580b3 0 
* 0 
+8 0 725002
+7 0 725002
+5 0 725002
+5 0 725002
+8 0 725002
+6 0 725002
jump=725002 0x15814d 0 
* 0 
0x15876d 0 725002
+8 0 725002
+12 0 725002
+8 0 725002
jump=725002 0x157f1b 0 
* 0 

fn=(492)
0xd12470 0 801318
+2 0 801318
+3 0 801318
+2 0 801318
+4 0 801318
+2 0 801318
+2 0 801318
+1 0 801318
+1 0 801318
+4 0 801318
+7 0 801318
+5 0 801318
+3 0 801318
+5 0 801318
+5 0 801318
+5 0 801318
+6 0 801318
+5 0 801318
+4 0 801318
+5 0 801318
+5 0 801318
+4 0 801318
+3 0 801318
jcnd=763160/801318 0xd126c0 0 
* 0 
+6 0 38158
+8 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+7 0 38158
+4 0 38158
+3 0 38158
+6 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+8 0 38158
+5 0 38158
+8 0 38158
+3 0 38158
jcnd=38158/38158 +78 0 
* 0 
-3 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+7 0 38158
+8 0 38158
+5 0 38158
cfn=(508)
calls=38158 0xd03000 0 
* 0 8967130
+7 0 38158
+7 0 38158
+3 0 38158
+7 0 38158
+7 0 38158
+4 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
-55 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+6 0 76316
+2 0 76316
+5 0 76316
+3 0 76316
-8 0 228948
+5 0 228948
+3 0 228948
+6 0 305264
+3 0 305264
+3 0 305264
+4 0 305264
+8 0 305264
+6 0 305264
+4 0 305264
+4 0 305264
+4 0 305264
+6 0 305264
+6 0 305264
+3 0 305264
jcnd=76316/305264 +71 0 
* 0 
-33 0 2136848
+6 0 2136848
+4 0 2136848
+4 0 2136848
+4 0 2136848
+6 0 2136848
+6 0 2136848
+3 0 2136848
jcnd=534212/2136848 +71 0 
* 0 
+2 0 1831584
+3 0 1831584
+10 0 1831584
+6 0 1831584
+5 0 1831584
+4 0 1831584
+4 0 1831584
+5 0 1831584
+4 0 1831584
+3 0 1831584
jcnd=1221056/1831584 -31 0 
* 0 
-31 0 1831584
+6 0 1831584
+5 0 1831584
+4 0 1831584
+4 0 1831584
+5 0 1831584
+4 0 1831584
+3 0 1831584
jcnd=610528/1831584 -31 0 
* 0 
+2 0 1831584
+3 0 1831584
jcnd=228948/1831584 0xd12878 0 
* 0 
+6 0 2136848
+5 0 2136848
jump=2136848 -95 0 
* 0 
+9 0 610528
+3 0 610528
jcnd=534212/610528 -17 0 
* 0 
+2 0 76316
+5 0 76316
+3 0 76316
+3 0 76316
+4 0 76316
+6 0 76316
+4 0 76316
jcnd=38158/76316 0xd12530 0 
* 0 
+6 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+5 0 38158
jcnd=38158/38158 0xd12898 0 
* 0 
+6 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+8 0 38158
+4 0 38158
+6 0 38158
+4 0 38158
+5 0 38158
+6 0 801318
+4 0 801318
+3 0 801318
+2 0 801318
+5 0 801318
jcnd=38158/801318 0xd12860 0 
* 0 
+6 0 763160
+2 0 763160
+2 0 763160
+3 0 763160
+2 0 763160
+6 0 763160
+5 0 763160
+4 0 763160
+5 0 763160
+8 0 763160
+8 0 763160
jump=763160 +16 0 
* 0 
+7 0 2289480
+3 0 2289480
jcnd=763160/2289480 0xd12860 0 
* 0 
+6 0 2289480
+5 0 2289480
jcnd=1297372/2289480 -14 0 
* 0 
+2 0 992108
+7 0 992108
+5 0 992108
+3 0 992108
+5 0 992108
+6 0 992108
+4 0 992108
+3 0 992108
jcnd=763160/992108 0xd12c0c 0 
* 0 
+6 0 228948
+5 0 228948
+5 0 228948
+3 0 228948
+8 0 228948
+5 0 228948
+5 0 228948
+2 0 228948
+3 0 228948
jcnd=228948/228948 +79 0 
* 0 
-3 0 190790
+3 0 190790
+2 0 190790
+4 0 190790
+3 0 190790
+3 0 190790
+3 0 190790
+7 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+8 0 190790
cfn=(508)
calls=190790 0xd03000 0 
* 0 25107964
+6 0 190790
+7 0 190790
+3 0 190790
+7 0 190790
+5 0 190790
+4 0 190790
+1 0 190790
+1 0 190790
+3 0 190790
+4 0 190790
+5 0 190790
+8 0 190790
+4 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+5 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+3 0 190790
-54 0 228948
+3 0 228948
+4 0 228948
+5 0 228948
+8 0 228948
+4 0 228948
+4 0 228948
+4 0 228948
+3 0 228948
+5 0 228948
+4 0 228948
+4 0 228948
+3 0 228948
+3 0 228948
+6 0 419738
+2 0 419738
+5 0 419738
+3 0 419738
+2 0 419738
+4 0 419738
+2 0 419738
+6 0 419738
+4 0 419738
+4 0 419738
+4 0 419738
+6 0 419738
+6 0 419738
+3 0 419738
-49 0 1259214
+5 0 1259214
+3 0 1259214
+2 0 1259214
+4 0 1259214
+2 0 1259214
+6 0 1259214
+4 0 1259214
+4 0 1259214
+4 0 1259214
+6 0 1259214
+6 0 1259214
+3 0 1259214
jcnd=419738/1259214 0xd12a50 0 
* 0 
-33 0 1221056
+6 0 1221056
+4 0 1221056
+4 0 1221056
+4 0 1221056
+6 0 1221056
+6 0 1221056
+3 0 1221056
jcnd=305264/1221056 0xd12a50 0 
* 0 
+6 0 2175006
+3 0 2175006
+6 0 2175006
+6 0 2175006
+5 0 2175006
+4 0 2175006
+4 0 2175006
+5 0 2175006
+4 0 2175006
+3 0 2175006
jcnd=1450004/2175006 -31 0 
* 0 
-31 0 2175006
+6 0 2175006
+5 0 2175006
+4 0 2175006
+4 0 2175006
+5 0 2175006
+4 0 2175006
+3 0 2175006
jcnd=725002/2175006 -31 0 
* 0 
+2 0 2175006
+3 0 2175006
jcnd=1259214/2175006 0xd12a30 0 
* 0 
+6 0 1221056
+3 0 1221056
jump=1221056 -93 0 
* 0 
+3 0 801318
+4 0 801318
+2 0 801318
+1 0 801318
+1 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+8 0 228948
+3 0 228948
+4 0 228948
+5 0 228948
+3 0 228948
+6 0 228948
+3 0 228948
jump=228948 0xd125c0 0 
* 0 
+8 0 38158
+4 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+8 0 38158
+5 0 38158
-5 0 38158
+5 0 38158
jcnd=38158/38158 0xd12a07 0 
* 0 
+6 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+8 0 38158
cfn=(508)
calls=38158 0xd03000 0 
* 0 10646082
+6 0 38158
+7 0 38158
+3 0 38158
+7 0 38158
+5 0 38158
+4 0 38158
+1 0 38158
+2 0 38158
+5 0 38158
+4 0 38158
+8 0 38158
+8 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
-8 0 38158
+5 0 38158
+3 0 38158
+2 0 76316
+3 0 76316
+4 0 76316
+4 0 76316
+3 0 76316
+6 0 76316
+4 0 76316
+3 0 76316
+4 0 76316
+5 0 76316
+6 0 76316
+3 0 76316
jcnd=38158/76316 +42 0 
* 0 
-31 0 534212
+6 0 534212
+4 0 534212
+3 0 534212
+4 0 534212
+5 0 534212
+6 0 534212
+3 0 534212
jcnd=267106/534212 +42 0 
* 0 
+2 0 305264
+7 0 305264
+6 0 305264
+5 0 305264
+4 0 305264
+4 0 305264
+5 0 305264
+4 0 305264
+3 0 305264
+2 0 610528
+3 0 610528
+3 0 610528
jcnd=534212/610528 -79 0 
* 0 
+2 0 76316
+3 0 76316
+4 0 76316
+3 0 76316
+3 0 76316
jcnd=38158/76316 +10 0 
* 0 
+2 0 38158
+3 0 38158
jump=38158 0xd12968 0 
* 0 
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
jcnd=38158/38158 0xd128c0 0 
* 0 
-3 0 38158
+3 0 38158
+6 0 38158
jump=38158 0xd12685 0 
* 0 
+32 0 1259214
+3 0 1259214
+4 0 1259214
+3 0 1259214
+3 0 1259214
+2 0 1259214
+3 0 1259214
jump=1259214 0xd127f0 0 
* 0 
+14 0 725002
+3 0 725002
jcnd=305264/725002 0xd1285a 0 
* 0 
+6 0 419738
+5 0 419738
+3 0 419738
+3 0 419738
+5 0 419738
+4 0 419738
+6 0 419738
+4 0 419738
+5 0 419738
jcnd=190790/419738 0xd12760 0 
* 0 
+6 0 992108
+4 0 992108
+3 0 992108
+2 0 992108
+5 0 992108
jcnd=953950/992108 +54 0 
* 0 
+2 0 992108
+5 0 992108
+4 0 992108
+4 0 992108
+4 0 992108
+5 0 992108
+4 0 992108
+8 0 992108
+4 0 992108
+4 0 992108
+5 0 992108
jump=992108 0xd12708 0 
* 0 
+5 0 953950
+4 0 953950
+2 0 953950
+3 0 953950
+2 0 953950
+2 0 953950
+5 0 953950
+8 0 953950
+5 0 953950
jcnd=610528/953950 0xd12bf9 0 
* 0 
-5 0 953950
+5 0 953950
jcnd=343422/953950 0xd12bf9 0 
* 0 
+6 0 953950
+3 0 953950
jcnd=763160/953950 +63 0 
* 0 
+2 0 190790
+7 0 190790
+3 0 190790
+3 0 190790
+3 0 190790
+4 0 190790
+8 0 190790
+3 0 190790
+7 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
cfn=(508)
calls=190790 0xd03000 0 
* 0 26481652
+6 0 190790
+1 0 190790
+1 0 190790
+5 0 190790
+4 0 190790
+5 0 190790
+8 0 190790
+4 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+5 0 190790
+4 0 190790
+4 0 190790
+2 0 190790
+3 0 190790
+4 0 190790
+5 0 190790
+3 0 190790
+4 0 190790
+4 0 190790
+5 0 190790
+4 0 190790
+3 0 190790
+4 0 190790
+5 0 190790
+5 0 190790
+3 0 190790
jcnd=152632/190790 +44 0 
* 0 
0xd12b2d 0 763160
+5 0 763160
+4 0 763160
+5 0 763160
+8 0 763160
+4 0 763160
+4 0 763160
+4 0 763160
+3 0 763160
+5 0 763160
+4 0 763160
+4 0 763160
+2 0 763160
+3 0 763160
+4 0 763160
+5 0 763160
+3 0 763160
+4 0 763160
+4 0 763160
+5 0 763160
+4 0 763160
+3 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
jcnd=457896/763160 +44 0 
* 0 
-45 0 343422
+5 0 343422
+3 0 343422
+4 0 343422
+4 0 343422
+5 0 343422
+4 0 343422
+3 0 343422
+4 0 343422
+5 0 343422
+5 0 343422
+3 0 343422
jcnd=343422/343422 +44 0 
* 0 
-29 0 763160
+5 0 763160
+4 0 763160
+3 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
jcnd=572370/763160 +44 0 
* 0 
+2 0 534212
+9 0 534212
+6 0 534212
+5 0 534212
+4 0 534212
+4 0 534212
+5 0 534212
+4 0 534212
+3 0 534212
+2 0 2060532
+3 0 2060532
+3 0 2060532
jcnd=763160/2060532 -79 0 
* 0 
+2 0 1297372
+4 0 1297372
+3 0 1297372
+4 0 1297372
+3 0 1297372
+3 0 1297372
jcnd=343422/1297372 0xd12b68 0 
* 0 
+2 0 953950
+5 0 953950
+5 0 953950
+3 0 953950
+3 0 953950
+4 0 953950
+4 0 953950
+5 0 953950
+3 0 953950
jcnd=343422/953950 0xd12ae0 0 
* 0 
-3 0 953950
+3 0 953950
jcnd=610528/953950 0xd12ae0 0 
* 0 
+6 0 953950
+5 0 953950
jump=953950 0xd12a92 0 
* 0 
+5 0 763160
+5 0 763160
+8 0 763160
+5 0 763160
+5 0 763160
jump=763160 0xd12a82 0 
* 0 

fn=(498) dsyrk_
0x92050 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+1 0 725002
+1 0 725002
+7 0 725002
+4 0 725002
+3 0 725002
+9 0 725002
+8 0 725002
+2 0 725002
+8 0 725002
+3 0 725002
+5 0 725002
+8 0 725002
+4 0 725002
+3 0 725002
+5 0 725002
+5 0 725002
+8 0 725002
+3 0 725002
+8 0 725002
+5 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+2 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+5 0 725002
+2 0 725002
+5 0 725002
+5 0 725002
+5 0 725002
+4 0 725002
jcnd=725002/725002 +15 0 
* 0 
+15 0 725002
+2 0 725002
+6 0 725002
+5 0 725002
+2 0 725002
+6 0 725002
+3 0 725002
+5 0 725002
+6 0 725002
+4 0 725002
+3 0 725002
+5 0 725002
+4 0 725002
+2 0 725002
+6 0 725002
+4 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
+6 0 725002
+4 0 725002
+2 0 725002
+6 0 725002
+3 0 725002
jcnd=725002/725002 +43 0 
* 0 
+2 0 725002
+8 0 725002
+9 0 725002
+6 0 725002
+7 0 725002
+1 0 725002
+1 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+1 0 725002
+2 0 725002
cfn=(482)
calls=725002 0x1e80e0 0 
* 0 153242728
+6 0 725002
+3 0 725002
+7 0 725002
+3 0 725002
+6 0 725002
+7 0 725002
+3 0 725002
+4 0 725002
+4 0 725002
+9 0 725002
+4 0 725002
+2 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+7 0 725002
+3 0 725002
+7 0 725002
+4 0 725002
+3 0 725002
+2 0 725002
cob=(3)
cfi=(48)
cfn=(500)
calls=725002 0xe0f0 255 
* 0 5075014
+6 0 725002
+2 0 725002
+6 0 725002
+12 0 725002
+7 0 725002
+2 0 725002
+5 0 725002
+3 0 725002
+3 0 725002
+2 0 725002
+3 0 725002
+2 0 725002
+2 0 725002
+3 0 725002
cfn=(502)
calls=725002 0x157e70 0 
* 0 661125508
+4 0 725002
+3 0 725002
cfn=(494) blas_memory_free
calls=725002 0x1e82e0 0 
* 0 1450004
+6 0 725002
jump=725002 0x92187 0 
* 0 

fn=(506)
0x15cdd0 0 725002
+1 0 725002
+3 0 725002
+3 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+3 0 725002
+1 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+5 0 725002
+9 0 725002
+4 0 725002
+2 0 725002
+7 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+8 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
jcnd=725002/725002 0x15d10b 0 
* 0 
0x15cf41 0 725002
+3 0 725002
jcnd=725002/725002 +43 0 
* 0 
+7 0 725002
+2 0 725002
+4 0 725002
+9 0 725002
+6 0 725002
+4 0 725002
+1 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+1 0 725002
+1 0 725002
+3 0 725002
+2 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+8 0 725002
+7 0 725002
+3 0 725002
+7 0 725002
+2 0 725002
+6 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+2 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
cfn=(508)
calls=725002 0xd03000 0 
* 0 17400048
+7 0 725002
+3 0 725002
+3 0 725002
+2 0 725002
+7 0 725002
+4 0 725002
+2 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+3 0 725002
+2 0 725002
cfn=(510) dgemm_beta_HASWELL
calls=725002 0xd0c600 0 
* 0 55825154
+6 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
+5 0 725002
+4 0 725002
+4 0 725002
+4 0 725002
+3 0 725002
+7 0 725002
+3 0 725002
+3 0 725002
+1 0 725002
+3 0 725002
cfn=(508)
calls=725002 0xd03000 0 
* 0 155341218
+6 0 725002
+4 0 725002
+1 0 725002
+8 0 725002
+1 0 725002
+5 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+2 0 725002
+2 0 725002
+2 0 725002
+6 0 725002
+5 0 725002
+5 0 725002
+5 0 725002
+4 0 725002
+3 0 725002
-30 0 1106582
+2 0 1106582
+6 0 1106582
+5 0 1106582
+5 0 1106582
+5 0 1106582
+4 0 1106582
+3 0 1106582
jcnd=1106582/1106582 -22 0 
* 0 
-22 0 3090798
+5 0 3090798
+5 0 3090798
+5 0 3090798
+4 0 3090798
+3 0 3090798
jcnd=1984216/3090798 -22 0 
* 0 
+2 0 1831584
+3 0 1831584
+3 0 1831584
+4 0 1831584
+3 0 1831584
jcnd=725002/1831584 +11 0 
* 0 
+2 0 1106582
+3 0 1106582
jump=1106582 -50 0 
* 0 
+6 0 725002
+7 0 725002
+3 0 725002
+7 0 725002
+3 0 725002
+3 0 725002
+4 0 725002
+6 0 725002
jump=725002 0x15cf4b 0 
* 0 
+34 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
jcnd=725002/725002 +67 0 
* 0 
+67 0 725002
+3 0 725002
jump=725002 0x15cf41 0 
* 0 

fn=(516) dtrsm_LNUN
0x1505a0 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+7 0 38158
+4 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+8 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+8 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
jcnd=38158/38158 +32 0 
* 0 
+32 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+8 0 38158
+6 0 38158
+6 0 38158
+9 0 38158
+6 0 38158
+9 0 38158
+7 0 38158
+3 0 38158
+7 0 38158
+3 0 38158
+8 0 38158
+5 0 38158
+8 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+7 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+7 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
jump=38158 +7 0 
* 0 
+7 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
cfn=(518) dtrsm_iutncopy_HASWELL
calls=38158 0xd28580 0 
* 0 31365876
+6 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+10 0 38158
+3 0 38158
+5 0 38158
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
cfn=(490)
calls=38158 0xd0a4a0 0 
* 0 5189488
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+8 0 38158
+2 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+8 0 38158
cfn=(520)
calls=38158 0xd11ab0 0 
* 0 59831744
+6 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+6 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+7 0 38158
+3 0 38158
+3 0 38158
jcnd=38158/38158 0x1508e7 0 
* 0 
0x1508e7 0 38158
+3 0 38158
jcnd=38158/38158 0x150999 0 
* 0 
0x150999 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+7 0 38158
+5 0 38158
+5 0 38158
+8 0 38158
+6 0 38158
+7 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158

fn=(518)
0xd28580 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+8 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+8 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+8 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+10 0 38158
+6 0 38158
+4 0 38158
+4 0 38158
+4 0 38158
-18 0 152632
+6 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+6 0 190790
+3 0 190790
+2 0 190790
+2 0 190790
jump=190790 0xd28731 0 
* 0 
+9 0 763160
jcnd=381580/763160 0xd2871d 0 
* 0 
+6 0 381580
+7 0 381580
+7 0 381580
+7 0 381580
+6 0 381580
+7 0 381580
+7 0 381580
+7 0 381580
+6 0 381580
+7 0 381580
+7 0 381580
+7 0 381580
+5 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+5 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+5 0 381580
+4 0 381580
+4 0 381580
+3 0 381580
+3 0 381580
jcnd=152632/381580 0xd287ef 0 
* 0 
-14 0 381580
+4 0 381580
+4 0 381580
+3 0 381580
+3 0 381580
+6 0 953950
+3 0 953950
jcnd=763160/953950 0xd28658 0 
* 0 
+6 0 190790
+6 0 190790
+7 0 190790
+4 0 190790
+4 0 190790
+6 0 190790
+7 0 190790
+6 0 190790
+6 0 190790
+5 0 190790
+6 0 190790
+9 0 190790
+6 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+8 0 190790
+3 0 190790
+9 0 190790
+8 0 190790
+6 0 190790
+5 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+6 0 190790
+4 0 190790
+5 0 190790
+5 0 190790
+3 0 190790
jcnd=152632/190790 0xd28731 0 
* 0 
+6 0 190790
+3 0 190790
+4 0 190790
+5 0 190790
+3 0 190790
+6 0 190790
jcnd=190790/190790 0xd28871 0 
* 0 
0xd28871 0 190790
+6 0 190790
jcnd=190790/190790 +59 0 
* 0 
+59 0 190790
+4 0 190790
+4 0 190790
+4 0 190790
+5 0 190790
jcnd=152632/190790 0xd28630 0 
* 0 
+6 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
jcnd=38158/38158 0xd289f5 0 
* 0 
0xd289f5 0 38158
+5 0 38158
jcnd=38158/38158 +93 0 
* 0 
+93 0 38158
+1 0 38158
+2 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158

fn=(480) dtrsm_
0x91c60 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+1 0 801318
+1 0 801318
+7 0 801318
+4 0 801318
+3 0 801318
+9 0 801318
+8 0 801318
+2 0 801318
+4 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+5 0 801318
+8 0 801318
+8 0 801318
+4 0 801318
+8 0 801318
+3 0 801318
+5 0 801318
+5 0 801318
+8 0 801318
+5 0 801318
+4 0 801318
+3 0 801318
+5 0 801318
+8 0 801318
+4 0 801318
+3 0 801318
+4 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+2 0 801318
+3 0 801318
+4 0 801318
+4 0 801318
+5 0 801318
+4 0 801318
+4 0 801318
jcnd=801318/801318 0x91f28 0 
* 0 
+26 0 801318
+2 0 801318
+2 0 801318
jcnd=38158/801318 +15 0 
* 0 
+2 0 763160
+5 0 763160
+2 0 763160
+6 0 801318
+3 0 801318
+4 0 801318
+2 0 801318
+3 0 801318
+4 0 801318
+4 0 801318
+5 0 801318
+3 0 801318
+4 0 801318
jcnd=801318/801318 +18 0 
* 0 
+18 0 801318
+3 0 801318
+5 0 801318
+5 0 801318
+4 0 801318
+3 0 801318
+4 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
+2 0 801318
+5 0 801318
+4 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
+4 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+5 0 801318
+3 0 801318
+4 0 801318
+4 0 801318
+6 0 801318
+3 0 801318
+6 0 801318
+4 0 801318
+2 0 801318
+6 0 801318
+3 0 801318
+2 0 801318
+3 0 801318
jcnd=801318/801318 +75 0 
* 0 
+2 0 801318
+8 0 801318
+9 0 801318
+6 0 801318
+7 0 801318
+1 0 801318
+1 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+2 0 801318
+33 0 801318
+2 0 801318
cfn=(482)
calls=801318 0x1e80e0 0 
* 0 169373564
+6 0 801318
+3 0 801318
+7 0 801318
+3 0 801318
+6 0 801318
+7 0 801318
+3 0 801318
+4 0 801318
+4 0 801318
+4 0 801318
+2 0 801318
+4 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+6 0 801318
jcnd=114474/801318 0x91f48 0 
* 0 
+6 0 801318
+12 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+7 0 801318
+2 0 801318
+5 0 801318
+3 0 801318
+3 0 801318
+3 0 801318
+2 0 801318
+2 0 801318
+3 0 801318
+3 0 801318
cfn=(516)
calls=38158 0x1505a0 0 
* 0 102873968
cfn=(486)
calls=763160 0x151740 0 
* 0 686271630
+4 0 801318
+3 0 801318
cfn=(494)
calls=801318 0x1e82e0 0 
* 0 1602636
+6 0 801318
jump=801318 0x91e0f 0 
* 0 
+62 0 801318
+3 0 801318
+2 0 801318
jump=801318 0x91d37 0 
* 0 
+27 0 114474
+6 0 114474
jcnd=76316/114474 0x91ea7 0 
* 0 
+6 0 38158
+7 0 38158
+3 0 38158
+6 0 38158
+5 0 38158
cob=(3)
cfi=(48)
cfn=(500)
calls=38158 0xe0f0 255 
* 0 267106
+6 0 38158
+5 0 38158
+2 0 38158
jcnd=38158/38158 0x91ea7 0 
* 0 

fn=(488)
0xd27070 0 763160
+2 0 763160
+2 0 763160
+2 0 763160
+2 0 763160
+1 0 763160
+1 0 763160
+5 0 763160
+4 0 763160
+5 0 763160
+5 0 763160
+5 0 763160
+3 0 763160
jcnd=610528/763160 0xd273e6 0 
* 0 
+6 0 152632
+3 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+3 0 152632
+3 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+8 0 152632
+4 0 152632
+5 0 152632
+8 0 152632
+5 0 152632
+3 0 152632
+8 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+5 0 152632
+4 0 152632
+5 0 152632
+3 0 152632
+4 0 152632
+5 0 152632
+3 0 152632
+5 0 152632
+9 0 152632
+4 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
-15 0 190790
+4 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+6 0 343422
+3 0 343422
+2 0 343422
jump=343422 0xd27224 0 
* 0 
+6 0 839476
jcnd=419738/839476 0xd27213 0 
* 0 
+6 0 419738
+7 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+7 0 419738
+7 0 419738
+7 0 419738
+6 0 419738
+7 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+7 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+5 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+6 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+5 0 419738
+4 0 419738
+4 0 419738
+3 0 419738
-11 0 419738
+4 0 419738
+4 0 419738
+3 0 419738
jcnd=190790/419738 0xd272da 0 
* 0 
+6 0 1182898
+3 0 1182898
jcnd=839476/1182898 0xd27150 0 
* 0 
+6 0 343422
+5 0 343422
+5 0 343422
+4 0 343422
+6 0 343422
+7 0 343422
+6 0 343422
+6 0 343422
+6 0 343422
+6 0 343422
+9 0 343422
+6 0 343422
+6 0 343422
+5 0 343422
+5 0 343422
+8 0 343422
+8 0 343422
+4 0 343422
+5 0 343422
+8 0 343422
+4 0 343422
+6 0 343422
+6 0 343422
+5 0 343422
+5 0 343422
+4 0 343422
+5 0 343422
+4 0 343422
+5 0 343422
+5 0 343422
+3 0 343422
jcnd=190790/343422 0xd27224 0 
* 0 
+6 0 343422
+5 0 343422
+5 0 343422
+4 0 343422
+3 0 343422
+5 0 343422
+4 0 343422
+5 0 343422
+3 0 343422
+3 0 343422
+3 0 343422
jcnd=267106/343422 0xd27374 0 
* 0 
+2 0 76316
+3 0 76316
+6 0 76316
jcnd=76316/76316 +87 0 
* 0 
+87 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+4 0 76316
+6 0 76316
jcnd=76316/76316 +57 0 
* 0 
-6 0 267106
+6 0 267106
jcnd=190790/267106 +57 0 
* 0 
+2 0 76316
+3 0 76316
+6 0 76316
jcnd=76316/76316 +42 0 
* 0 
+42 0 76316
+4 0 76316
+5 0 76316
+4 0 76316
+5 0 76316
-14 0 267106
+5 0 267106
+4 0 267106
+5 0 267106
jcnd=190790/267106 0xd27130 0 
* 0 
+6 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+5 0 152632
jcnd=114474/152632 0xd274eb 0 
* 0 
-5 0 610528
+5 0 610528
jcnd=457896/610528 0xd274eb 0 
* 0 
+6 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+3 0 190790
+4 0 190790
+3 0 190790
+6 0 190790
+4 0 190790
+3 0 190790
+2 0 190790
+8 0 190790
jump=190790 +64 0 
* 0 
+8 0 152632
+2 0 152632
+5 0 152632
+6 0 152632
+5 0 152632
+6 0 152632
+4 0 152632
+5 0 152632
+5 0 152632
+5 0 152632
+4 0 152632
+4 0 152632
+3 0 152632
+2 0 343422
+3 0 343422
jcnd=152632/343422 -59 0 
* 0 
+2 0 190790
+6 0 190790
+4 0 190790
+4 0 190790
+4 0 190790
+7 0 190790
+6 0 190790
+5 0 190790
+5 0 190790
+4 0 190790
+4 0 190790
+5 0 190790
+3 0 190790
+2 0 190790
+3 0 190790
+3 0 190790
+3 0 190790
+4 0 190790
+4 0 190790
+3 0 190790
+3 0 190790
+3 0 190790
+5 0 190790
jcnd=190790/190790 +36 0 
* 0 
+36 0 190790
+4 0 190790
+4 0 190790
+5 0 190790
jcnd=190790/190790 +84 0 
* 0 
-5 0 572370
+5 0 572370
jcnd=38158/572370 +84 0 
* 0 
+2 0 534212
+5 0 534212
+3 0 534212
+2 0 534212
+2 0 534212
+8 0 534212
jump=534212 +32 0 
* 0 
+10 0 305264
+2 0 305264
+5 0 305264
+6 0 305264
+4 0 305264
+3 0 305264
+2 0 839476
+3 0 839476
jcnd=305264/839476 -25 0 
* 0 
+2 0 534212
+4 0 534212
+4 0 534212
+6 0 534212
+6 0 534212
+3 0 534212
+2 0 763160
+1 0 763160
+2 0 763160
+1 0 763160
+2 0 763160
+2 0 763160
+2 0 763160
+2 0 763160

fn=(494)
0x1e82e0 0 1526320
+7 0 1526320

fn=(510)
0xd0c600 0 725002
+5 0 725002
+5 0 725002
+4 0 725002
+3 0 725002
+6 0 725002
+3 0 725002
+6 0 725002
+4 0 725002
+6 0 725002
+6 0 725002
+3 0 725002
+4 0 725002
+3 0 725002
+4 0 725002
jcnd=686844/725002 +66 0 
* 0 
-14 0 1106582
+3 0 1106582
+4 0 1106582
+3 0 1106582
+4 0 1106582
jcnd=763160/1106582 +66 0 
* 0 
+2 0 381580
+5 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+6 0 381580
+4 0 381580
+3 0 381580
+2 0 381580
+8 0 381580
+3 0 381580
+4 0 381580
-7 0 1450004
+3 0 1450004
+4 0 1450004
+2 0 1831584
+7 0 1831584
+5 0 1831584
+4 0 1831584
+3 0 1831584
jcnd=1526320/1831584 -12 0 
* 0 
-12 0 3128956
+5 0 3128956
+4 0 3128956
+3 0 3128956
jcnd=1602636/3128956 -12 0 
* 0 
+2 0 1831584
+2 0 1831584
+3 0 1831584
jcnd=1106582/1831584 0xd0c630 0 
* 0 
+2 0 725002
jump=725002 0xd0c7b0 0 
* 0 
0xd0c7b0 0 725002
+3 0 725002

ob=(7)
fl=(46)
fn=(460) ilaenv_
0x1808a0 0 38158
+2 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+4 0 38158
+2 0 38158
+8 0 38158
+8 0 38158
+9 0 38158
+5 0 38158
+2 0 38158
+8 0 38158
+3 0 38158
+6 0 38158
+7 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
jump=38158 0x1809a0 0 
* 0 
+2 0 38158
+7 0 38158
+6 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
jcnd=38158/38158 0x180b3e 0 
* 0 
+19 0 38158
+5 0 38158
+9 0 38158
+2 0 38158
+6 0 38158
+4 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+96 0 38158
+4 0 38158
jcnd=38158/38158 0x180cd8 0 
* 0 
+15 0 38158
+5 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
jcnd=38158/38158 +53 0 
* 0 
+53 0 38158
+2 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
jcnd=38158/38158 +10 0 
* 0 
+10 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+3 0 38158
+6 0 38158
+7 0 38158
jcnd=38158/38158 0x1808f0 0 
* 0 
0x180b3e 0 38158
+5 0 38158
jump=38158 0x180920 0 
* 0 
0x180cd8 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+5 0 38158
+4 0 38158
+2 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
jcnd=38158/38158 +10 0 
* 0 
+10 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
cob=(1)
cfi=(6)
cfn=(464)
calls=38158 0x1600e0 0 
* 0 572370
* 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
jump=38158 0x1809b3 0 
* 0 

fn=(468) dpotrf2_
0x212990 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+7 0 38158
+2 0 38158
+3 0 38158
+5 0 38158
+2 0 38158
+3 0 38158
+1 0 38158
+1 0 38158
+3 0 38158
+4 0 38158
+3 0 38158
+5 0 38158
+9 0 38158
+5 0 38158
+2 0 38158
+7 0 38158
cfn=(452) lsame_
calls=38158 0x181eb0 0 
* 0 228948
* 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
jcnd=38158/38158 0x212a60 0 
* 0 
+42 0 38158
+5 0 38158
+9 0 38158
+6 0 38158
+4 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+27 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
jcnd=38158/38158 0x212af0 0 
* 0 
0x212af0 0 38158
+2 0 38158
+5 0 38158
+6 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+5 0 38158
+2 0 38158
+4 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
cfn=(469) dpotrf2_'2
calls=38158 0x212990 0 
* 0 799319940
+5 0 38158
+4 0 38158
+5 0 38158
+2 0 38158
+6 0 38158
+3 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+6 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+7 0 38158
+3 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
+2 0 38158
+5 0 38158
+2 0 38158
+5 0 38158
+1 0 38158
+5 0 38158
+7 0 38158
+1 0 38158
+2 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+7 0 38158
cob=(8)
cfi=(47)
cfn=(480)
calls=38158 0x91c60 0 
* 0 198855406
* 0 38158
+5 0 38158
+7 0 38158
+3 0 38158
+7 0 38158
+7 0 38158
+7 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+5 0 38158
+5 0 38158
+2 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+1 0 38158
+5 0 38158
+3 0 38158
cob=(8)
cfi=(47)
cfn=(498)
calls=38158 0x92050 0 
* 0 136428918
* 0 38158
+5 0 38158
+4 0 38158
+4 0 38158
+3 0 38158
+2 0 38158
+4 0 38158
+5 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+6 0 38158
cfn=(469)
calls=38158 0x212990 0 
* 0 799319916
+5 0 38158
+4 0 38158
+2 0 38158
jcnd=38158/38158 0x212a23 0 
* 0 

fn=(469)
0x212990 0 1450004
+2 0 1450004
+3 0 1450004
+2 0 1450004
+3 0 1450004
+7 0 1450004
+2 0 1450004
+3 0 1450004
+5 0 1450004
+2 0 1450004
+3 0 1450004
+1 0 1450004
+1 0 1450004
+3 0 1450004
+4 0 1450004
+3 0 1450004
+5 0 1450004
+9 0 1450004
+5 0 1450004
+2 0 1450004
+7 0 1450004
cfn=(452)
calls=1450004 0x181eb0 0 
* 0 8700024
* 0 1450004
+5 0 1450004
+3 0 1450004
+2 0 1450004
+6 0 1450004
+3 0 1450004
+2 0 1450004
+2 0 1450004
+5 0 1450004
+3 0 1450004
+2 0 1450004
jcnd=1450004/1450004 0x212a60 0 
* 0 
+42 0 1450004
+5 0 1450004
+9 0 1450004
+6 0 1450004
+4 0 1450004
+1 0 1450004
+1 0 1450004
+2 0 1450004
+2 0 1450004
+2 0 1450004
+2 0 1450004
+27 0 1450004
+3 0 1450004
+2 0 1450004
+6 0 1450004
+2 0 1450004
+2 0 1450004
+3 0 1450004
jcnd=686844/1450004 0x212af0 0 
* 0 
+2 0 763160
+4 0 763160
+6 0 763160
+6 0 763160
+2 0 763160
+3 0 763160
cfn=(472) disnan_
calls=763160 0x2e32f0 0 
* 0 8394760
* 0 763160
+5 0 763160
+2 0 763160
+6 0 763160
+6 0 763160
+6 0 763160
jump=763160 0x212a23 0 
* 0 
+78 0 686844
+2 0 686844
+5 0 686844
+6 0 686844
+3 0 686844
+2 0 686844
+3 0 686844
+3 0 686844
+5 0 686844
+2 0 686844
+4 0 686844
+3 0 686844
+4 0 686844
+5 0 686844
+3 0 686844
+5 0 686844
cfn=(469)
calls=686844 0x212990 0 
* 0 992751000
+5 0 686844
+4 0 686844
+5 0 686844
+2 0 686844
+6 0 686844
+3 0 686844
+5 0 686844
+4 0 686844
+4 0 686844
+3 0 686844
+3 0 686844
+3 0 686844
+2 0 686844
+5 0 686844
+3 0 686844
+6 0 686844
+4 0 686844
+5 0 686844
+4 0 686844
+3 0 686844
+2 0 686844
+7 0 686844
+3 0 686844
+7 0 686844
+2 0 686844
+7 0 686844
+2 0 686844
+5 0 686844
+2 0 686844
+5 0 686844
+1 0 686844
+5 0 686844
+7 0 686844
+1 0 686844
+2 0 686844
+1 0 686844
+2 0 686844
+2 0 686844
+5 0 686844
+7 0 686844
cob=(8)
cfi=(47)
cfn=(480)
calls=686844 0x91c60 0 
* 0 654662962
* 0 686844
+5 0 686844
+7 0 686844
+3 0 686844
+7 0 686844
+7 0 686844
+7 0 686844
+3 0 686844
+3 0 686844
+2 0 686844
+3 0 686844
+4 0 686844
+5 0 686844
+4 0 686844
+3 0 686844
+2 0 686844
+5 0 686844
+5 0 686844
+2 0 686844
+1 0 686844
+1 0 686844
+2 0 686844
+2 0 686844
+1 0 686844
+5 0 686844
+3 0 686844
cob=(8)
cfi=(47)
cfn=(498)
calls=686844 0x92050 0 
* 0 776539590
* 0 686844
+5 0 686844
+4 0 686844
+4 0 686844
+3 0 686844
+2 0 686844
+4 0 686844
+5 0 686844
+3 0 686844
+5 0 686844
+5 0 686844
+3 0 686844
+3 0 686844
+3 0 686844
+6 0 686844
cfn=(469)
calls=686844 0x212990 0 
* 0 1599535552
+5 0 686844
+4 0 686844
+2 0 686844
jcnd=686844/686844 0x212a23 0 
* 0 

fn=(456) dpotrf_
0x212350 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+7 0 38158
+2 0 38158
+3 0 38158
+1 0 38158
+3 0 38158
+1 0 38158
+3 0 38158
+7 0 38158
+3 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+9 0 38158
+5 0 38158
+2 0 38158
+7 0 38158
cfn=(452)
calls=38158 0x181eb0 0 
* 0 228948
* 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+4 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
jcnd=38158/38158 +97 0 
* 0 
+42 0 38158
+5 0 38158
+9 0 38158
+6 0 38158
+7 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+18 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+2 0 38158
+4 0 38158
+7 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
+2 0 38158
cfn=(460)
calls=38158 0x1808a0 0 
* 0 4578960
* 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+6 0 38158
+4 0 38158
+2 0 38158
jcnd=38158/38158 0x2126e0 0 
* 0 
0x2126e0 0 38158
+5 0 38158
+6 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
cfn=(468)
calls=38158 0x212990 0 
* 0 1939876828
* 0 38158
+5 0 38158
jump=38158 0x2123e9 0 
* 0 

fn=(472)
0x2e32f0 0 763160
+3 0 763160
+2 0 763160
cfn=(476) dlaisnan_
calls=763160 -37 0 
* 0 5342120
* 0 763160

fn=(476)
0x2e32d0 0 763160
+4 0 763160
+2 0 763160
+4 0 763160
+5 0 763160
+3 0 763160
+3 0 763160

fn=(448)
0x211270 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+5 0 38158
+2 0 38158
+3 0 38158
+5 0 38158
+2 0 38158
+3 0 38158
+1 0 38158
+3 0 38158
+7 0 38158
+1 0 38158
+3 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+4 0 38158
+9 0 38158
+5 0 38158
+2 0 38158
+7 0 38158
cfn=(452)
calls=38158 0x181eb0 0 
* 0 228948
* 0 38158
+5 0 38158
+2 0 38158
+6 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+6 0 38158
+4 0 38158
+2 0 38158
jcnd=38158/38158 0x2113d0 0 
* 0 
+63 0 38158
+5 0 38158
+9 0 38158
+6 0 38158
+4 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
0x2113d0 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+6 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
cfn=(456)
calls=38158 0x212350 0 
* 0 1947661060
* 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+3 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+4 0 38158
+5 0 38158
cfn=(514) dpotrs_
calls=38158 0x212ed0 0 
* 0 233287990
* 0 38158
+5 0 38158
+4 0 38158
jump=38158 0x211340 0 
* 0 

fn=(452)
0x181eb0 0 1602636
+3 0 1602636
+3 0 1602636
+5 0 1602636
+2 0 1602636
jcnd=1602636/1602636 +40 0 
* 0 
+40 0 1602636

fn=(514)
0x212ed0 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+1 0 38158
+3 0 38158
+5 0 38158
+1 0 38158
+3 0 38158
+7 0 38158
+4 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+5 0 38158
+9 0 38158
+5 0 38158
+2 0 38158
+7 0 38158
cfn=(452)
calls=38158 0x181eb0 0 
* 0 228948
* 0 38158
+5 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+5 0 38158
+3 0 38158
+4 0 38158
+6 0 38158
+4 0 38158
jcnd=38158/38158 0x213038 0 
* 0 
+65 0 38158
+5 0 38158
+9 0 38158
+6 0 38158
+4 0 38158
+1 0 38158
+1 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
0x213038 0 38158
+3 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+6 0 38158
+2 0 38158
+6 0 38158
+3 0 38158
+6 0 38158
+4 0 38158
+7 0 38158
+3 0 38158
+2 0 38158
+2 0 38158
+3 0 38158
+7 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
+7 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+2 0 38158
+2 0 38158
+5 0 38158
+2 0 38158
+2 0 38158
cob=(8)
cfi=(47)
cfn=(480)
calls=38158 0x91c60 0 
* 0 112313062
* 0 38158
+5 0 38158
+4 0 38158
+3 0 38158
+3 0 38158
+7 0 38158
+2 0 38158
+2 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
+7 0 38158
+2 0 38158
+7 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
+2 0 38158
cob=(8)
cfi=(47)
cfn=(480)
calls=38158 0x91c60 0 
* 0 116777548
* 0 38158
+5 0 38158
+4 0 38158
jump=38158 0x212fa0 0 
* 0 

ob=(6)
fl=(1)
fn=(168)
0xba70 0 3053916
+4 0 3053916
+5 0 3053916
cfn=(170) __pthread_mutex_unlock_usercnt
calls=3053916 0xb970 0 
* 0 64135736

fn=(8) __condvar_cancel_waiting
0xd710 0 248
+2 0 248
+3 0 248
+4 0 248
+2 0 248
+2 0 248
+2 0 248
+3 0 248
+1 0 248
+2 0 248
+1 0 248
+3 0 248
+4 0 248
+3 0 248
+2 0 248
+6 0 248
+2 0 248
+3 0 248
+5 0 248
+2 0 248
+4 0 248
+3 0 248
+3 0 248
+2 0 248
+3 0 248
+3 0 248
+3 0 248
+4 0 248
+3 0 248
+3 0 248
+2 0 248
+5 0 248
+6 0 248
+3 0 248
+3 0 248
+3 0 248
+3 0 248
+4 0 248
+1 0 248
+1 0 248
+2 0 248
+2 0 248
+2 0 248
+2 0 248
cfn=(10) __condvar_release_lock
calls=248 0xd650 0 
* 0 2728

fn=(14) __pthread_mutex_cond_lock
0xc0b0 0 248
+4 0 248
+3 0 248
+2 0 248
+2 0 248
+6 0 248
+3 0 248
+2 0 248
+4 0 248
+3 0 248
+2 0 248
+2 0 248
+6 0 248
+5 0 248
+2 0 248
+5 0 248
jcnd=248/248 +24 0 
* 0 
+24 0 248
+4 0 248
+2 0 248
+6 0 248
+8 0 248
+4 0 248
+2 0 248
+4 0 248

fn=(594) __pthread_enable_asynccancel
0x10dd0 0 248
+4 0 248
+8 0 248
+3 0 248
+4 0 248
+3 0 248
+2 0 248
+11 0 248
+2 0 248
+4 0 248
+4 0 248
+2 0 248

fn=(0)
0xdc00 0 248
+4 0 248
+2 0 248
+2 0 248
+2 0 248
+2 0 248
+1 0 248
+1 0 248
+7 0 248
+9 0 248
+8 0 248
+2 0 248
+8 0 248
+6 0 248
+3 0 248
+3 0 248
+3 0 248
+5 0 248
+5 0 248
+6 0 248
+2 0 248
+5 0 248
+3 0 248
+3 0 248
+4 0 248
+4 0 248
+6 0 248
+5 0 248
+3 0 248
+3 0 248
+3 0 248
+3 0 248
+2 0 248
cfn=(170)
calls=248 0xb970 0 
* 0 4712
+5 0 248
+4 0 248
+2 0 248
+6 0 248
+4 0 248
+8 0 248
+5 0 248
+4 0 248
+5 0 248
+4 0 248
+5 0 248
+5 0 248
+4 0 248
+5 0 248
+5 0 248
+5 0 248
+5 0 248
+2 0 248
+2 0 248
+2 0 248
jcnd=248/248 0xddc0 0 
* 0 
+37 0 248
+2 0 248
+3 0 248
cfn=(12) __condvar_confirm_wakeup
calls=248 0xd5f0 0 
* 0 1736
+5 0 248
+3 0 248
cfn=(14)
calls=248 0xc0b0 0 
* 0 5952
+5 0 248
+2 0 248
+5 0 248
+8 0 248
+9 0 248
+6 0 248
+7 0 248
+1 0 248
+1 0 248
+2 0 248
+2 0 248
+2 0 248
+2 0 248
0xddc0 0 248
+5 0 248
+6 0 248
+4 0 248
+2 0 248
+6 0 248
+4 0 248
+3 0 248
+4 0 248
+6 0 248
+5 0 248
+5 0 248
+7 0 248
+8 0 248
+5 0 248
+8 0 248
+8 0 248
+7 0 248
cfn=(592) _pthread_cleanup_push
calls=248 0x109d0 0 
* 0 1736
+5 0 248
+5 0 248
+6 0 248
+3 0 248
+2 0 248
cfn=(594)
calls=248 0x10dd0 0 
* 0 2976
+5 0 247
+2 0 247
+6 0 247
+3 0 247
+4 0 247
+6 0 247
+3 0 247
+2 0 247
+3 0 247
+5 0 247
+2 0 248
+6 0 248
jcnd=248/248 0xdfa8 0 
* 0 
0xdf74 0 248
+5 0 248
+2 0 248
+3 0 248
+3 0 248
cfn=(6) __condvar_dec_grefs
calls=248 0xd6b0 0 
* 0 1736
+5 0 248
+4 0 248
+2 0 248
+3 0 248
+3 0 248
cfn=(8)
calls=248 0xd710 0 
* 0 13640
+5 0 248
+8 0 248
jump=248 0xdcf9 0 
* 0 
+9 0 248
+4 0 248
+5 0 248
cfn=(2) __pthread_disable_asynccancel
calls=248 0x10e30 0 
* 0 3224
+5 0 248
+5 0 248
+3 0 248
+2 0 248
+3 0 248
+2 0 248
+3 0 248
+6 0 248
+5 0 248
+2 0 248
+2 0 248
+4 0 248
cfn=(4) _pthread_cleanup_pop
calls=248 0x10a00 0 
* 0 1488
+5 0 248
+5 0 248
+6 0 248
jump=248 0xdf74 0 
* 0 

fn=(4)
0x10a00 0 248
+4 0 248
+4 0 248
+9 0 248
+2 0 248
jcnd=248/248 +21 0 
* 0 
+21 0 248

fn=(6)
0xd6b0 0 248
+2 0 248
+5 0 248
+5 0 248
+4 0 248
+3 0 248
+2 0 248

fn=(96)
0xa240 0 3053916
+4 0 3053916
+3 0 3053916
+2 0 3053916
+2 0 3053916
+6 0 3053916
+3 0 3053916
+6 0 3053916
+4 0 3053916
+3 0 3053916
+2 0 3053916
+6 0 3053916
+6 0 3053916
+2 0 3053916
+2 0 3053916
+6 0 3053916
+5 0 3053916
+2 0 3053916
+2 0 3053916
+5 0 3053916
jcnd=3053915/3053916 +24 0 
* 0 
+2 0 1
+3 0 1
+7 0 1
cfn=(1654) __lll_lock_wait
calls=1 0x10ec0 0 
* 0 20
+5 0 1
+7 0 1
+4 0 1
+2 0 1
-6 0 3053915
+4 0 3053915
+2 0 3053915
+6 0 3053916
+8 0 3053916
+5 0 3053916
+4 0 3053916
+2 0 3053916
+4 0 3053916

fn=(170)
0xb970 0 3054164
+4 0 3054164
+3 0 3054164
+3 0 3054164
+2 0 3054164
+3 0 3054164
+5 0 3054164
+4 0 3054164
+2 0 3054164
+2 0 3054164
+2 0 3054164
+7 0 3054164
+2 0 3054164
jcnd=3053916/3054164 +41 0 
* 0 
+2 0 3054164
+6 0 3054164
+2 0 3054164
+3 0 3054164
jcnd=3053914/3054164 +24 0 
* 0 
+2 0 250
+3 0 250
+7 0 250
cfn=(192) __lll_unlock_wake
calls=250 0x10f60 0 
* 0 2500
+5 0 250
+7 0 250
+3 0 250
-3 0 3053914
+3 0 3053914
+1 0 3053916
+4 0 3053916
jump=3053916 -43 0 
* 0 

fn=(192)
0x10f60 0 250
+1 0 250
+1 0 250
+6 0 250
+6 0 250
+5 0 250
+5 0 250
+2 0 250
+1 0 250
+1 0 250

fn=(484)
0xee50 0 1526320
+4 0 1526320
+3 0 1526320
+2 0 1526320
+2 0 1526320
+4 0 1526320
+4 0 1526320
+9 0 1526320
+3 0 1526320
+4 0 1526320
+3 0 1526320
+2 0 1526320
+2 0 1526320
+7 0 1526320
+3 0 1526320
+4 0 1526320
+4 0 1526320
+2 0 1526320

fn=(1654)
0x10ec0 0 1
+2 0 1
+1 0 1
+3 0 1
+5 0 1
+6 0 1
+2 0 1
jcnd=1/1 +9 0 
* 0 
+2 0 1
+5 0 1
+2 0 2
+2 0 2
+2 0 2
+2 0 2
jcnd=1/2 -13 0 
* 0 
+2 0 1
+1 0 1
+2 0 1

fn=(10)
0xd650 0 248
+3 0 248
+4 0 248
+2 0 248
+2 0 248
+3 0 248
+4 0 248
+2 0 248
+3 0 248
+3 0 248
+2 0 248

fn=(12)
0xd5f0 0 248
+4 0 248
+5 0 248
+4 0 248
+3 0 248
+3 0 248
+2 0 248

fn=(2)
0x10e30 0 248
+4 0 248
+6 0 248
+2 0 248
+8 0 248
+3 0 248
+4 0 248
+11 0 248
+2 0 248
+3 0 248
+3 0 248
+3 0 248
+2 0 248

fn=(592)
0x109d0 0 248
+4 0 248
+3 0 248
+4 0 248
+9 0 248
+4 0 248
+9 0 248

totals: 221360966953
